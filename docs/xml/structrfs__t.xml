<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structrfs__t" kind="struct" language="C++" prot="public">
    <compoundname>rfs_t</compoundname>
    <includes local="no">retrofs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structrfs__t_1ae6bd3831a1f0eb8a66863fce2accc813" prot="public" static="no" mutable="no">
        <type><ref refid="structstorage__device__t" kindref="compound">storage_device_t</ref> *</type>
        <definition>storage_device_t* rfs_t::dev</definition>
        <argsstring></argsstring>
        <name>dev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backing block device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="141" column="18" bodyfile="include/retrofs.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a8fb7ae9882cdc7d92e480d3e7dbe6469" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rfs_t::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start sector of the filesystem on the device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="142" column="10" bodyfile="include/retrofs.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a5d71303a722c42e27f10f13e92bfcf96" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rfs_t::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of the filesystem in sectors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="143" column="10" bodyfile="include/retrofs.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a992cd5e42aa81e84c1d8cfe69a9eb23f" prot="public" static="no" mutable="no">
        <type><ref refid="structrfs__description__block__t" kindref="compound">rfs_description_block_t</ref> *</type>
        <definition>rfs_description_block_t* rfs_t::desc</definition>
        <argsstring></argsstring>
        <name>desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to loaded description block. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="144" column="25" bodyfile="include/retrofs.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a52864da269be51c23c7fce7e29685aaa" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rfs_t::total_sectors</definition>
        <argsstring></argsstring>
        <name>total_sectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Total sectors in this filesystem. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="145" column="10" bodyfile="include/retrofs.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a240061e3f45d030235e91c7ab2a28659" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rfs_t::cache_block</definition>
        <argsstring></argsstring>
        <name>cache_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Owning pointer for all L1/L2 arrays and build buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="147" column="6" bodyfile="include/retrofs.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a14c558f771f388314cfb5f593ae3ef71" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rfs_t::cache_block_size</definition>
        <argsstring></argsstring>
        <name>cache_block_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocated cache block size (for debugging). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="148" column="8" bodyfile="include/retrofs.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a0bab09344d209202ea44d7a5b1f6db33" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rfs_t::l1_groups</definition>
        <argsstring></argsstring>
        <name>l1_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of L1 groups. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="150" column="10" bodyfile="include/retrofs.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1aa523c3a6e21ecd84ef536fba93368b55" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rfs_t::l2_groups</definition>
        <argsstring></argsstring>
        <name>l2_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of L2 super-groups. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="151" column="10" bodyfile="include/retrofs.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a14d48de7020260a67a176212babbf7b0" prot="public" static="no" mutable="no">
        <type>uint16_t *</type>
        <definition>uint16_t* rfs_t::l1_free_count</definition>
        <argsstring></argsstring>
        <name>l1_free_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array of free sector counts for each L1 group. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="154" column="10" bodyfile="include/retrofs.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1aba2b1b55c2e0a690c7c34eb5507ab03a" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rfs_t::l1_not_full</definition>
        <argsstring></argsstring>
        <name>l1_not_full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitset: group has any free sector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="155" column="9" bodyfile="include/retrofs.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a8dd775506ab7a5ce7d22223548de0ec7" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rfs_t::l1_all_free</definition>
        <argsstring></argsstring>
        <name>l1_all_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitset: group is entirely free. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="156" column="9" bodyfile="include/retrofs.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a1d16e906b5810739a5372f9773d32abf" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rfs_t::l2_not_full</definition>
        <argsstring></argsstring>
        <name>l2_not_full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitset: super-group has any free sector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="159" column="9" bodyfile="include/retrofs.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrfs__t_1a4116fff7c749a65c76c447ed64f0a673" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rfs_t::l2_all_free</definition>
        <argsstring></argsstring>
        <name>l2_all_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitset: super-group is entirely free. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/retrofs.h" line="160" column="9" bodyfile="include/retrofs.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>In-memory RetroFS mount context. </para>
    </briefdescription>
    <detaileddescription>
<para>Holds the filesystemâ€™s geometry, cached metadata, and free space tracking structures. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="14">
        <label>size_t</label>
      </node>
      <node id="13">
        <label>void *</label>
      </node>
      <node id="3">
        <label>uint64_t</label>
      </node>
      <node id="2">
        <label>rfs_description_block_t</label>
        <link refid="structrfs__description__block__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>free_space_map_checksum</edgelabel>
          <edgelabel>free_space_map_length</edgelabel>
          <edgelabel>free_space_map_start</edgelabel>
          <edgelabel>identifier</edgelabel>
          <edgelabel>root_directory</edgelabel>
          <edgelabel>sequence</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>creation_time</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>rfs_t</label>
        <link refid="structrfs__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>l1_groups</edgelabel>
          <edgelabel>l2_groups</edgelabel>
          <edgelabel>length</edgelabel>
          <edgelabel>start</edgelabel>
          <edgelabel>total_sectors</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>l1_free_count</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>dev</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>cache_block_size</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>l1_all_free</edgelabel>
          <edgelabel>l1_not_full</edgelabel>
          <edgelabel>l2_all_free</edgelabel>
          <edgelabel>l2_not_full</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>cache_block</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>storage_device_t</label>
        <link refid="structstorage__device__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>opaque1</edgelabel>
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>cache</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ui</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>block_size</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>blockread</edgelabel>
          <edgelabel>blockwrite</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>blockclear</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>opaque2</edgelabel>
          <edgelabel>opaque3</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>uint16_t</label>
      </node>
      <node id="12">
        <label>int</label>
      </node>
      <node id="7">
        <label>struct block_cache *</label>
      </node>
      <node id="11">
        <label>uint32_t</label>
      </node>
      <node id="15">
        <label>uint8_t</label>
      </node>
      <node id="8">
        <label>storage_device_ui_t</label>
        <link refid="structstorage__device__ui__t"/>
        <childnode refid="9" relation="usage">
          <edgelabel>label</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>is_optical</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>bool</label>
      </node>
      <node id="4">
        <label>int64_t</label>
      </node>
      <node id="9">
        <label>char</label>
      </node>
    </collaborationgraph>
    <location file="include/retrofs.h" line="140" column="1" bodyfile="include/retrofs.h" bodystart="140" bodyend="161"/>
    <listofallmembers>
      <member refid="structrfs__t_1a240061e3f45d030235e91c7ab2a28659" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>cache_block</name></member>
      <member refid="structrfs__t_1a14c558f771f388314cfb5f593ae3ef71" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>cache_block_size</name></member>
      <member refid="structrfs__t_1a992cd5e42aa81e84c1d8cfe69a9eb23f" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>desc</name></member>
      <member refid="structrfs__t_1ae6bd3831a1f0eb8a66863fce2accc813" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>dev</name></member>
      <member refid="structrfs__t_1a8dd775506ab7a5ce7d22223548de0ec7" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l1_all_free</name></member>
      <member refid="structrfs__t_1a14d48de7020260a67a176212babbf7b0" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l1_free_count</name></member>
      <member refid="structrfs__t_1a0bab09344d209202ea44d7a5b1f6db33" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l1_groups</name></member>
      <member refid="structrfs__t_1aba2b1b55c2e0a690c7c34eb5507ab03a" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l1_not_full</name></member>
      <member refid="structrfs__t_1a4116fff7c749a65c76c447ed64f0a673" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l2_all_free</name></member>
      <member refid="structrfs__t_1aa523c3a6e21ecd84ef536fba93368b55" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l2_groups</name></member>
      <member refid="structrfs__t_1a1d16e906b5810739a5372f9773d32abf" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>l2_not_full</name></member>
      <member refid="structrfs__t_1a5d71303a722c42e27f10f13e92bfcf96" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>length</name></member>
      <member refid="structrfs__t_1a8fb7ae9882cdc7d92e480d3e7dbe6469" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>start</name></member>
      <member refid="structrfs__t_1a52864da269be51c23c7fce7e29685aaa" prot="public" virt="non-virtual"><scope>rfs_t</scope><name>total_sectors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
