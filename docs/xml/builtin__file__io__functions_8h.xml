<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="builtin__file__io__functions_8h" kind="file" language="C++">
    <compoundname>builtin_file_io_functions.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="basic_8h" local="yes">include/basic.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>include/basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="152">
        <label>src/memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="11">
        <label>src/basic/console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="101">
        <label>src/basic/reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="139">
        <label>src/fs/fat32/main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="135">
        <label>src/fs/fat32/createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="70">
        <label>src/fs/retrofs/helpers.c</label>
        <link refid="fs_2retrofs_2helpers_8c"/>
      </node>
      <node id="2">
        <label>include/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>src/basic/tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="9">
        <label>include/basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>src/errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="62">
        <label>include/ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>src/fs/fat32/cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="18">
        <label>src/fs/filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="112">
        <label>src/block/ahci/main.c</label>
        <link refid="block_2ahci_2main_8c"/>
      </node>
      <node id="106">
        <label>src/basic/variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="75">
        <label>src/fs/retrofs/unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="41">
        <label>src/installer/helpers.c</label>
        <link refid="installer_2helpers_8c"/>
      </node>
      <node id="4">
        <label>include/acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>src/random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="6">
        <label>include/arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>src/net/net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="7">
        <label>include/basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>include/fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>src/interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="85">
        <label>include/udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>src/printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="94">
        <label>src/basic/function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="49">
        <label>include/iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>include/tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>src/taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="162">
        <label>src/net/queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="23">
        <label>include/devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/block_cache.h</label>
        <link refid="block__cache_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>src/installer/main.c</label>
        <link refid="installer_2main_8c"/>
      </node>
      <node id="68">
        <label>src/fs/retrofs/fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="26">
        <label>include/drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>src/input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="67">
        <label>src/fs/retrofs/format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="169">
        <label>src/stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="38">
        <label>include/installer.h</label>
        <link refid="installer_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>src/fs/fat32/writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="98">
        <label>src/basic/maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="159">
        <label>src/net/icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="118">
        <label>src/block/ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="119">
        <label>src/buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="77">
        <label>include/rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>src/net/ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="45">
        <label>src/installer/tui.c</label>
        <link refid="tui_8c"/>
      </node>
      <node id="149">
        <label>src/keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="153">
        <label>src/module_loader.c</label>
        <link refid="module__loader_8c"/>
      </node>
      <node id="92">
        <label>src/basic/debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="66">
        <label>src/fs/retrofs/createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="93">
        <label>src/basic/file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="73">
        <label>src/fs/retrofs/truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="123">
        <label>src/debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="133">
        <label>src/fs/devfs/devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="132">
        <label>src/fs/devfs/debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="156">
        <label>src/net/descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="102">
        <label>src/basic/sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="173">
        <label>src/video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="57">
        <label>include/module.h</label>
        <link refid="module_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>src/fs/retrofs/unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="86">
        <label>src/acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="40">
        <label>src/installer/gpt_writer.c</label>
        <link refid="gpt__writer_8c"/>
      </node>
      <node id="95">
        <label>src/basic/graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="115">
        <label>src/block/ahci/storage_device.c</label>
        <link refid="storage__device_8c"/>
      </node>
      <node id="151">
        <label>src/maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="71">
        <label>src/fs/retrofs/main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="55">
        <label>src/e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="124">
        <label>src/debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="12">
        <label>src/basic/double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="172">
        <label>src/timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="114">
        <label>src/block/ahci/sense.c</label>
        <link refid="sense_8c"/>
      </node>
      <node id="20">
        <label>include/cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>src/flanterm/flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="165">
        <label>src/pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="99">
        <label>src/basic/peekpoke.c</label>
        <link refid="peekpoke_8c"/>
      </node>
      <node id="14">
        <label>src/basic/int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="109">
        <label>src/block/ahci/enquiry.c</label>
        <link refid="enquiry_8c"/>
      </node>
      <node id="61">
        <label>include/printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>include/e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>include/lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>src/net/debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="90">
        <label>src/basic/array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="117">
        <label>src/block/ahci/write.c</label>
        <link refid="write_8c"/>
      </node>
      <node id="35">
        <label>include/initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>src/net/arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="30">
        <label>include/fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>src/fs/fat32/lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="79">
        <label>src/serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="78">
        <label>include/serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>src/fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="128">
        <label>src/flanterm/fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="103">
        <label>src/basic/statement.c</label>
        <link refid="statement_8c"/>
      </node>
      <node id="148">
        <label>src/ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="34">
        <label>include/icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>src/kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="145">
        <label>src/gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="16">
        <label>src/basic/unified_expression.c</label>
        <link refid="unified__expression_8c"/>
      </node>
      <node id="56">
        <label>src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="157">
        <label>src/net/dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="54">
        <label>include/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>include/ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>src/containers/vector.c</label>
        <link refid="vector_8c"/>
      </node>
      <node id="96">
        <label>src/basic/lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="89">
        <label>src/ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="131">
        <label>src/fs/block_cache.c</label>
        <link refid="block__cache_8c"/>
      </node>
      <node id="69">
        <label>src/fs/retrofs/getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="15">
        <label>src/basic/string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="84">
        <label>src/tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="108">
        <label>src/block/ahci/eject.c</label>
        <link refid="eject_8c"/>
      </node>
      <node id="91">
        <label>src/basic/datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="168">
        <label>src/rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="13">
        <label>src/basic/flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="52">
        <label>include/maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>src/idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="43">
        <label>src/installer/os_detection.c</label>
        <link refid="os__detection_8c"/>
      </node>
      <node id="36">
        <label>src/init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="107">
        <label>src/block/ahci/description.c</label>
        <link refid="description_8c"/>
      </node>
      <node id="82">
        <label>include/tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>src/fs/iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="163">
        <label>src/net/tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="113">
        <label>src/block/ahci/read.c</label>
        <link refid="read_8c"/>
      </node>
      <node id="65">
        <label>src/fs/retrofs/createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="39">
        <label>src/installer/crc32.c</label>
        <link refid="crc32_8c"/>
      </node>
      <node id="164">
        <label>src/net/udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="137">
        <label>src/fs/fat32/fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="28">
        <label>include/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>src/apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="53">
        <label>include/memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>include/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>include/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>src/block/ahci/error.c</label>
        <link refid="error_8c"/>
      </node>
      <node id="120">
        <label>src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="21">
        <label>include/debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>src/ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="33">
        <label>src/devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="144">
        <label>src/fs/partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="80">
        <label>include/taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>src/fs/fat32/unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="100">
        <label>src/basic/process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="104">
        <label>src/basic/string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="31">
        <label>include/hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>include/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>src/basic/main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="136">
        <label>src/fs/fat32/directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="140">
        <label>src/fs/fat32/readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="111">
        <label>src/block/ahci/identify.c</label>
        <link refid="identify_8c"/>
      </node>
      <node id="1">
        <label>include/basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>include/interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>src/ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="141">
        <label>src/fs/fat32/truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="158">
        <label>src/net/dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="116">
        <label>src/block/ahci/trim.c</label>
        <link refid="trim_8c"/>
      </node>
      <node id="8">
        <label>include/basic/tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="121">
        <label>src/containers/map.c</label>
        <link refid="map_8c"/>
      </node>
      <node id="60">
        <label>include/pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>include/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/containers/hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="24">
        <label>include/dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>src/string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="150">
        <label>src/lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="10">
        <label>include/basic/unified_expression.h</label>
        <link refid="unified__expression_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>src/installer/recursive_file_copy.c</label>
        <link refid="recursive__file__copy_8c"/>
      </node>
      <node id="125">
        <label>src/drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="64">
        <label>include/retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>src/fs/retrofs/writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="72">
        <label>src/fs/retrofs/readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a8e02f462865c772b3a164973da8d8e7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* make_full_path</definition>
        <argsstring>(struct basic_ctx *ctx, const char *relative)</argsstring>
        <name>make_full_path</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
<para>Creates a full file path by combining the current selected directory (CSD) with a relative path. </para>
        </briefdescription>
        <detaileddescription>
<para>If the given path is absolute (starts with &apos;/&apos;), it returns the path as is. If it is relative, it combines it with the current selected directory (CSD).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relative</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative file path to be converted into an absolute path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The full file path as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="17" column="12" bodyfile="src/basic/file_io.c" bodystart="7" bodyend="27" declfile="include/basic/builtin_file_io_functions.h" declline="17" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ae59e663583d153bad2df75f78302030c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openin_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>openin_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the OPENIN statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Since OPENIN is a function in Retro Rocket BASIC, this statement is not supported and raises an error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="26" column="6" bodyfile="src/basic/file_io.c" bodystart="71" bodyend="74" declfile="include/basic/builtin_file_io_functions.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a9046714d009f572d4b7813dff7f87cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openup_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>openup_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the OPENUP statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Since OPENUP is a function in Retro Rocket BASIC, this statement is not supported and raises an error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="35" column="6" bodyfile="src/basic/file_io.c" bodystart="76" bodyend="79" declfile="include/basic/builtin_file_io_functions.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ac5e9f2f653de2c238d2bf738b210d19c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openout_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>openout_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the OPENOUT statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Since OPENOUT is a function in Retro Rocket BASIC, this statement is not supported and raises an error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="44" column="6" bodyfile="src/basic/file_io.c" bodystart="81" bodyend="84" declfile="include/basic/builtin_file_io_functions.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ae8be40ae1c294bdbb7df5053faff1269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>read_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the READ statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Since the READ statement is not supported in Retro Rocket BASIC (as it relies on DATA statements), this function raises an error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="54" column="6" bodyfile="src/basic/file_io.c" bodystart="86" bodyend="89" declfile="include/basic/builtin_file_io_functions.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a5240841a9b6eea5a3803c79408d1ead3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void close_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>close_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the CLOSE statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function closes the file associated with the file descriptor returned by the OPEN statement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="63" column="6" bodyfile="src/basic/file_io.c" bodystart="101" bodyend="108" declfile="include/basic/builtin_file_io_functions.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1aa8ddd1cb8f38f7ba7a946ac3ccfb20ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eof_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>eof_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the EOF function in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>The EOF function checks whether the end of file has been reached. It is not supported in Retro Rocket BASIC. This function raises an error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="73" column="6" bodyfile="src/basic/file_io.c" bodystart="110" bodyend="113" declfile="include/basic/builtin_file_io_functions.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a58014a7741d8ade41b9a360bf2855982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>delete_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the DELETE statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function deletes the specified file from the file system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="82" column="6" bodyfile="src/basic/file_io.c" bodystart="266" bodyend="274" declfile="include/basic/builtin_file_io_functions.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a9a4238a28d16613ad1821c092c68b9ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mkdir_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>mkdir_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the MKDIR statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates a new directory at the specified path.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="91" column="6" bodyfile="src/basic/file_io.c" bodystart="232" bodyend="241" declfile="include/basic/builtin_file_io_functions.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a6cca92514a9ec98d46e6f4504eba6c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mount_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>mount_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the MOUNT statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function mounts a file system at the specified path, allowing access to the device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="100" column="6" bodyfile="src/basic/file_io.c" bodystart="243" bodyend="253" declfile="include/basic/builtin_file_io_functions.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a63999c7a13c1755d9974a556083e0551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rmdir_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>rmdir_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the RMDIR statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes a directory from the file system.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="109" column="6" bodyfile="src/basic/file_io.c" bodystart="255" bodyend="263" declfile="include/basic/builtin_file_io_functions.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1af57b4a8fdfd6fa8c2d840312244b51d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>write_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the WRITE statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function writes data to the file specified by the file descriptor. The data is retrieved from the printable syntax of the variable.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="119" column="6" bodyfile="src/basic/file_io.c" bodystart="277" bodyend="291" declfile="include/basic/builtin_file_io_functions.h" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a130dcb9c4ac679f7776b7df221caefa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chdir_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>chdir_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the CHDIR statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function changes the current selected directory (CSD) for the running process.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="128" column="6" bodyfile="src/basic/file_io.c" bodystart="326" bodyend="348" declfile="include/basic/builtin_file_io_functions.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ac867c766169d7e81816b209335d9b581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* basic_filetype</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_filetype</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Returns the type of a file or directory (either &quot;file&quot; or &quot;directory&quot;). </para>
        </briefdescription>
        <detaileddescription>
<para>This function checks if the specified path corresponds to a directory or a regular file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string indicating whether the path is a &quot;file&quot; or &quot;directory&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="138" column="6" bodyfile="src/basic/file_io.c" bodystart="193" bodyend="200" declfile="include/basic/builtin_file_io_functions.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ae5e890c98fad30c57a967bbf6faf1f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void data_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>data_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the DATA statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>The DATA statement is not supported in Retro Rocket BASIC. This function raises an error, suggesting to use files instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="148" column="6" bodyfile="src/basic/file_io.c" bodystart="91" bodyend="94" declfile="include/basic/builtin_file_io_functions.h" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ab1aec6bc86c6b84ca41847127e05344e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void restore_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>restore_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handles the RESTORE statement in BASIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Since DATA statements are not supported in Retro Rocket BASIC, this function raises an error indicating there is nothing to restore.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="158" column="6" bodyfile="src/basic/file_io.c" bodystart="96" bodyend="99" declfile="include/basic/builtin_file_io_functions.h" declline="158" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a5f0edecae129eb20b8a5c14ce17d060a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_openin</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_openin</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Opens a file for reading. </para>
        </briefdescription>
        <detaileddescription>
<para>This function opens a file in read-only mode and returns the file descriptor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor for the opened file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="168" column="9" bodyfile="src/basic/file_io.c" bodystart="129" bodyend="132" declfile="include/basic/builtin_file_io_functions.h" declline="168" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a66cbfa93d4571f811e91c489fb6c4065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_openout</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_openout</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Opens a file for writing. </para>
        </briefdescription>
        <detaileddescription>
<para>This function opens a file in write-only mode and returns the file descriptor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor for the opened file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="178" column="9" bodyfile="src/basic/file_io.c" bodystart="134" bodyend="137" declfile="include/basic/builtin_file_io_functions.h" declline="178" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a4ef74f88dc9c44ddd080bb0445ba4346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_openup</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_openup</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Opens a file for both reading and writing. </para>
        </briefdescription>
        <detaileddescription>
<para>This function opens a file in read-write mode and returns the file descriptor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor for the opened file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="188" column="9" bodyfile="src/basic/file_io.c" bodystart="139" bodyend="142" declfile="include/basic/builtin_file_io_functions.h" declline="188" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a24faeda0979f002fc502ba616616aaf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_eof</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_eof</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Checks if the end of file (EOF) is reached. </para>
        </briefdescription>
        <detaileddescription>
<para>This function checks whether the specified file descriptor has reached the end of the file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 1 if EOF is reached, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="198" column="9" bodyfile="src/basic/file_io.c" bodystart="224" bodyend="230" declfile="include/basic/builtin_file_io_functions.h" declline="198" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1aca563edd05c3fb8634a5b5da6faf6957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_read</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_read</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Reads a single byte from the file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads a single byte from the file specified by the file descriptor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The byte read from the file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="208" column="9" bodyfile="src/basic/file_io.c" bodystart="59" bodyend="69" declfile="include/basic/builtin_file_io_functions.h" declline="208" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1ab103cf02c19e401cd40a687e915427f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_getnamecount</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_getnamecount</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Returns the number of items (files) in the directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the number of items (files) in the specified directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of items in the directory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="218" column="9" bodyfile="src/basic/file_io.c" bodystart="144" bodyend="165" declfile="include/basic/builtin_file_io_functions.h" declline="218" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a3a5ebc509dc778eb8156d399d7ff5275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_getsize</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_getsize</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Gets the size of a file in a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the size of a file at the specified index in the directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size of the file at the specified index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="228" column="9" bodyfile="src/basic/file_io.c" bodystart="202" bodyend="222" declfile="include/basic/builtin_file_io_functions.h" declline="228" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a59c0115ba915eb1edb88cac4a153954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* basic_getname</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_getname</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Returns the name of a file or directory at a specified index. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the name of a file or directory at the specified index in the directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The name of the file or directory at the specified index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="238" column="6" bodyfile="src/basic/file_io.c" bodystart="167" bodyend="191" declfile="include/basic/builtin_file_io_functions.h" declline="238" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a800a5ab8dff8cabc71386253f3f9e0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* basic_ramdisk_from_device</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_ramdisk_from_device</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Creates a RAM disk from a specified device. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates a RAM disk from the specified device and returns a string identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The identifier of the created RAM disk </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="248" column="6" bodyfile="src/basic/file_io.c" bodystart="293" bodyend="303" declfile="include/basic/builtin_file_io_functions.h" declline="248" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="builtin__file__io__functions_8h_1a7d9af5dcf158f2d6b8f4fcf779de4863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* basic_ramdisk_from_size</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_ramdisk_from_size</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Creates a RAM disk with a specified size. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates a RAM disk with the specified number of blocks and block size, and returns a string identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The identifier of the created RAM disk </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_file_io_functions.h" line="258" column="6" bodyfile="src/basic/file_io.c" bodystart="305" bodyend="318" declfile="include/basic/builtin_file_io_functions.h" declline="258" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/basic/builtin_file_io_functions.h"/>
  </compounddef>
</doxygen>
