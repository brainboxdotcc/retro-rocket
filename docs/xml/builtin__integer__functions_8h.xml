<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="builtin__integer__functions_8h" kind="file" language="C++">
    <compoundname>builtin_integer_functions.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="basic_8h" local="yes">basic.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="124">
        <label>memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="73">
        <label>console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="86">
        <label>reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="109">
        <label>main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="105">
        <label>createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="51">
        <label>helpers.c</label>
        <link refid="helpers_8c"/>
      </node>
      <node id="2">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="97">
        <label>errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="43">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="114">
        <label>filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="91">
        <label>variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="56">
        <label>unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="4">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="6">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="18">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="66">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="79">
        <label>function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="30">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="22">
        <label>hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="133">
        <label>queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="12">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="15">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="48">
        <label>format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="140">
        <label>stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="113">
        <label>writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="84">
        <label>maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="130">
        <label>icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="92">
        <label>buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="58">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="121">
        <label>keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="75">
        <label>debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="47">
        <label>createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="77">
        <label>file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="54">
        <label>truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="94">
        <label>debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="103">
        <label>devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="102">
        <label>debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="127">
        <label>descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="87">
        <label>sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="144">
        <label>video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="55">
        <label>unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="67">
        <label>acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="80">
        <label>graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="123">
        <label>maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="52">
        <label>main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="36">
        <label>e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="95">
        <label>debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="76">
        <label>double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="143">
        <label>timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="9">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="81">
        <label>int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="42">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="126">
        <label>debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="72">
        <label>array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="24">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="19">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="60">
        <label>serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="59">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="120">
        <label>ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="23">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="117">
        <label>gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="37">
        <label>mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="128">
        <label>dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="35">
        <label>mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="71">
        <label>ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="50">
        <label>getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="1">
        <label>builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="65">
        <label>tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="74">
        <label>datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="139">
        <label>rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="78">
        <label>flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="33">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="116">
        <label>ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="25">
        <label>init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="63">
        <label>tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="134">
        <label>tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="46">
        <label>createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="135">
        <label>udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="107">
        <label>fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="17">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="3">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="34">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="10">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="21">
        <label>devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="115">
        <label>partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="61">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="85">
        <label>process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="88">
        <label>string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="20">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="106">
        <label>directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="110">
        <label>readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="27">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="111">
        <label>truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="129">
        <label>dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="7">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="68">
        <label>ahci.c</label>
        <link refid="ahci_8c"/>
      </node>
      <node id="41">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="122">
        <label>lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="40">
        <label>installer.c</label>
        <link refid="installer_8c"/>
      </node>
      <node id="96">
        <label>drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="45">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="53">
        <label>readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="builtin__integer__functions_8h_1aa170566763878c35148ea9f2638e9b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_abs</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_abs</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Calculates the absolute value of a number. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the absolute value of the input number. If the number is negative, it will return the positive equivalent, and if the number is positive, it will return the same value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The absolute value of the number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="20" column="9" bodyfile="src/basic/maths.c" bodystart="7" bodyend="13" declfile="include/basic/builtin_integer_functions.h" declline="20" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1afa246b19a4a83a2f7aea99990bbe00a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_len</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_len</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Returns the length of a string. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the number of characters in the provided string variable. It will count the number of characters excluding the null-terminator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="31" column="9" bodyfile="src/basic/string.c" bodystart="185" bodyend="191" declfile="include/basic/builtin_integer_functions.h" declline="31" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1aeb68d58dad0ebf48c1d8dd789f99ba64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_instr</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_instr</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Finds the position of a substring within a string. </para>
        </briefdescription>
        <detaileddescription>
<para>This function searches for the first occurrence of a substring within another string and returns the position (1-based index) where it is found. If the substring is not found, the function returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The position of the substring (1-based index) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="43" column="9" bodyfile="src/basic/string.c" bodystart="36" bodyend="53" declfile="include/basic/builtin_integer_functions.h" declline="43" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1ad33e406d64edc962d069ffeecb518e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_asc</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_asc</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Returns the ASCII value of the first character of a string. </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes a string and returns the ASCII value of its first character. If the string is empty, it returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ASCII value of the first character of the string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="54" column="9" bodyfile="src/basic/maths.c" bodystart="130" bodyend="136" declfile="include/basic/builtin_integer_functions.h" declline="54" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a598143e2745c97b0a2e5cffc74dd3a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_rgb</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_rgb</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Converts RGB values to a single integer representing the color. </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes the red, green, and blue components of a color and returns an integer that represents the combined color value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A combined integer representing the RGB color </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="65" column="9" bodyfile="src/basic/graphics.c" bodystart="244" bodyend="256" declfile="include/basic/builtin_integer_functions.h" declline="65" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a8ee3bc48d89dce6438a4567453e16c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_random</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_random</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Generates a random number. </para>
        </briefdescription>
        <detaileddescription>
<para>This function generates a random number between 0 and 32767 (inclusive). It can be used to introduce randomness into the program.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A random integer between 0 and 32767 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="76" column="9" bodyfile="src/basic/maths.c" bodystart="118" bodyend="128" declfile="include/basic/builtin_integer_functions.h" declline="76" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a52632225eca3987ad4aff7a73fceaefe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_atoi</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_atoi</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Converts a string to an integer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts the provided string representation of a number to its integer equivalent. It will ignore any leading spaces and handle the conversion from decimal format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The integer equivalent of the string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="87" column="9" bodyfile="src/basic/maths.c" bodystart="162" bodyend="187" declfile="include/basic/builtin_integer_functions.h" declline="87" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a30a4d506eac9bb85bb7e80bcad066bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_shl</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_shl</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Shifts a number left by a specified number of bits. </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs a bitwise left shift operation on an integer by the number of bits specified by the second operand. It is equivalent to multiplying the number by 2 for each bit position shifted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the left shift operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="99" column="9" bodyfile="src/basic/maths.c" bodystart="189" bodyend="198" declfile="include/basic/builtin_integer_functions.h" declline="99" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1af5e91bf7cb23f7c2741bf52afc7cc03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_shr</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_shr</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Shifts a number right by a specified number of bits. </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs a bitwise right shift operation on an integer by the number of bits specified by the second operand. It is equivalent to dividing the number by 2 for each bit position shifted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the right shift operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="111" column="9" bodyfile="src/basic/maths.c" bodystart="200" bodyend="209" declfile="include/basic/builtin_integer_functions.h" declline="111" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a0b282667da9f85ea7db8555a46c7135e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_sgn</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_sgn</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Returns the sign of a number. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns 1 if the number is positive, -1 if it is negative, and 0 if it is zero. It can be used to determine whether a number is positive, negative, or zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sign of the number (1, -1, or 0) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="122" column="9" bodyfile="src/basic/maths.c" bodystart="274" bodyend="284" declfile="include/basic/builtin_integer_functions.h" declline="122" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a71e8aa72c0bb2df1c1b105c36026cee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_int</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_int</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Rounds a number to the nearest integer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function rounds the provided number to the nearest integer. If the number is halfway between two integers, it rounds up to the next higher integer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The rounded integer value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="133" column="9" bodyfile="src/basic/maths.c" bodystart="286" bodyend="294" declfile="include/basic/builtin_integer_functions.h" declline="133" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1acec189e89abfedbc1303781f0f708e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_val</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_val</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Converts a string to its numerical value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts the provided string representation of a number to its numerical equivalent (either integer or floating point).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The numerical value of the string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="144" column="9" bodyfile="src/basic/maths.c" bodystart="138" bodyend="144" declfile="include/basic/builtin_integer_functions.h" declline="144" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1ab096fbf99da97d870adaaace45f99f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_hexval</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_hexval</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Converts a hexadecimal string to its integer value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts the provided hexadecimal string to its integer equivalent. The string should represent a valid hexadecimal number, optionally prefixed with &quot;&amp;&quot;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The integer equivalent of the hexadecimal string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="155" column="9" bodyfile="src/basic/maths.c" bodystart="146" bodyend="152" declfile="include/basic/builtin_integer_functions.h" declline="155" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="builtin__integer__functions_8h_1a325120ffce1738ef4a82e8d754d526d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_octval</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_octval</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Converts an octal string to its integer value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts the provided octal string to its integer equivalent. The string should represent a valid octal number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC interpreter context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The integer equivalent of the octal string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/builtin_integer_functions.h" line="166" column="9" bodyfile="src/basic/maths.c" bodystart="154" bodyend="160" declfile="include/basic/builtin_integer_functions.h" declline="166" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/basic/builtin_integer_functions.h"/>
  </compounddef>
</doxygen>
