<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structdevfs__node__t" kind="struct" language="C++" prot="public">
    <compoundname>devfs_node_t</compoundname>
    <includes local="no">devfs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdevfs__node__t_1a947253db11de02c44bec114a1b3cf8a2" prot="public" static="no" mutable="no">
        <type><ref refid="structfs__directory__entry__t" kindref="compound">fs_directory_entry_t</ref></type>
        <definition>fs_directory_entry_t devfs_node_t::ent</definition>
        <argsstring></argsstring>
        <name>ent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directory entry metadata for the device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devfs.h" line="56" column="22" bodyfile="include/devfs.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevfs__node__t_1a0c8ffefd3b2266116075f834283acf86" prot="public" static="no" mutable="no">
        <type><ref refid="devfs_8h_1a49033b8f9658b82c8a3cdfdc6a8efad9" kindref="member">devfs_update_cb_t</ref></type>
        <definition>devfs_update_cb_t devfs_node_t::update_cb</definition>
        <argsstring></argsstring>
        <name>update_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Periodic update callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devfs.h" line="57" column="19" bodyfile="include/devfs.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevfs__node__t_1a93792d5649359dd218e2fe8af6e2106c" prot="public" static="no" mutable="no">
        <type><ref refid="devfs_8h_1a31ed1247eaaac457a20c1a8d8ecfef1e" kindref="member">devfs_read_cb_t</ref></type>
        <definition>devfs_read_cb_t devfs_node_t::read_cb</definition>
        <argsstring></argsstring>
        <name>read_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devfs.h" line="58" column="17" bodyfile="include/devfs.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdevfs__node__t_1af7d4b16ec3aa0b68c5c20b86c60a3fa4" prot="public" static="no" mutable="no">
        <type>struct devfs_node *</type>
        <definition>struct devfs_node* devfs_node_t::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the next node in the list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devfs.h" line="59" column="17" bodyfile="include/devfs.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Linked list node representing a registered devfs entry. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure is used internally by devfs to store each registered device node along with its associated callbacks. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="11">
        <label>void *</label>
      </node>
      <node id="5">
        <label>filesystem_t</label>
        <link refid="structfilesystem__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>createdir</edgelabel>
          <edgelabel>createfile</edgelabel>
          <edgelabel>freespace</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>getdir</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mount</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>readfile</edgelabel>
          <edgelabel>rm</edgelabel>
          <edgelabel>rmdir</edgelabel>
          <edgelabel>truncatefile</edgelabel>
          <edgelabel>writefile</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>uint64_t</label>
      </node>
      <node id="12">
        <label>uint16_t</label>
      </node>
      <node id="8">
        <label>int</label>
      </node>
      <node id="4">
        <label>fs_tree_t</label>
        <link refid="structfs__tree__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>device</edgelabel>
          <edgelabel>lbapos</edgelabel>
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>files</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>child_dirs</edgelabel>
          <edgelabel>next</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>responsible_driver</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>device_name</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>dirty</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>opaque</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>uint32_t</label>
      </node>
      <node id="10">
        <label>uint8_t</label>
      </node>
      <node id="6">
        <label>void *(*)(void *)</label>
      </node>
      <node id="1">
        <label>devfs_node_t</label>
        <link refid="structdevfs__node__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ent</edgelabel>
          <edgelabel>update_cb</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>read_cb</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>bool</label>
      </node>
      <node id="2">
        <label>fs_directory_entry_t</label>
        <link refid="structfs__directory__entry__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lbapos</edgelabel>
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>directory</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>year</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>alt_filename</edgelabel>
          <edgelabel>device_name</edgelabel>
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>device</edgelabel>
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>day</edgelabel>
          <edgelabel>hour</edgelabel>
          <edgelabel>min</edgelabel>
          <edgelabel>month</edgelabel>
          <edgelabel>sec</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>char</label>
      </node>
      <node id="14">
        <label>struct devfs_node *</label>
      </node>
    </collaborationgraph>
    <location file="include/devfs.h" line="55" column="1" bodyfile="include/devfs.h" bodystart="55" bodyend="60"/>
    <listofallmembers>
      <member refid="structdevfs__node__t_1a947253db11de02c44bec114a1b3cf8a2" prot="public" virt="non-virtual"><scope>devfs_node_t</scope><name>ent</name></member>
      <member refid="structdevfs__node__t_1af7d4b16ec3aa0b68c5c20b86c60a3fa4" prot="public" virt="non-virtual"><scope>devfs_node_t</scope><name>next</name></member>
      <member refid="structdevfs__node__t_1a93792d5649359dd218e2fe8af6e2106c" prot="public" virt="non-virtual"><scope>devfs_node_t</scope><name>read_cb</name></member>
      <member refid="structdevfs__node__t_1a0c8ffefd3b2266116075f834283acf86" prot="public" virt="non-virtual"><scope>devfs_node_t</scope><name>update_cb</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
