<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structub__var__generic__array" kind="struct" language="C++" prot="public">
    <compoundname>ub_var_generic_array</compoundname>
    <includes local="no">structs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structub__var__generic__array_1af21e1d4abdb6f71f64710b97dd7449b2" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t ub_var_generic_array::itemcount</definition>
        <argsstring></argsstring>
        <name>itemcount</name>
        <briefdescription>
<para>Number of items in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/structs.h" line="165" column="10" bodyfile="include/basic/structs.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structub__var__generic__array_1a3facefcc76b7d5683d635404b0f914a5" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ub_var_generic_array::varname</definition>
        <argsstring></argsstring>
        <name>varname</name>
        <briefdescription>
<para>Name of the generic array variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/structs.h" line="166" column="12" bodyfile="include/basic/structs.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structub__var__generic__array_1ac74a5a05b7300ef7b4149024019b5bf8" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* ub_var_generic_array::values_inaccesible</definition>
        <argsstring></argsstring>
        <name>values_inaccesible</name>
        <briefdescription>
<para>A generic pointer to the array values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/structs.h" line="167" column="6" bodyfile="include/basic/structs.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structub__var__generic__array_1a7c907ab5774af24b24c04528fa84a44e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structub__var__generic__array" kindref="compound">ub_var_generic_array</ref> *</type>
        <definition>struct ub_var_generic_array* ub_var_generic_array::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
<para>Pointer to the next generic array (for chaining) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/structs.h" line="168" column="28" bodyfile="include/basic/structs.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A generic array, we can use this to represent any array regardless of its contained type. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure represents a generic array in the BASIC interpreter, where the type of values stored is not specified, allowing flexibility in handling various types of arrays. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>void *</label>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
      <node id="1">
        <label>ub_var_generic_array</label>
        <link refid="structub__var__generic__array"/>
        <childnode refid="2" relation="usage">
          <edgelabel>itemcount</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>varname</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>values_inaccesible</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>char</label>
      </node>
    </collaborationgraph>
    <location file="include/basic/structs.h" line="164" column="1" bodyfile="include/basic/structs.h" bodystart="164" bodyend="169"/>
    <listofallmembers>
      <member refid="structub__var__generic__array_1af21e1d4abdb6f71f64710b97dd7449b2" prot="public" virt="non-virtual"><scope>ub_var_generic_array</scope><name>itemcount</name></member>
      <member refid="structub__var__generic__array_1a7c907ab5774af24b24c04528fa84a44e" prot="public" virt="non-virtual"><scope>ub_var_generic_array</scope><name>next</name></member>
      <member refid="structub__var__generic__array_1ac74a5a05b7300ef7b4149024019b5bf8" prot="public" virt="non-virtual"><scope>ub_var_generic_array</scope><name>values_inaccesible</name></member>
      <member refid="structub__var__generic__array_1a3facefcc76b7d5683d635404b0f914a5" prot="public" virt="non-virtual"><scope>ub_var_generic_array</scope><name>varname</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
