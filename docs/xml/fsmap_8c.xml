<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fsmap_8c" kind="file" language="C++">
    <compoundname>fsmap.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <includes refid="retrofs_8h" local="no">retrofs.h</includes>
    <incdepgraph>
      <node id="57">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="22">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>stdarg.h</label>
      </node>
      <node id="60">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="29">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>stdnoreturn.h</label>
      </node>
      <node id="27">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>fsmap.c</label>
        <link refid="fsmap_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="47">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="88">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="66">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="68">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="83">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="85">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="17">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="51">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="32">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="33">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>scsi.h</label>
        <link refid="scsi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="21">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="fsmap_8c_1a28d7358784a22c6701ed0dd7e5330872" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void rfs_update_l2_for_group</definition>
        <argsstring>(rfs_t *info, uint64_t g)</argsstring>
        <name>rfs_update_l2_for_group</name>
        <param>
          <type><ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Update L2 cache state for a given L1 group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function marks the free/used status of a specific L1 group in the higher-level L2 bitsets. It is used whenever an extent changes state (allocated or freed) so that the hierarchical free space map remains consistent.</para>
<para>The RFS free space tracking hierarchy has three levels:<itemizedlist>
<listitem><para>L0: On-disk bitmap, one bit per sector, stored in the free space map.</para>
</listitem><listitem><para>L1: In-RAM summary of each group of <ref refid="retrofs_8h_1a2edcb522edb2eb0eda942e933b1353d1" kindref="member">RFS_L1_GROUP_SECTORS</ref> sectors (4096 sectors = 2 MB at 512 B/sector). Each group tracks:<itemizedlist>
<listitem><para><computeroutput>l1_free_count[g]</computeroutput> - number of free sectors in the group.</para>
</listitem><listitem><para><computeroutput>l1_not_full</computeroutput> bit - set if the group has any free space.</para>
</listitem><listitem><para><computeroutput>l1_all_free</computeroutput> bit - set if the group is entirely free.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>L2: In-RAM summary of super-groups, each covering <ref refid="retrofs_8h_1a3f0b46f13df6e029244c1d1bbce20606" kindref="member">RFS_L2_GROUPS_PER_SUPER</ref> L1 groups. L2 bitsets indicate:<itemizedlist>
<listitem><para><computeroutput>l2_not_full</computeroutput> - at least one L1 group inside is not full.</para>
</listitem><listitem><para><computeroutput>l2_all_free</computeroutput> - all L1 groups inside are fully free.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>This function recalculates the L2 state for the super-group containing the specified L1 group index <computeroutput>g</computeroutput>. It must be called whenever <computeroutput>l1_free_count[g]</computeroutput> changes due to marking or unmarking space.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the mounted RFS volume structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the L1 group whose parent L2 super-group should be updated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>Assumes <ref refid="retrofs_8h_1a2edcb522edb2eb0eda942e933b1353d1" kindref="member">RFS_L1_GROUP_SECTORS</ref> is exactly 4096.</para>
</listitem><listitem><para>Does not update the on-disk L0 bitmap - that is handled separately by the allocation/free functions.</para>
</listitem><listitem><para>This is an <computeroutput>inline</computeroutput> helper and is not intended for direct external use. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="191" column="20" bodyfile="src/fs/retrofs/fsmap.c" bodystart="191" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1ab460b9c1eac8f02af9c54e02cf315e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rfs_mark_extent</definition>
        <argsstring>(rfs_t *info, uint64_t start_sector, uint64_t length_sectors, bool mark_used)</argsstring>
        <name>rfs_mark_extent</name>
        <param>
          <type><ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start_sector</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>length_sectors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mark_used</declname>
        </param>
        <briefdescription>
<para>Mark a contiguous extent as used or free in the free space map. </para>
        </briefdescription>
        <detaileddescription>
<para>Updates the in-memory free space tracking structures; caller must ensure changes are persisted to disk if necessary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Filesystem context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_sector</parametername>
</parameternamelist>
<parameterdescription>
<para>First sector of extent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length_sectors</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sectors in extent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mark_used</parametername>
</parameternamelist>
<parameterdescription>
<para>true to mark as used, false to mark as free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error (e.g., bounds check fail). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="208" column="6" bodyfile="src/fs/retrofs/fsmap.c" bodystart="208" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1a868dbbb1a0febb87e63a02d0c7f4ddfa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>static uint64_t rfs_group_size</definition>
        <argsstring>(const rfs_t *info, uint64_t g)</argsstring>
        <name>rfs_group_size</name>
        <param>
          <type>const <ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Get the number of sectors in a given L1 group. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the specified L1 group in sectors. For most groups this will be <ref refid="retrofs_8h_1a2edcb522edb2eb0eda942e933b1353d1" kindref="member">RFS_L1_GROUP_SECTORS</ref>, but the final (tail) group may be smaller if the total sector count is not a multiple of the group size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the RetroFS volume structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>L1 group index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of sectors in the group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="342" column="24" bodyfile="src/fs/retrofs/fsmap.c" bodystart="342" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1a1b0503a3a7c0aea906e71839a56d226a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rfs_load_group_sector</definition>
        <argsstring>(rfs_t *info, uint64_t g, uint8_t *buf)</argsstring>
        <name>rfs_load_group_sector</name>
        <param>
          <type><ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Load the L0 bitmap sector for a given L1 group. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads the on-disk free space bitmap sector corresponding to the specified L1 group index into the provided buffer. There is a 1:1 mapping between L1 groups and bitmap sectors when <ref refid="retrofs_8h_1a2edcb522edb2eb0eda942e933b1353d1" kindref="member">RFS_L1_GROUP_SECTORS</ref> is 4096.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the RetroFS volume structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>L1 group index to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer for the sector data (must be at least <ref refid="retrofs_8h_1a0e4f92f12413502ff471ed5404d80df6" kindref="member">RFS_SECTOR_SIZE</ref> bytes). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on read error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="363" column="20" bodyfile="src/fs/retrofs/fsmap.c" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1ae0efe84c89cf9b1e1df1a3294677db95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rfs_group_prefix_suffix_free</definition>
        <argsstring>(const uint8_t *buf, uint64_t group_bits, uint64_t *out_prefix, uint64_t *out_suffix)</argsstring>
        <name>rfs_group_prefix_suffix_free</name>
        <param>
          <type>const uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>group_bits</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_prefix</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_suffix</declname>
        </param>
        <briefdescription>
<para>Count contiguous FREE (0) bits at the start and end of an L1 group&apos;s L0 bitmap sector. </para>
        </briefdescription>
        <detaileddescription>
<para>Scans the on-disk bitmap for a given L1 group to determine:<itemizedlist>
<listitem><para>The length of the leading run of free sectors (prefix).</para>
</listitem><listitem><para>The length of the trailing run of free sectors (suffix).</para>
</listitem></itemizedlist>
</para>
<para>These values are useful for quickly evaluating whether an extent may span multiple L1 groups without fragmentation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the L0 bitmap sector buffer for the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of valid bits in the group (may be less than <ref refid="retrofs_8h_1a2edcb522edb2eb0eda942e933b1353d1" kindref="member">RFS_L1_GROUP_SECTORS</ref> for the last group). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Output pointer for the number of free bits from the start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_suffix</parametername>
</parameternamelist>
<parameterdescription>
<para>Output pointer for the number of free bits from the end. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="384" column="13" bodyfile="src/fs/retrofs/fsmap.c" bodystart="384" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1a514538023402d05c9d5714f35a8424bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>static uint64_t rfs_group_find_run_from</definition>
        <argsstring>(const uint8_t *buf, uint64_t group_bits, uint64_t offset, uint64_t need)</argsstring>
        <name>rfs_group_find_run_from</name>
        <param>
          <type>const uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>group_bits</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>need</declname>
        </param>
        <briefdescription>
<para>Find the first contiguous run of FREE (0) bits of at least a given length. </para>
        </briefdescription>
        <detaileddescription>
<para>Searches within an L0 bitmap sector for a run of free sectors starting from a specified bit offset. Returns the local bit index of the first sector in the run, or <computeroutput>UINT64_MAX</computeroutput> if no suitable run is found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the L0 bitmap sector buffer for the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of valid bits in this group (may be smaller than <ref refid="retrofs_8h_1a2edcb522edb2eb0eda942e933b1353d1" kindref="member">RFS_L1_GROUP_SECTORS</ref> for the last group). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Local bit index within the group to begin the search. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>need</parametername>
</parameternamelist>
<parameterdescription>
<para>Required length of the run in bits (sectors). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Local bit index of the first sector in the run, or <computeroutput>UINT64_MAX</computeroutput> if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="456" column="17" bodyfile="src/fs/retrofs/fsmap.c" bodystart="456" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1ae89881aa48831a06f9f7b87c7062a64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rfs_find_free_extent</definition>
        <argsstring>(rfs_t *info, uint64_t need, uint64_t *out_start_sector)</argsstring>
        <name>rfs_find_free_extent</name>
        <param>
          <type><ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>need</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_start_sector</declname>
        </param>
        <briefdescription>
<para>Find a contiguous extent of free sectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Searches the in-memory free space map for an extent of at least the requested length.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Filesystem context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>need</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sectors required. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_start_sector</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: first sector of found extent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if an extent was found, false if insufficient free space. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="484" column="6" bodyfile="src/fs/retrofs/fsmap.c" bodystart="484" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1ada323ccc3e68e7384671502333ebfcda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rfs_free_level_caches</definition>
        <argsstring>(rfs_t *info)</argsstring>
        <name>rfs_free_level_caches</name>
        <param>
          <type><ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="637" column="13" bodyfile="src/fs/retrofs/fsmap.c" bodystart="637" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="fsmap_8c_1a68bfd092abff119ace6499907853609a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rfs_build_level_caches</definition>
        <argsstring>(rfs_t *info)</argsstring>
        <name>rfs_build_level_caches</name>
        <param>
          <type><ref refid="structrfs__t" kindref="compound">rfs_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Build L1/L2 cache structures from the on-disk free space map. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads the free space map from disk and generates the in-memory summary structures used for fast allocation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Filesystem context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/retrofs/fsmap.c" line="650" column="6" bodyfile="src/fs/retrofs/fsmap.c" bodystart="650" bodyend="907"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/fs/retrofs/fsmap.c"/>
  </compounddef>
</doxygen>
