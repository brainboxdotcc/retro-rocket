<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tcp_8h" kind="file" language="C++">
    <compoundname>tcp.h</compoundname>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includedby refid="kernel_8h" local="yes">kernel.h</includedby>
    <incdepgraph>
      <node id="52">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="20">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>stdarg.h</label>
      </node>
      <node id="55">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="26">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="78">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="43">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="34">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="61">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="62">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="79">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="81">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="72">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="47">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="29">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="30">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>basic/tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="19">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="122">
        <label>memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="71">
        <label>console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="84">
        <label>reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="107">
        <label>main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="103">
        <label>createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="50">
        <label>helpers.c</label>
        <link refid="helpers_8c"/>
      </node>
      <node id="88">
        <label>tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="95">
        <label>errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="42">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="112">
        <label>filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="89">
        <label>variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="55">
        <label>unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="3">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="5">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="17">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="64">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="77">
        <label>function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="29">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="21">
        <label>hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="131">
        <label>queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="11">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="14">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="47">
        <label>format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="138">
        <label>stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="111">
        <label>writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="82">
        <label>maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="128">
        <label>icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="90">
        <label>buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="57">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="119">
        <label>keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="73">
        <label>debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="46">
        <label>createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="75">
        <label>file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="53">
        <label>truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="92">
        <label>debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="101">
        <label>devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="100">
        <label>debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="125">
        <label>descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="85">
        <label>sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="142">
        <label>video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="54">
        <label>unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="65">
        <label>acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="78">
        <label>graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="121">
        <label>maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="51">
        <label>main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="35">
        <label>e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="93">
        <label>debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="74">
        <label>double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="141">
        <label>timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="8">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="79">
        <label>int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="41">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="124">
        <label>debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="70">
        <label>array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="23">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="18">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="59">
        <label>serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="58">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="118">
        <label>ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="22">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="115">
        <label>gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="36">
        <label>mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="126">
        <label>dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="34">
        <label>mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="69">
        <label>ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="49">
        <label>getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="87">
        <label>string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="63">
        <label>tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="72">
        <label>datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="137">
        <label>rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="76">
        <label>flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="32">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="114">
        <label>ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="24">
        <label>init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="61">
        <label>tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="132">
        <label>tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="45">
        <label>createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="133">
        <label>udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="105">
        <label>fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="16">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="33">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="9">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="20">
        <label>devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="113">
        <label>partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="60">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="83">
        <label>process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="86">
        <label>string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="19">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="104">
        <label>directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="108">
        <label>readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="26">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="109">
        <label>truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="127">
        <label>dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="6">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="66">
        <label>ahci.c</label>
        <link refid="ahci_8c"/>
      </node>
      <node id="40">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="120">
        <label>lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="39">
        <label>installer.c</label>
        <link refid="installer_8c"/>
      </node>
      <node id="94">
        <label>drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="44">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="52">
        <label>readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtcp__ip__pseudo__header__t" prot="public">tcp_ip_pseudo_header_t</innerclass>
    <innerclass refid="uniontcp__segment__flags__t" prot="public">tcp_segment_flags_t</innerclass>
    <innerclass refid="structtcp__segment" prot="public">tcp_segment</innerclass>
    <innerclass refid="structtcp__options__t" prot="public">tcp_options_t</innerclass>
    <innerclass refid="structtcp__ordered__list__t" prot="public">tcp_ordered_list_t</innerclass>
    <innerclass refid="structpending__node__t" prot="public">pending_node_t</innerclass>
    <innerclass refid="structqueue__t" prot="public">queue_t</innerclass>
    <innerclass refid="structtcp__conn__t" prot="public">tcp_conn_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tcp_8h_1a01dac0d554ac51ae8e96c00baa5b21be" prot="public" static="no">
        <name>TCP_WINDOW_SIZE</name>
        <initializer>65535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="10" column="9" bodyfile="include/tcp.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcp_8h_1a8dbfcfddb84ac6b6fef8ad6c0323f11e" prot="public" static="no">
        <name>TCP_PACKET_SIZE_OFF</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="11" column="9" bodyfile="include/tcp.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tcp_8h_1a304f45dd94169719e49a5404e2f3ddb0" prot="public" static="no">
        <name>TCP_TRACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="14" column="9" bodyfile="include/tcp.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ff" prot="public" static="no" strong="no">
        <type></type>
        <name>tcp_state_flags_t</name>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffa141036a606e6268cb2f3fd8e6e5a1efb" prot="public">
          <name>TCP_FIN</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffa0f6163bad1a8062c0a24226f9d2a4dfb" prot="public">
          <name>TCP_SYN</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffa48c46359239656107862c2e71640860d" prot="public">
          <name>TCP_RST</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffa425820ce230e55d9ef5ef6efba1c884c" prot="public">
          <name>TCP_PSH</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffa790ae97092ed8e95aac0b8363f703807" prot="public">
          <name>TCP_ACK</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffaba61bd3fe95fa2c8b675e65524cef28a" prot="public">
          <name>TCP_URG</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffad0a5107cf860d426a4d59af0cab9cbd0" prot="public">
          <name>TCP_ECE</name>
          <initializer>= 64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1ab68d796822bee7cef7004d5928dff8ffa77f28a0379f630069ee23775328b4e40" prot="public">
          <name>TCP_CWR</name>
          <initializer>= 128</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="44" column="1" bodyfile="include/tcp.h" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="tcp_8h_1a60a5a207acb5e708bf37736360c3001f" prot="public" static="no" strong="no">
        <type></type>
        <name>tcp_opt_t</name>
        <enumvalue id="tcp_8h_1a60a5a207acb5e708bf37736360c3001fa2f99bf9f1f26dd3430e456d464ad68ca" prot="public">
          <name>TCP_OPT_END</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a60a5a207acb5e708bf37736360c3001facd4ca190b31e6792ee1edf2517f37426" prot="public">
          <name>TCP_OPT_NOP</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a60a5a207acb5e708bf37736360c3001fa40737b44b618f068e785898d59163da3" prot="public">
          <name>TCP_OPT_MSS</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="69" column="1" bodyfile="include/tcp.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83f" prot="public" static="no" strong="no">
        <type></type>
        <name>tcp_state_t</name>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa1d5749e83dc48175394d862a245f9b9b" prot="public">
          <name>TCP_LISTEN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa8d61cf0dd6dacc41f87a1ed05766365c" prot="public">
          <name>TCP_SYN_SENT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa933278d61163fd5e5ec2060a1384ef95" prot="public">
          <name>TCP_SYN_RECEIVED</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa0e0f72fc96e26fce4543fa99b7235ab4" prot="public">
          <name>TCP_ESTABLISHED</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa5b698e85611a8d3ace1499765a7d2cd7" prot="public">
          <name>TCP_FIN_WAIT_1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa6ca0e6c4fdbfc3d7027ca6b56aaf671c" prot="public">
          <name>TCP_FIN_WAIT_2</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa5bbf321fdef3abedd34fc24ddb21a91c" prot="public">
          <name>TCP_CLOSE_WAIT</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa62d0ebf32025a28195c2d8e87e68f3af" prot="public">
          <name>TCP_CLOSING</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa3a6ad6b8f47a63d155c55de2b8588759" prot="public">
          <name>TCP_LAST_ACK</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a30a6f4a8caaf05f882c7c7ecb1e8d83fa818b4dbb00c24a101cde418f7ba02710" prot="public">
          <name>TCP_TIME_WAIT</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="79" column="1" bodyfile="include/tcp.h" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="tcp_8h_1aaf511b41b755c1d7f9222a29a88a11a7" prot="public" static="no" strong="no">
        <type></type>
        <name>tcp_error_t</name>
        <enumvalue id="tcp_8h_1aaf511b41b755c1d7f9222a29a88a11a7a57b90a81822980a117793065bdbd1d91" prot="public">
          <name>TCP_CONN_RESET</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1aaf511b41b755c1d7f9222a29a88a11a7a25e7752f71abc4ef5e480f3e42fa3e7c" prot="public">
          <name>TCP_CONN_REFUSED</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1aaf511b41b755c1d7f9222a29a88a11a7abe2382c409cf07e41ba4c4bf4fb0cd9c" prot="public">
          <name>TCP_CONN_CLOSING</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="92" column="1" bodyfile="include/tcp.h" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="enum" id="tcp_8h_1aee0c1c2ac9ad5818e178340cf8812c8e" prot="public" static="no" strong="no">
        <type></type>
        <name>tcp_port_type_t</name>
        <enumvalue id="tcp_8h_1aee0c1c2ac9ad5818e178340cf8812c8eab40c96413a9a18656ffb50871d824af3" prot="public">
          <name>TCP_PORT_LOCAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1aee0c1c2ac9ad5818e178340cf8812c8ea4a3b77dd90af5e571c085154939289a1" prot="public">
          <name>TCP_PORT_REMOTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Port types, either a local or remote port. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="168" column="1" bodyfile="include/tcp.h" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="tcp_8h_1a0e8857463897e2e9a825c6702298cebe" prot="public" static="no" strong="no">
        <type></type>
        <name>tcp_error_code_t</name>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebeaf149b5e5e6bdb96d48b62b96028289c1" prot="public">
          <name>TCP_ERROR_ALREADY_CLOSING</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea2e708d4bc8af1566bfcf5b64610de293" prot="public">
          <name>TCP_ERROR_PORT_IN_USE</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea9c4eecbaf19fa88513e4b4e187b65886" prot="public">
          <name>TCP_ERROR_NETWORK_DOWN</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea295cd8bec778c2161898639714ba9b7e" prot="public">
          <name>TCP_ERROR_INVALID_CONNECTION</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea88d60c65797d4da77b79f5333c1ea14a" prot="public">
          <name>TCP_ERROR_WRITE_TOO_LARGE</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea4ea80d834ff4e94b26c6eb38cce1e9df" prot="public">
          <name>TCP_ERROR_NOT_CONNECTED</name>
          <initializer>= -6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea25efcbbef886acd250d118132f6efa4a" prot="public">
          <name>TCP_ERROR_OUT_OF_DESCRIPTORS</name>
          <initializer>= -7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea2e2741424ad64c46531ac4bc073b37e7" prot="public">
          <name>TCP_ERROR_OUT_OF_MEMORY</name>
          <initializer>= -8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebeab1d56d3fa027373ca46a0d30b1613da5" prot="public">
          <name>TCP_ERROR_INVALID_SOCKET</name>
          <initializer>= -9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebeabaef579be40183314ff45883eb3812cc" prot="public">
          <name>TCP_ERROR_CONNECTION_FAILED</name>
          <initializer>= -10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea6919b1b32792461459b1f7dac923e394" prot="public">
          <name>TCP_ERROR_NOT_LISTENING</name>
          <initializer>= -11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea0e5469f41a61d918e85b002081b04238" prot="public">
          <name>TCP_ERROR_WOULD_BLOCK</name>
          <initializer>= -12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea6373bcaf57c0371c8c9d5302020f6035" prot="public">
          <name>TCP_CONNECTION_TIMED_OUT</name>
          <initializer>= -13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tcp_8h_1a0e8857463897e2e9a825c6702298cebea8725e7020b4927eb9233b5358d62b56e" prot="public">
          <name>TCP_LAST_ERROR</name>
          <initializer>= -14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Error codes which can be returned by socket functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="176" column="1" bodyfile="include/tcp.h" bodystart="176" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tcp_8h_1a0b51a7a10cbdd813247a0febf4b89d6d" prot="public" static="no" mutable="no">
        <type>typedef</type>
        <definition>enum tcp_opt_t __attribute__</definition>
        <argsstring></argsstring>
        <name>__attribute__</name>
        <briefdescription>
<para>Generic ACPI System Description Table Header. </para>
        </briefdescription>
        <detaileddescription>
<para>Formatted printf-style output to the serial port.</para>
<para>Write a null-terminated string to the serial port.</para>
<para>Write a single character to the serial port.</para>
<para>Unified representation of either a directory start or file entry.</para>
<para>On-disk directory start entry.</para>
<para>On-disk file entry structure for non-directory entries.</para>
<para>One sector of the free space map, containing an array of 64-bit bitfields.</para>
<para>Padded variant of the description block to exactly fill one sector.</para>
<para>A single GPT partition entry.</para>
<para>The GPT (GUID Partition Table) header.</para>
<para>A disk partition table consisting of four MBR partition entries.</para>
<para>Structure for an IP packet.</para>
<para>Long filename entry, overlays a <ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref>. These entries repeat before a non-lfn entry, each holding up to 13 UCS-2 characters. Note that they are not stored in order, the &apos;order&apos; attribute indicates which order they go in.</para>
<para>FAT32 BIOS parameter block (BPB), stored in the boot sector of the drive.</para>
<para>A directory entry, e.g. file, volume label, directory, long filename entry.</para>
<para>Root System Description Table (RSDT)</para>
<para>All ACPI tables begin with this header. It is used to identify table type, length, version, and source information.</para>
<para>Points to other system description tables using 32-bit addresses. Superseded by XSDT in ACPI 2.0+ which uses 64-bit addresses.</para>
<para>This is always the first entry in a directory block.</para>
<para>Each directory block sector contains two of these (half-sector entries).</para>
<para>Blocks until transmitter is ready.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Base I/O port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Character to write.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Base I/O port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Base I/O port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a0d6d2cdb1162c6355e40ab772fa5debc" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t src</definition>
        <argsstring></argsstring>
        <name>src</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="0" column="10" bodyfile="include/tcp.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1aa8b6a0c5900928c04c0cb42248821ce5" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dst</definition>
        <argsstring></argsstring>
        <name>dst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="1" column="10" bodyfile="include/tcp.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1acb7bc06bed6f6408d719334fc41698c7" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t reserved</definition>
        <argsstring></argsstring>
        <name>reserved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="2" column="9" bodyfile="include/tcp.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1ad124d3d2e02c729afa303c775295278e" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t protocol</definition>
        <argsstring></argsstring>
        <name>protocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="3" column="9" bodyfile="include/tcp.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a8aed22e2c7b283705ec82e0120515618" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="4" column="10" bodyfile="include/tcp.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a9226e72dca9e53bba21b0f7027705f10" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t body[]</definition>
        <argsstring>[]</argsstring>
        <name>body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="5" column="9" bodyfile="include/tcp.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a930b8af71e65676a79c0305e85f6afb7" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bits1</definition>
        <argsstring></argsstring>
        <name>bits1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="0" column="9" bodyfile="include/tcp.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a25a251c7c0f741bd8f0e75df6b508554" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bits2</definition>
        <argsstring></argsstring>
        <name>bits2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="1" column="9" bodyfile="include/tcp.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a2765e58b2af2f95eff3a9cc58d3457cd" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t off</definition>
        <argsstring></argsstring>
        <name>off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="4" column="9" bodyfile="include/tcp.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a48dcf0f2005f7f1028d2cbbc2c6cde85" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t fin</definition>
        <argsstring></argsstring>
        <name>fin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="5" column="9" bodyfile="include/tcp.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a6d4faeeef4a9d0ef93ef5f82d55c81c4" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t syn</definition>
        <argsstring></argsstring>
        <name>syn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="6" column="9" bodyfile="include/tcp.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1ae3c5671ace344f0a71df58053220460c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rst</definition>
        <argsstring></argsstring>
        <name>rst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="7" column="9" bodyfile="include/tcp.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1aa57f85f2cd7e7dfaf63771983d255949" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t psh</definition>
        <argsstring></argsstring>
        <name>psh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="8" column="9" bodyfile="include/tcp.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1aa533772dce834aeb2548cfc69927771a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint32_t ack</definition>
        <argsstring></argsstring>
        <name>ack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="9" column="9" bodyfile="include/tcp.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a56ba4bc84a66f0341227909ace888133" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t urg</definition>
        <argsstring></argsstring>
        <name>urg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="10" column="9" bodyfile="include/tcp.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1aa04063153ef1fa465f5ac9ef8fd310b8" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ece</definition>
        <argsstring></argsstring>
        <name>ece</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="11" column="9" bodyfile="include/tcp.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1abfb13dc43f3ea474fa8e87816e50e34d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t cwr</definition>
        <argsstring></argsstring>
        <name>cwr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="12" column="9" bodyfile="include/tcp.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a1ded146b0e253100d88c0d6b58dc26d4" prot="public" static="no" mutable="no">
        <type>struct @13</type>
        <definition>struct @13</definition>
        <argsstring></argsstring>
        <name>@14</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="13" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1ab98974981cf4c143fcee028643f313e6" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t src_port</definition>
        <argsstring></argsstring>
        <name>src_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="0" column="10" bodyfile="include/tcp.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1ae18defed4756b8c15e34718f51e86e55" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dst_port</definition>
        <argsstring></argsstring>
        <name>dst_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="1" column="10" bodyfile="include/tcp.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1aaf1b939170b82732448a965a5b33ad4e" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t seq</definition>
        <argsstring></argsstring>
        <name>seq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="2" column="10" bodyfile="include/tcp.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a24acab6663ca0c43fab3a6b82602362c" prot="public" static="no" mutable="no">
        <type><ref refid="uniontcp__segment__flags__t" kindref="compound">tcp_segment_flags_t</ref></type>
        <definition>tcp_segment_flags_t flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="4" column="21" bodyfile="include/tcp.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1aabdd1af7616febac1cc54b01b2e9ef21" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t window_size</definition>
        <argsstring></argsstring>
        <name>window_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="5" column="10" bodyfile="include/tcp.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a6796c847bbd16253ce2538754c250bd6" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t checksum</definition>
        <argsstring></argsstring>
        <name>checksum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="6" column="10" bodyfile="include/tcp.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a532d23cd8e2186da3eabde8110cd24c6" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t urgent</definition>
        <argsstring></argsstring>
        <name>urgent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="7" column="10" bodyfile="include/tcp.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a15d570669f1585f18a87d277f1753027" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t options[0]</definition>
        <argsstring>[0]</argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="8" column="9" bodyfile="include/tcp.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tcp_8h_1a6f6c2642db097f0b28399640e13dd102" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t payload[]</definition>
        <argsstring>[]</argsstring>
        <name>payload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="9" column="9" bodyfile="include/tcp.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tcp_8h_1a877d84e89e013415707bad5e9d8b99ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structtcp__ip__pseudo__header__t" kindref="compound">tcp_ip_pseudo_header_t</ref></type>
        <definition>struct tcp_ip_pseudo_header_t __attribute__</definition>
        <argsstring>((packed)) tcp_ip_pseudo_header_t</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(packed)</type>
        </param>
        <briefdescription>
<para>ACPI Root System Description Pointer (RSDP) </para>
        </briefdescription>
        <detaileddescription>
<para>On-disk description block containing global filesystem metadata.</para>
<para>A disk partition entry within the MBR.</para>
<para>Structure and bitfields for representing IP fragmentation. Used within an ip_packet_t.</para>
<para>FAT32 FSINFO structure.</para>
<para>There is actually more to an ethernet frame than this (see the STD documents!) but we don&apos;t have access to it from the software.</para>
<para>Definition of a DHCP packet.</para>
<para>Format of an ARP packet (per RFC 826)</para>
<para>Root System Description Table (RSDT)</para>
<para>Generic ACPI System Description Table Header.</para>
<para>This structure serves as the entry point to the ACPI system description tables. Its location is typically found by scanning the BIOS memory range. It may point to either the RSDT (ACPI 1.0) or XSDT (ACPI 2.0+).</para>
<para>All ACPI tables begin with this header. It is used to identify table type, length, version, and source information.</para>
<para>Points to other system description tables using 32-bit addresses. Superseded by XSDT in ACPI 2.0+ which uses 64-bit addresses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="1" column="0" bodyfile="src/gdt.c" bodystart="27" bodyend="40" declfile="include/tcp.h" declline="1" declcolumn="0"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a8d4611b68b5ca398ee9bc373573afab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tcp_handle_packet</definition>
        <argsstring>([[maybe_unused]] ip_packet_t *encap_packet, tcp_segment_t *segment, size_t len)</argsstring>
        <name>tcp_handle_packet</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] ip_packet_t *</type>
          <declname>encap_packet</declname>
        </param>
        <param>
          <type>tcp_segment_t *</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>TCP handler called by the IP layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encap_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>encapsulating IP packet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>TCP segment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of TCP segment including header</para>
</parameterdescription>
</parameteritem>
</parameterlist>
TCP handler called by the IP layer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encap_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>encapsulating IP packet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>TCP segment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of segment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="200" column="6" bodyfile="src/net/tcp.c" bodystart="976" bodyend="987" declfile="include/tcp.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a0e048a052cd5ec7a0bfe8734751990f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tcp_init</definition>
        <argsstring>()</argsstring>
        <name>tcp_init</name>
        <briefdescription>
<para>Initialise TCP protocol, must happen after IP. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialise TCP protocol, must happen after IP. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="205" column="6" bodyfile="src/net/tcp.c" bodystart="1038" bodyend="1042" declfile="include/tcp.h" declline="205" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a4a95723a63184d3eb69a619853f560da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int connect</definition>
        <argsstring>(uint32_t target_addr, uint16_t target_port, uint16_t source_port, bool blocking)</argsstring>
        <name>connect</name>
        <param>
          <type>uint32_t</type>
          <declname>target_addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>target_port</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>source_port</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
        </param>
        <briefdescription>
<para>Connect to a TCP port at a given IPv4 address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Target address to connect to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_port</parametername>
</parameternamelist>
<parameterdescription>
<para>Target port to connect to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_port</parametername>
</parameternamelist>
<parameterdescription>
<para>Our source port to use, or 0 to choose automatically </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to true if this call is to block until the connection is established or errors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero or positive file descriptor number on success, negative for error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="216" column="5" bodyfile="src/net/tcp.c" bodystart="1232" bodyend="1250" declfile="include/tcp.h" declline="216" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1ad4725afcb96cfe437fd7a748129b1f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int closesocket</definition>
        <argsstring>(int socket)</argsstring>
        <name>closesocket</name>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
<para>Close a TCP connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>socket descriptor to close </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, error code on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="224" column="5" bodyfile="src/net/tcp.c" bodystart="1252" bodyend="1260" declfile="include/tcp.h" declline="224" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a5787e23039c4a2243cbc968a48431d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int send</definition>
        <argsstring>(int socket, const void *buffer, uint32_t length)</argsstring>
        <name>send</name>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Send data to an open socket. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>socket descriptor from <ref refid="tcp_8h_1a4a95723a63184d3eb69a619853f560da" kindref="member">connect()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to send </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int number of bytes written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="234" column="5" bodyfile="src/net/tcp.c" bodystart="1211" bodyend="1230" declfile="include/tcp.h" declline="234" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a6df7b901b1a9f3ec7046f958f9e7cf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int recv</definition>
        <argsstring>(int socket, void *buffer, uint32_t maxlen, bool blocking, uint32_t timeout)</argsstring>
        <name>recv</name>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Receive data from an open socket. The data is buffered, and this function will fill the buffer when there is data in the buffer to read. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>socket descriptor from <ref refid="tcp_8h_1a4a95723a63184d3eb69a619853f560da" kindref="member">connect()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to receive data to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum size of data to receive to buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>true if this call should block until the buffer has data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>read timeout when blocking (seconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int number of bytes received </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="248" column="5" bodyfile="src/net/tcp.c" bodystart="1273" bodyend="1316" declfile="include/tcp.h" declline="248" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1ae4013d43c90be7603c80e7224765d830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sock_ready_to_read</definition>
        <argsstring>(int socket)</argsstring>
        <name>sock_ready_to_read</name>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
<para>Check if a socket has data ready to be read. </para>
        </briefdescription>
        <detaileddescription>
<para>Non-blocking check for buffered data on the given socket. Does not consume any data or modify the recv buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is data available to read, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="259" column="6" bodyfile="src/net/tcp.c" bodystart="1318" bodyend="1324" declfile="include/tcp.h" declline="259" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a39bac2a3c55fa01613ed4a5579a5ca67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_connected</definition>
        <argsstring>(int socket)</argsstring>
        <name>is_connected</name>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
<para>Returns true if the socket is connected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>socket descriptor from <ref refid="tcp_8h_1a4a95723a63184d3eb69a619853f560da" kindref="member">connect()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if socket is connected, false if not. This will return false if <ref refid="tcp_8h_1a4a95723a63184d3eb69a619853f560da" kindref="member">connect()</ref> hasn&apos;t succeeded yet. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="267" column="6" bodyfile="src/net/tcp.c" bodystart="1262" bodyend="1271" declfile="include/tcp.h" declline="267" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a0a5ac590e0a9088bc8ddf519e8e0967d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* socket_error</definition>
        <argsstring>(int error_code)</argsstring>
        <name>socket_error</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
<para>Return the error description associated with an error code. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Invalid error codes return the constant &quot;No error&quot;.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>error code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* description </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="276" column="12" bodyfile="src/net/tcp.c" bodystart="29" bodyend="36" declfile="include/tcp.h" declline="276" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a5505c46ddfafecad526d12d4d1666050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tcp_idle</definition>
        <argsstring>()</argsstring>
        <name>tcp_idle</name>
        <briefdescription>
<para>Idle loop ran from timer ISR. </para>
        </briefdescription>
        <detaileddescription>
<para>Idle loop ran from timer ISR. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="282" column="6" bodyfile="src/net/tcp.c" bodystart="992" bodyend="1033" declfile="include/tcp.h" declline="282" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a8abaa184ec3841668b169f330e0f34cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structqueue__t" kindref="compound">queue_t</ref> *</type>
        <definition>queue_t* queue_new</definition>
        <argsstring>(void)</argsstring>
        <name>queue_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Allocate a new empty queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>queue_t* newly allocated queue, or NULL on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="289" column="9" bodyfile="src/net/queue.c" bodystart="3" bodyend="8" declfile="include/tcp.h" declline="289" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a0a273902c052c7f2beef288432bcf713" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void queue_push</definition>
        <argsstring>(queue_t *q, tcp_conn_t *conn)</argsstring>
        <name>queue_push</name>
        <param>
          <type><ref refid="structqueue__t" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Push a <ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> into the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>TCP connection to enqueue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="297" column="6" bodyfile="src/net/queue.c" bodystart="10" bodyend="18" declfile="include/tcp.h" declline="297" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a0d0a6c6ad6dcfd463720575a51581d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> *</type>
        <definition>tcp_conn_t* queue_pop</definition>
        <argsstring>(queue_t *q)</argsstring>
        <name>queue_pop</name>
        <param>
          <type><ref refid="structqueue__t" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Pop the oldest <ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> from the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tcp_conn_t* dequeued connection, or NULL if empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="305" column="12" bodyfile="src/net/queue.c" bodystart="20" bodyend="28" declfile="include/tcp.h" declline="305" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a82bddaec8925f76a813782cb23ef7ca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool queue_empty</definition>
        <argsstring>(queue_t *q)</argsstring>
        <name>queue_empty</name>
        <param>
          <type><ref refid="structqueue__t" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Return true if queue is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if empty, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="313" column="6" bodyfile="src/net/queue.c" bodystart="30" bodyend="32" declfile="include/tcp.h" declline="313" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1aa13034dd0decdb0faf1b863383560be2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void queue_free</definition>
        <argsstring>(queue_t *q)</argsstring>
        <name>queue_free</name>
        <param>
          <type><ref refid="structqueue__t" kindref="compound">queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Free all nodes in the queue and the queue itself. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="320" column="6" bodyfile="src/net/queue.c" bodystart="34" bodyend="39" declfile="include/tcp.h" declline="320" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1ae2f65a066df4023de8b2507bf2554fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tcp_allocate_fd</definition>
        <argsstring>(tcp_conn_t *conn)</argsstring>
        <name>tcp_allocate_fd</name>
        <param>
          <type><ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Allocate a new file descriptor for a TCP connection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>O(n) time</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the TCP connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>File descriptor number on success, or -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="329" column="5" bodyfile="src/net/descriptor.c" bodystart="5" bodyend="14" declfile="include/tcp.h" declline="329" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a92504094d883720e92c536c1737b8f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tcp_free_fd</definition>
        <argsstring>(int x)</argsstring>
        <name>tcp_free_fd</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Free a previously allocated TCP file descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>O(1) time</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor number to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="337" column="6" bodyfile="src/net/descriptor.c" bodystart="16" bodyend="21" declfile="include/tcp.h" declline="337" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a6cf9c0b477fc56fe87b438cfdb802d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> *</type>
        <definition>tcp_conn_t* tcp_find_by_fd</definition>
        <argsstring>(int x)</argsstring>
        <name>tcp_find_by_fd</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Find a TCP connection by its file descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>O(1) time</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the TCP connection if found, or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="346" column="12" bodyfile="src/net/descriptor.c" bodystart="23" bodyend="29" declfile="include/tcp.h" declline="346" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1a8916516f078eb7a9accac0a27a411784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tcp_dump_segment</definition>
        <argsstring>(bool in, tcp_conn_t *conn, const ip_packet_t *encap_packet, const tcp_segment_t *segment, const tcp_options_t *options, size_t len, uint16_t our_checksum)</argsstring>
        <name>tcp_dump_segment</name>
        <param>
          <type>bool</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structtcp__conn__t" kindref="compound">tcp_conn_t</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const ip_packet_t *</type>
          <declname>encap_packet</declname>
        </param>
        <param>
          <type>const tcp_segment_t *</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>const <ref refid="structtcp__options__t" kindref="compound">tcp_options_t</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>our_checksum</declname>
        </param>
        <briefdescription>
<para>Dump debug info for a TCP segment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encap_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>encapsulating IP packet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segment</parametername>
</parameternamelist>
<parameterdescription>
<para>TCP segment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>TCP options </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>TCP length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>our_checksum</parametername>
</parameternamelist>
<parameterdescription>
<para>calculated checksum </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="357" column="6" bodyfile="src/net/debug.c" bodystart="3" bodyend="40" declfile="include/tcp.h" declline="357" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1ab30a0d5f82ac8f116897d82578ae25eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tcp_listen</definition>
        <argsstring>(uint32_t addr, uint16_t port, int backlog)</argsstring>
        <name>tcp_listen</name>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backlog</declname>
        </param>
        <briefdescription>
<para>Create a listening TCP socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Binds a TCP connection control block (TCB) to the given local address and port, and transitions it into the LISTEN state. A pending connection queue is created to hold half‑open connections until they are accepted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Local IPv4 address to bind to (network byte order). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Local TCP port to listen on (host byte order). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backlog</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of pending connections that may be queued.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>File descriptor for the listening socket on success, or a negative TCP_ERROR code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="373" column="5" bodyfile="src/net/tcp.c" bodystart="1327" bodyend="1374" declfile="include/tcp.h" declline="373" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1aeb880bf940312acdf8a48c4d4dfa0b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tcp_accept</definition>
        <argsstring>(int socket)</argsstring>
        <name>tcp_accept</name>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
<para>Accept an incoming connection on a listening socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes one pending connection from the listening socket’s queue and allocates a new file descriptor for it. The connection will be in the ESTABLISHED state upon return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor of a socket previously placed in the LISTEN state using <ref refid="tcp_8h_1ab30a0d5f82ac8f116897d82578ae25eb" kindref="member">tcp_listen()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>File descriptor for the accepted connection on success, or a negative TCP_ERROR code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="388" column="5" bodyfile="src/net/tcp.c" bodystart="1376" bodyend="1426" declfile="include/tcp.h" declline="388" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="tcp_8h_1ac4ed2cdd1c291c5083404950e916c98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tcp_connect</definition>
        <argsstring>(uint32_t target_addr, uint16_t target_port, uint16_t source_port)</argsstring>
        <name>tcp_connect</name>
        <param>
          <type>uint32_t</type>
          <declname>target_addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>target_port</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>source_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tcp.h" line="390" column="5" bodyfile="src/net/tcp.c" bodystart="1099" bodyend="1170" declfile="include/tcp.h" declline="390" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Craig Edwards (<ulink url="mailto:craigedwards@brainbox.cc">craigedwards@brainbox.cc</ulink>) </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2012-2025 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/tcp.h"/>
  </compounddef>
</doxygen>
