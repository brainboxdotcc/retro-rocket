<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stb__image_8h" kind="file" language="C++">
    <compoundname>stb_image.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="stdlib_8h" local="no">stdlib.h</includes>
    <includedby refid="graphics_8c" local="no">src/basic/graphics.c</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>include/stb_image.h</label>
        <link refid="stb__image_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/basic/graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="1">
        <label>include/stb_image.h</label>
        <link refid="stb__image_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstbi__io__callbacks" prot="public">stbi_io_callbacks</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="stb__image_8h_1aed6cd14a3bf678808c4c179e808866aa" prot="public" static="no">
        <name>STBI_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="372" column="9" bodyfile="include/stb_image.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" prot="public" static="no">
        <name>STBIDEF</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="396" column="10" bodyfile="include/stb_image.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="stb__image_8h_1ac36f475ca5b446f4fde4c9b90bec77c8" prot="public" static="no" strong="no">
        <type></type>
        <name>@12</name>
        <enumvalue id="stb__image_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a0177ac2c5002f4f251bb766d41752029" prot="public">
          <name>STBI_default</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1ac36f475ca5b446f4fde4c9b90bec77c8ad1eb95ca1fa7706bf732bf35a0ed40aa" prot="public">
          <name>STBI_grey</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1ac36f475ca5b446f4fde4c9b90bec77c8af5829d16d4cca6077465c5abd346e2f8" prot="public">
          <name>STBI_grey_alpha</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1ac36f475ca5b446f4fde4c9b90bec77c8aa59123e5d0af25f9b1539f5cf1facddf" prot="public">
          <name>STBI_rgb</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1ac36f475ca5b446f4fde4c9b90bec77c8aa7b1af0c9f0310c3ada2aa29a32de293" prot="public">
          <name>STBI_rgb_alpha</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="374" column="1" bodyfile="include/stb_image.h" bodystart="375" bodyend="382"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char stbi_uc</definition>
        <argsstring></argsstring>
        <name>stbi_uc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="385" column="23" bodyfile="include/stb_image.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short stbi_us</definition>
        <argsstring></argsstring>
        <name>stbi_us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="386" column="24" bodyfile="include/stb_image.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stb__image_8h_1ab69bccd74d7dc6ba17e79a64d1977c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>stbi_uc* stbi_load_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="421" column="18" declfile="include/stb_image.h" declline="421" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a9838135e16716209e6d5a405c2f66854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>stbi_uc* stbi_load_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="422" column="18" declfile="include/stb_image.h" declline="422" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a223b3569069759ca34693d86a5d948f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>stbi_uc* stbi_load</definition>
        <argsstring>(char const *filename, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="425" column="18" declfile="include/stb_image.h" declline="425" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a984cebcbb719107b94858b085e7b9287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>stbi_uc* stbi_load_from_file</definition>
        <argsstring>(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="426" column="18" declfile="include/stb_image.h" declline="426" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ad24e9e56ea14b606b7501a2823f82996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>stbi_uc* stbi_load_gif_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int **delays, int *x, int *y, int *z, int *comp, int req_comp)</argsstring>
        <name>stbi_load_gif_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>delays</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>req_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="431" column="18" declfile="include/stb_image.h" declline="431" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a852d1ddf6f400997b868f836bae2e937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>stbi_us* stbi_load_16_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_16_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="443" column="18" declfile="include/stb_image.h" declline="443" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1adb72cb90c9d75e31ef45cfaf910c7c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>stbi_us* stbi_load_16_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_16_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="444" column="18" declfile="include/stb_image.h" declline="444" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1acd31fd67c2d81345fc4e4f966a458bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>stbi_us* stbi_load_16</definition>
        <argsstring>(char const *filename, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_16</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="447" column="18" declfile="include/stb_image.h" declline="447" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aeb3e8313f8bc89bd2feccb3699373091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>stbi_us* stbi_load_from_file_16</definition>
        <argsstring>(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_file_16</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="448" column="18" declfile="include/stb_image.h" declline="448" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a74c1a0dd2b0da680eeef723231c70c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* stbi_loadf_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="456" column="19" declfile="include/stb_image.h" declline="456" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a0b87a2b8444ab5cf8cb97266e2129350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* stbi_loadf_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="457" column="19" declfile="include/stb_image.h" declline="457" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aed80be24b474463422cc8b0c4ffe467b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* stbi_loadf</definition>
        <argsstring>(char const *filename, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="460" column="19" declfile="include/stb_image.h" declline="460" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aef65bed8bb170dd40d5cc1560c0fd6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* stbi_loadf_from_file</definition>
        <argsstring>(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="461" column="19" declfile="include/stb_image.h" declline="461" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a981084e66668ed998832b84dad50bed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_hdr_to_ldr_gamma</definition>
        <argsstring>(float gamma)</argsstring>
        <name>stbi_hdr_to_ldr_gamma</name>
        <param>
          <type>float</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="466" column="20" declfile="include/stb_image.h" declline="466" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a269aa666e5df1051c04f28479add324e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_hdr_to_ldr_scale</definition>
        <argsstring>(float scale)</argsstring>
        <name>stbi_hdr_to_ldr_scale</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="467" column="20" declfile="include/stb_image.h" declline="467" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a392b50c731d9969456006783e2a6f012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_ldr_to_hdr_gamma</definition>
        <argsstring>(float gamma)</argsstring>
        <name>stbi_ldr_to_hdr_gamma</name>
        <param>
          <type>float</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="471" column="20" declfile="include/stb_image.h" declline="471" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a1457f71183493d5a6100ee6a9785e744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_ldr_to_hdr_scale</definition>
        <argsstring>(float scale)</argsstring>
        <name>stbi_ldr_to_hdr_scale</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="472" column="20" declfile="include/stb_image.h" declline="472" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a894f9f42a78d83fa913bfa6190b5fb8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_hdr_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user)</argsstring>
        <name>stbi_is_hdr_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="476" column="17" declfile="include/stb_image.h" declline="476" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1acd0819e90be8de94e8841d7140d4262c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_hdr_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len)</argsstring>
        <name>stbi_is_hdr_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="477" column="17" declfile="include/stb_image.h" declline="477" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a828738812bd834ea9af464ce9826008a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_hdr</definition>
        <argsstring>(char const *filename)</argsstring>
        <name>stbi_is_hdr</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="479" column="19" declfile="include/stb_image.h" declline="479" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a6b45e9af5f0b0f76cc33bcb5b08bb7d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_hdr_from_file</definition>
        <argsstring>(FILE *f)</argsstring>
        <name>stbi_is_hdr_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="480" column="19" declfile="include/stb_image.h" declline="480" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a47c99d3d4e33df8822c5a32126249b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* stbi_failure_reason</definition>
        <argsstring>(void)</argsstring>
        <name>stbi_failure_reason</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="486" column="21" declfile="include/stb_image.h" declline="486" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ad47e820c6695b0cf5cfb63a29f4452d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_image_free</definition>
        <argsstring>(void *retval_from_stbi_load)</argsstring>
        <name>stbi_image_free</name>
        <param>
          <type>void *</type>
          <declname>retval_from_stbi_load</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="489" column="19" declfile="include/stb_image.h" declline="489" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a8a876cda0f7ca91dcb0acb0206799ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_info_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="492" column="19" declfile="include/stb_image.h" declline="492" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1adda3645c29ab5a4cd7762e758687de06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_info_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="493" column="19" declfile="include/stb_image.h" declline="493" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a1e79aeb25dd5aacbd12430ba41127064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_16_bit_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len)</argsstring>
        <name>stbi_is_16_bit_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="494" column="19" declfile="include/stb_image.h" declline="494" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a11fbc87750788d101056762c45d2cb3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_16_bit_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user)</argsstring>
        <name>stbi_is_16_bit_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="495" column="19" declfile="include/stb_image.h" declline="495" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ac94b9565008cb24823826506f9e97def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_info</definition>
        <argsstring>(char const *filename, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="498" column="19" declfile="include/stb_image.h" declline="498" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a5560f2807ab53f12ab062235b14f3a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_info_from_file</definition>
        <argsstring>(FILE *f, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="499" column="19" declfile="include/stb_image.h" declline="499" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ac4afaa8fe1b57571ca712e564f251769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_16_bit</definition>
        <argsstring>(char const *filename)</argsstring>
        <name>stbi_is_16_bit</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="500" column="19" declfile="include/stb_image.h" declline="500" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1acb925d9c2c5d882cf7cd7fe596cd0be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_is_16_bit_from_file</definition>
        <argsstring>(FILE *f)</argsstring>
        <name>stbi_is_16_bit_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="501" column="19" declfile="include/stb_image.h" declline="501" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1acce0a2f278f8e003648f9c76c149e42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_set_unpremultiply_on_load</definition>
        <argsstring>(int flag_true_if_should_unpremultiply)</argsstring>
        <name>stbi_set_unpremultiply_on_load</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_unpremultiply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="509" column="15" declfile="include/stb_image.h" declline="509" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1afbb4acd1b28fb72059bed9e6285a2961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_convert_iphone_png_to_rgb</definition>
        <argsstring>(int flag_true_if_should_convert)</argsstring>
        <name>stbi_convert_iphone_png_to_rgb</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="513" column="15" declfile="include/stb_image.h" declline="513" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a2578a821fc6c223ac6dd94ec9d73d5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_set_flip_vertically_on_load</definition>
        <argsstring>(int flag_true_if_should_flip)</argsstring>
        <name>stbi_set_flip_vertically_on_load</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_flip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="516" column="15" declfile="include/stb_image.h" declline="516" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a0062a0982765dafb48c0a748062a5703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_set_unpremultiply_on_load_thread</definition>
        <argsstring>(int flag_true_if_should_unpremultiply)</argsstring>
        <name>stbi_set_unpremultiply_on_load_thread</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_unpremultiply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="521" column="15" declfile="include/stb_image.h" declline="521" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a3afd4a13057f1aba5613e5973d0584a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_convert_iphone_png_to_rgb_thread</definition>
        <argsstring>(int flag_true_if_should_convert)</argsstring>
        <name>stbi_convert_iphone_png_to_rgb_thread</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="522" column="15" declfile="include/stb_image.h" declline="522" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a08dc586993d1c8dc0a847a77c4caf76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbi_set_flip_vertically_on_load_thread</definition>
        <argsstring>(int flag_true_if_should_flip)</argsstring>
        <name>stbi_set_flip_vertically_on_load_thread</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_flip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="523" column="15" declfile="include/stb_image.h" declline="523" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a21d1e394faaecb5c7b2bacb8e5451f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* stbi_zlib_decode_malloc_guesssize</definition>
        <argsstring>(const char *buffer, int len, int initial_size, int *outlen)</argsstring>
        <name>stbi_zlib_decode_malloc_guesssize</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="527" column="15" declfile="include/stb_image.h" declline="527" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a73353bd7f46b396392af3e315d46f237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* stbi_zlib_decode_malloc_guesssize_headerflag</definition>
        <argsstring>(const char *buffer, int len, int initial_size, int *outlen, int parse_header)</argsstring>
        <name>stbi_zlib_decode_malloc_guesssize_headerflag</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parse_header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="528" column="15" declfile="include/stb_image.h" declline="528" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a73418f475f73e785cfb1328b9d885ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* stbi_zlib_decode_malloc</definition>
        <argsstring>(const char *buffer, int len, int *outlen)</argsstring>
        <name>stbi_zlib_decode_malloc</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="529" column="15" declfile="include/stb_image.h" declline="529" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a5bb68fa61fe9bba85a1ed744e33599dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_zlib_decode_buffer</definition>
        <argsstring>(char *obuffer, int olen, const char *ibuffer, int ilen)</argsstring>
        <name>stbi_zlib_decode_buffer</name>
        <param>
          <type>char *</type>
          <declname>obuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ibuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="530" column="16" declfile="include/stb_image.h" declline="530" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a7000c985bab8e2f08516d6574daec446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* stbi_zlib_decode_noheader_malloc</definition>
        <argsstring>(const char *buffer, int len, int *outlen)</argsstring>
        <name>stbi_zlib_decode_noheader_malloc</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="532" column="15" declfile="include/stb_image.h" declline="532" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1af84d32350b9a983570a9b28204ee62f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stbi_zlib_decode_noheader_buffer</definition>
        <argsstring>(char *obuffer, int olen, const char *ibuffer, int ilen)</argsstring>
        <name>stbi_zlib_decode_noheader_buffer</name>
        <param>
          <type>char *</type>
          <declname>obuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ibuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="533" column="16" declfile="include/stb_image.h" declline="533" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/stb_image.h"/>
  </compounddef>
</doxygen>
