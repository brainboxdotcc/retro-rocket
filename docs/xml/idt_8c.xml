<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="idt_8c" kind="file" language="C++">
    <compoundname>idt.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <incdepgraph>
      <node id="57">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="22">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>stdarg.h</label>
      </node>
      <node id="60">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="29">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>stdnoreturn.h</label>
      </node>
      <node id="27">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="84">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="47">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="90">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="66">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="68">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="85">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="87">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="17">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="51">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>idt.c</label>
        <link refid="idt_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="32">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="33">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>scsi.h</label>
        <link refid="scsi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="21">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="idt_8c_1a6b115109e4a0d3c5fb6252d091e86bfe" prot="public" static="no">
        <name>PIC1</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="5" column="9" bodyfile="src/idt.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1ac90003f52c8d736193efc954ece08e58" prot="public" static="no">
        <name>PIC2</name>
        <initializer>0xA0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="6" column="9" bodyfile="src/idt.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1ad1ba81484ab03e762d2e09f851c0901f" prot="public" static="no">
        <name>PIC1_COMMAND</name>
        <initializer><ref refid="idt_8c_1a6b115109e4a0d3c5fb6252d091e86bfe" kindref="member">PIC1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="7" column="9" bodyfile="src/idt.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1af27e966ec947ca1172f30ae301c5f24b" prot="public" static="no">
        <name>PIC1_DATA</name>
        <initializer>(<ref refid="idt_8c_1a6b115109e4a0d3c5fb6252d091e86bfe" kindref="member">PIC1</ref>+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="8" column="9" bodyfile="src/idt.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a11d8793812c9d340e9a64cce26ee0570" prot="public" static="no">
        <name>PIC2_COMMAND</name>
        <initializer><ref refid="idt_8c_1ac90003f52c8d736193efc954ece08e58" kindref="member">PIC2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="9" column="9" bodyfile="src/idt.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1ab6d3b9f6f427357310896adf176145f1" prot="public" static="no">
        <name>PIC2_DATA</name>
        <initializer>(<ref refid="idt_8c_1ac90003f52c8d736193efc954ece08e58" kindref="member">PIC2</ref>+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="10" column="9" bodyfile="src/idt.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a170d8eebdb48c16cfcd60cbd46760cb2" prot="public" static="no">
        <name>PIC_EOI</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="11" column="9" bodyfile="src/idt.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a286dc251f3d73c08e08a53a4696f31ef" prot="public" static="no">
        <name>ICW1_INIT</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="12" column="9" bodyfile="src/idt.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a964d12193d2b36e8a7ec7fa57438e313" prot="public" static="no">
        <name>ICW1_ICW4</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="13" column="9" bodyfile="src/idt.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a42803c5ddcec9e120a6dbf7bc5c1b7af" prot="public" static="no">
        <name>ICW4_8086</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="14" column="9" bodyfile="src/idt.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a3411d302a8565dc77c69a39fa06785c7" prot="public" static="no">
        <name>MSI_VECTORS</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="16" column="9" bodyfile="src/idt.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1ae2cb32912a0dad9683fdd07f3288c733" prot="public" static="no">
        <name>FIRST_MSI_VECTOR</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="17" column="9" bodyfile="src/idt.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a7ce112d10224ac09bee291b79d867d89" prot="public" static="no">
        <name>MSI_WORDS</name>
        <initializer>(<ref refid="idt_8c_1a3411d302a8565dc77c69a39fa06785c7" kindref="member">MSI_VECTORS</ref> / 64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="18" column="9" bodyfile="src/idt.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8c_1a00088b2d7f9e171802c966750909e6f6" prot="public" static="no">
        <name>MSI_RESERVED_MASK</name>
        <initializer>((<ref refid="idt_8c_1ae2cb32912a0dad9683fdd07f3288c733" kindref="member">FIRST_MSI_VECTOR</ref> == 64) ? ~0ULL : ((1ULL &lt;&lt; <ref refid="idt_8c_1ae2cb32912a0dad9683fdd07f3288c733" kindref="member">FIRST_MSI_VECTOR</ref>) - 1ULL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="21" column="9" bodyfile="src/idt.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="idt_8c_1a662d60372c27399d687c8f80f33a99c4" prot="public" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t msi_bitmap[MAX_CPUS][(256/64)]</definition>
        <argsstring>[MAX_CPUS][(256/64)]</argsstring>
        <name>msi_bitmap</name>
        <initializer>= {
	[0 ... <ref refid="idt_8h_1a87cbc7cff225b4ad63d67d47c21f933f" kindref="member">MAX_CPUS</ref>-1] = {  (( 64  == 64) ? ~0ULL : ((1ULL &lt;&lt;  64 ) - 1ULL)) , 0, 0, 0 }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="24" column="17" bodyfile="src/idt.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="idt_8c_1aa97e24fea4daabae6b4e5d534ac8066d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((aligned(16)))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(aligned(16))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="29" column="1" bodyfile="src/idt.c" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1a6024a6afd45d551f30762531766a185a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void io_wait</definition>
        <argsstring>()</argsstring>
        <name>io_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Small I/O delay for hardware synchronisation. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs an I/O write to port 0x80 to allow hardware devices (such as the PIC) time to settle after reprogramming.</para>
<para><simplesect kind="note"><para>Typically only needed by low-level kernel code. Most drivers do not need to call this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="37" column="6" bodyfile="src/idt.c" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1af3dcd40ab20d43c39d9c85774f4d5e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pic_remap</definition>
        <argsstring>(int offset1, int offset2)</argsstring>
        <name>pic_remap</name>
        <param>
          <type>int</type>
          <declname>offset1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="41" column="6" bodyfile="src/idt.c" bodystart="41" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1a617b42efbd15ef9c6d4e7b467c59317e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pic_disable</definition>
        <argsstring>()</argsstring>
        <name>pic_disable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="66" column="6" bodyfile="src/idt.c" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1acec4df702487e44b82b31748a089ad9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pic_enable</definition>
        <argsstring>()</argsstring>
        <name>pic_enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="71" column="6" bodyfile="src/idt.c" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1ac58b11f9cfbfe9217a7e9a256f6a1038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pic_eoi</definition>
        <argsstring>(int irq)</argsstring>
        <name>pic_eoi</name>
        <param>
          <type>int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
<para>Send End-of-Interrupt (EOI) to the PIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Notifies the PIC(s) that interrupt handling has finished. For IRQs &gt;= 8, signals both slave and master PICs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq</parametername>
</parameternamelist>
<parameterdescription>
<para>The IRQ line number (0–15).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Normally issued automatically by the kernel after invoking registered handlers. Only call directly when writing low-level PIC-specific code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="76" column="6" bodyfile="src/idt.c" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1a35fe413107af682030ab7a4b6dff19b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_idt</definition>
        <argsstring>()</argsstring>
        <name>init_idt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialise the IDT and enable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up the full 256-entry Interrupt Descriptor Table (IDT), remaps or disables the legacy PIC depending on configuration, configures the PIT to 50Hz (if APIC timer is not used), and loads the IDT register. CPU interrupts are enabled at the end.</para>
<para><simplesect kind="note"><para>Called once during kernel bootstrap. Drivers must not call this directly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="83" column="6" bodyfile="src/idt.c" bodystart="83" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1a999453d510cd4178931cf51d7ba0ec2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int alloc_msi_vector</definition>
        <argsstring>(uint8_t cpu)</argsstring>
        <name>alloc_msi_vector</name>
        <param>
          <type>uint8_t</type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
<para>Allocate a free MSI interrupt vector on a given CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>Allocates an IDT vector in the range 64–255 for use with Message Signalled Interrupts (MSI/MSI-X), associated with the specified Local APIC ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical CPU ID of the target CPU.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector number (64–255) on success, -1 if no free vector is available on that CPU.</para>
</simplesect>
<simplesect kind="note"><para>After allocation, the driver must program the device’s MSI/MSI-X capability structure with the returned vector and Local APIC ID, and register an interrupt handler for the vector on the specified CPU. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="122" column="5" bodyfile="src/idt.c" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1a3567555043c64e8065fbe9f47d0dd894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_msi_vector</definition>
        <argsstring>(uint8_t cpu, int vec)</argsstring>
        <name>free_msi_vector</name>
        <param>
          <type>uint8_t</type>
          <declname>cpu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Free a previously allocated MSI interrupt vector on a given CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>Marks the given MSI vector as available for reuse on the specified Local APIC ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical CPU ID of the CPU that the vector belongs to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The MSI vector to free (64–255).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Behaviour is undefined if freeing a vector that was never allocated on the given CPU, or is still in use.</para>
</simplesect>
<simplesect kind="note"><para>Drivers should call this during teardown to avoid leaking interrupt vectors on that CPU. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="134" column="6" bodyfile="src/idt.c" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="idt_8c_1a65a15cc23a7bd19af939b9ff5b7bd2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load_ap_shared_idt</definition>
        <argsstring>()</argsstring>
        <name>load_ap_shared_idt</name>
        <briefdescription>
<para>Load the shared IDT and enable interrupts on an Application Processor (AP). </para>
        </briefdescription>
        <detaileddescription>
<para>This function loads the global Interrupt Descriptor Table (IDT) pointer into the AP&apos;s IDTR register using the <computeroutput>lidt</computeroutput> instruction. After the IDT is loaded, it enables external interrupts via <computeroutput>sti</computeroutput> (wrapped by <ref refid="io_8h_1a46886fcdf5af666afe41598958dc0bdd" kindref="member">interrupts_on()</ref>).</para>
<para>It is typically called during AP startup before entering the scheduler loop, ensuring that the AP can handle interrupts using the same IDT as the BSP.</para>
<para><simplesect kind="note"><para>All APs share the same IDT (idt64) in this design. </para>
</simplesect>
<simplesect kind="see"><para>lidt, <ref refid="io_8h_1a46886fcdf5af666afe41598958dc0bdd" kindref="member">interrupts_on</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/idt.c" line="142" column="6" bodyfile="src/idt.c" bodystart="142" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/idt.c"/>
  </compounddef>
</doxygen>
