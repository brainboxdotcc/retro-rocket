<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RND" kind="page">
    <compoundname>RND</compoundname>
    <title>RND Function</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename=".basic"><codeline><highlight class="normal">RND(min,<sp/>max)</highlight></codeline>
</programlisting></para>
<para>Returns a <bold>pseudo-random integer</bold> between <computeroutput>min</computeroutput> and <computeroutput>max</computeroutput> (inclusive). Both parameters must be integers, and the first must be less than or equal to the second.</para>
<para>The generator uses the <bold>Mersenne Twister (mt19937)</bold> algorithm, seeded from entropy provided by the operating system kernel.</para>
<para><image type="html" name="rnd.png"></image>
</para>
<para><hruler/>
</para>
<sect3 id="RND_1autotoc_md288">
<title>Examples</title>
<para><programlisting filename=".basic"><codeline><highlight class="normal">REM<sp/>Toss<sp/>a<sp/>coin<sp/>(1<sp/>or<sp/>2)</highlight></codeline>
<codeline><highlight class="normal">PRINT<sp/>RND(1,<sp/>2)</highlight></codeline>
</programlisting></para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">REM<sp/>Roll<sp/>a<sp/>six-sided<sp/>die</highlight></codeline>
<codeline><highlight class="normal">PRINT<sp/>RND(1,<sp/>6)</highlight></codeline>
</programlisting></para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">REM<sp/>Pick<sp/>a<sp/>random<sp/>number<sp/>between<sp/>50<sp/>and<sp/>5000</highlight></codeline>
<codeline><highlight class="normal">PRINT<sp/>RND(50,<sp/>5000)</highlight></codeline>
</programlisting></para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">REM<sp/>Generate<sp/>5<sp/>random<sp/>values<sp/>between<sp/>100<sp/>and<sp/>200</highlight></codeline>
<codeline><highlight class="normal">FOR<sp/>i<sp/>=<sp/>1<sp/>TO<sp/>5</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>PRINT<sp/>RND(100,<sp/>200)</highlight></codeline>
<codeline><highlight class="normal">NEXT</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
</sect3>
<sect3 id="RND_1autotoc_md290">
<title>Notes</title>
<para><itemizedlist>
<listitem><para>The result is an <bold>integer</bold> within the inclusive range <computeroutput>[min, max]</computeroutput>.</para>
</listitem><listitem><para>If <computeroutput>min &gt; max</computeroutput>, behaviour is undefined.</para>
</listitem><listitem><para>Suitable for general randomness in games, simulations, and sampling.</para>
</listitem><listitem><para><bold>Not cryptographically secure</bold> — although the kernel provides an unpredictable seed, the Mersenne Twister itself is deterministic and predictable if state is known.</para>
</listitem><listitem><para><bold>Retro Rocket BASIC difference:</bold> BBC BASIC used a 33-bit LFSR (linear feedback shift register). Retro Rocket uses a modern PRNG (Mersenne Twister).</para>
</listitem></itemizedlist>
</para>
<para><hruler/>
</para>
<para><bold>See also:</bold> <ref refid="INT" kindref="compound">INT</ref> · <ref refid="ABS" kindref="compound">ABS</ref> </para>
</sect3>
    </detaileddescription>
    <location file="docpages/basic-language-reference/functions/integer/RND.md"/>
  </compounddef>
</doxygen>
