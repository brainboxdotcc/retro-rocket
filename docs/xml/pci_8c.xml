<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="pci_8c" kind="file" language="C++">
    <compoundname>pci.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <incdepgraph>
      <node id="52">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="20">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>stdarg.h</label>
      </node>
      <node id="55">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="26">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="79">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="43">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="34">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="61">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="1">
        <label>pci.c</label>
        <link refid="pci_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="62">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="80">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="82">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="72">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="47">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="29">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="30">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>basic/tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="19">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pci_8c_1a67ec5bd67d491b9b1be13d758c9f2d87" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* pci_device_class[]</definition>
        <argsstring>[]</argsstring>
        <name>pci_device_class</name>
        <initializer>= {
	&quot;Unknown&quot;,
	&quot;Mass Storage Controller&quot;,
	&quot;Network Controller&quot;,
	&quot;Display Controller&quot;,
	&quot;Multimedia Controller&quot;,
	&quot;Memory Controller&quot;,
	&quot;Bridge Device&quot;,
	&quot;Simple Communication Controller&quot;,
	&quot;Base System Peripheral&quot;,
	&quot;Input Device&quot;,
	&quot;Docking Station&quot;,
	&quot;Processor&quot;,
	&quot;Serial Bus Controller&quot;,
	&quot;Wireless Controller&quot;,
	&quot;Intelligent I/O Controller&quot;,
	&quot;Satellite Communication Controller&quot;,
	&quot;Encryption/Decryption Controller&quot;,
	&quot;Data Acquisition/Signal Processing Controller&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="3" column="12" bodyfile="src/pci.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pci_8c_1a2eb77e4813b431dd4f1efd1bb365fd76" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpci__subclass" kindref="compound">pci_subclass</ref></type>
        <definition>const pci_subclass pci_device_sub_class[]</definition>
        <argsstring>[]</argsstring>
        <name>pci_device_sub_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="24" column="20" bodyfile="src/pci.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pci_8c_1a8336b879b82556964a89f56680cab7b0" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t pci_size_map[100]</definition>
        <argsstring>[100]</argsstring>
        <name>pci_size_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="179" column="10" bodyfile="src/pci.c" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pci_8c_1a20f742d67da8197d67e0f679982f0328" prot="public" static="no" mutable="no">
        <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
        <definition>pci_dev_t dev_zero</definition>
        <argsstring></argsstring>
        <name>dev_zero</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="180" column="11" bodyfile="src/pci.c" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pci_8c_1a390139b91a6325d77edbdc3fa0b15c9c" prot="public" static="no" mutable="no">
        <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
        <definition>pci_dev_t device_list[256]</definition>
        <argsstring>[256]</argsstring>
        <name>device_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="181" column="11" bodyfile="src/pci.c" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pci_8c_1ae142fb3cb4d0e1bf937475b6b87f5986" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t device_total</definition>
        <argsstring></argsstring>
        <name>device_total</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="182" column="8" bodyfile="src/pci.c" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pci_8c_1af5118eab01188812bceeedec41acabb8" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool visited_buses[256]</definition>
        <argsstring>[256]</argsstring>
        <name>visited_buses</name>
        <initializer>= { false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="448" column="13" bodyfile="src/pci.c" bodystart="448" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pci_8c_1acfcfa5ee1f172b02ed5ded3f9a48c14f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pci_bus_master</definition>
        <argsstring>(pci_dev_t device)</argsstring>
        <name>pci_bus_master</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Enable bus mastering on a PCI device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if bus mastering was newly enabled, false if already set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="184" column="6" bodyfile="src/pci.c" bodystart="184" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1abbdb3592d2988357e39ecb89edf42803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pci_not_found</definition>
        <argsstring>(pci_dev_t device)</argsstring>
        <name>pci_not_found</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Test whether a device descriptor represents &apos;not found&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if no device, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="194" column="6" bodyfile="src/pci.c" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a99c835f2d27af0e6335617180be46775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t pci_bar_type</definition>
        <argsstring>(uint32_t field)</argsstring>
        <name>pci_bar_type</name>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Get the type of a PCI Base Address Register (BAR). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw BAR field value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 = memory, 1 = I/O. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="198" column="9" bodyfile="src/pci.c" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1ae173ef988f04776521bbb441754b632f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t pci_io_base</definition>
        <argsstring>(uint32_t field)</argsstring>
        <name>pci_io_base</name>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Extract an I/O base address from a BAR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw BAR field value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>I/O port base address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="202" column="10" bodyfile="src/pci.c" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1aabf8de69d779907c7a09bd5f274b8d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pci_mem_base</definition>
        <argsstring>(uint32_t field)</argsstring>
        <name>pci_mem_base</name>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Extract a memory base address from a BAR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw BAR field value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Memory-mapped base address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="206" column="10" bodyfile="src/pci.c" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a1b3ead5a8fcb9b7c6a20c61df6e4a56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pci_read</definition>
        <argsstring>(pci_dev_t dev, uint32_t field)</argsstring>
        <name>pci_read</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Read a value from a PCI configuration space field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the configuration field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value read (size determined by field). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="210" column="10" bodyfile="src/pci.c" bodystart="210" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a3cb38f4b39e7441ad3c36c5174f8a097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t pci_read8</definition>
        <argsstring>(pci_dev_t dev, uint32_t field)</argsstring>
        <name>pci_read8</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="235" column="9" bodyfile="src/pci.c" bodystart="235" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a7475c4f00cd2fe0baf059d55b9eae514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t pci_read16</definition>
        <argsstring>(pci_dev_t dev, uint32_t field)</argsstring>
        <name>pci_read16</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="242" column="10" bodyfile="src/pci.c" bodystart="242" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a596528b753a67541039e8cd794fe39d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pci_read32</definition>
        <argsstring>(pci_dev_t dev, uint32_t field)</argsstring>
        <name>pci_read32</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="249" column="10" bodyfile="src/pci.c" bodystart="249" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a7c476ee0fa9b8c56df2d642a372aea52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pci_write8</definition>
        <argsstring>(pci_dev_t dev, uint32_t field, uint8_t value)</argsstring>
        <name>pci_write8</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="260" column="6" bodyfile="src/pci.c" bodystart="260" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1acc80133013150394ff7621cd7bd36b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pci_write16</definition>
        <argsstring>(pci_dev_t dev, uint32_t field, uint16_t value)</argsstring>
        <name>pci_write16</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="267" column="6" bodyfile="src/pci.c" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a2c194d08c034b9be6aca601c34a5617b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pci_write32</definition>
        <argsstring>(pci_dev_t dev, uint32_t field, uint32_t value)</argsstring>
        <name>pci_write32</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="274" column="6" bodyfile="src/pci.c" bodystart="274" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a0f62b415645f8773747ea15af6177ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pci_write</definition>
        <argsstring>(pci_dev_t dev, uint32_t field, uint32_t value)</argsstring>
        <name>pci_write</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>field</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write a value into a PCI configuration space field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the configuration field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to write (size determined by field). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="289" column="6" bodyfile="src/pci.c" bodystart="289" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a2958aa8618c13dcac19b96c6749e8ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t get_device_type</definition>
        <argsstring>(pci_dev_t dev)</argsstring>
        <name>get_device_type</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Get the PCI device class/subclass identifier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Encoded device type (class &lt;&lt; 8 | subclass). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="317" column="10" bodyfile="src/pci.c" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a2b914ecc0d51fc49d191e1cab5a42035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t get_secondary_bus</definition>
        <argsstring>(pci_dev_t dev)</argsstring>
        <name>get_secondary_bus</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Get the secondary bus number from a PCI bridge device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI bridge device descriptor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Secondary bus number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="325" column="10" bodyfile="src/pci.c" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1aa31df8f900c2306e32d389ff2ddc7144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pci_reach_end</definition>
        <argsstring>(pci_dev_t dev)</argsstring>
        <name>pci_reach_end</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Determine if the device is a single-function endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if endpoint, zero if multifunction/bridge. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="332" column="10" bodyfile="src/pci.c" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a6314b13112829af868417a59b03c7a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
        <definition>pci_dev_t pci_scan_function</definition>
        <argsstring>(uint16_t vendor_id, uint16_t device_id, uint32_t bus, uint32_t device, uint32_t function, int device_type)</argsstring>
        <name>pci_scan_function</name>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bus</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>device</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <briefdescription>
<para>Scan a specific PCI function for matching IDs or type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID to match (0 = wildcard). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Device ID to match (0 = wildcard). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bus</parametername>
</parameternamelist>
<parameterdescription>
<para>Bus number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Device slot number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Function number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Device class/type to match (-1 = any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matching PCI device or dev_zero if none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="340" column="11" bodyfile="src/pci.c" bodystart="340" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1ae7f216cacb07fed85ffc9a988f7559b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t pci_get_device_list</definition>
        <argsstring>(pci_dev_t **list)</argsstring>
        <name>pci_get_device_list</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref> **</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Get a list of all enumerated PCI devices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to array of devices (output). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of devices in the list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="373" column="8" bodyfile="src/pci.c" bodystart="373" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1aea7e8359de57f6fe2ba661fb2cbe0841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pci_display_device_list</definition>
        <argsstring>()</argsstring>
        <name>pci_display_device_list</name>
        <briefdescription>
<para>Display enumerated PCI devices to the system log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="383" column="6" bodyfile="src/pci.c" bodystart="383" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1aa1505d7a496707c68f2e39c3208ab519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
        <definition>pci_dev_t pci_scan_device</definition>
        <argsstring>(uint16_t vendor_id, uint16_t device_id, uint32_t bus, uint32_t device, int device_type)</argsstring>
        <name>pci_scan_device</name>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bus</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>device</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <briefdescription>
<para>Scan all functions of a given PCI device slot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID to match (0 = wildcard). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Device ID to match (0 = wildcard). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bus</parametername>
</parameternamelist>
<parameterdescription>
<para>Bus number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Device slot number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Device class/type to match (-1 = any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matching PCI device or dev_zero if none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="416" column="11" bodyfile="src/pci.c" bodystart="416" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a4f76d3aca55ca73e8e130b3d05ce337c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
        <definition>pci_dev_t pci_scan_bus</definition>
        <argsstring>(uint16_t vendor_id, uint16_t device_id, uint32_t bus, int device_type)</argsstring>
        <name>pci_scan_bus</name>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bus</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <briefdescription>
<para>Scan all devices on a given PCI bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID to match (0 = wildcard). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Device ID to match (0 = wildcard). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bus</parametername>
</parameternamelist>
<parameterdescription>
<para>Bus number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Device class/type to match (-1 = any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>First matching PCI device or dev_zero if none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="450" column="11" bodyfile="src/pci.c" bodystart="450" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a23395c1f682d006bba59e854b41b975f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
        <definition>pci_dev_t pci_get_device</definition>
        <argsstring>(uint16_t vendor_id, uint16_t device_id, int device_type)</argsstring>
        <name>pci_get_device</name>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <briefdescription>
<para>Find a device by vendor, device, or type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID to match (0 = any). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Device ID to match (0 = any). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Device class/type to match (-1 = any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matching PCI device or dev_zero if none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="483" column="11" bodyfile="src/pci.c" bodystart="483" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1ac1163b8d93711c6fa01dfbffd2b4f0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_pci</definition>
        <argsstring>()</argsstring>
        <name>init_pci</name>
        <briefdescription>
<para>Initialise the PCI subsystem and enumerate devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="510" column="6" bodyfile="src/pci.c" bodystart="510" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a16049e7066a54bf300d2900c01ad3795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pci_interrupt_enable</definition>
        <argsstring>(pci_dev_t device, bool enable)</argsstring>
        <name>pci_interrupt_enable</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or disable legacy INTx interrupt signalling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True = enable, False = disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="539" column="6" bodyfile="src/pci.c" bodystart="539" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1abaad9a1f44a869380761a057a7d85b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pci_enable_msi</definition>
        <argsstring>(pci_dev_t device, uint32_t vector, uint32_t lapic_id)</argsstring>
        <name>pci_enable_msi</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lapic_id</declname>
        </param>
        <briefdescription>
<para>Enable MSI (Message Signalled Interrupts) on a device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>APIC interrupt vector to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lapic_id</parametername>
</parameternamelist>
<parameterdescription>
<para>local APIC ID of the CPU to route the vector to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if MSI was enabled successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="549" column="6" bodyfile="src/pci.c" bodystart="549" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a44a7ba4d9b4824c39171b6c48d8c9d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pci_enable_msix</definition>
        <argsstring>(pci_dev_t device, uint32_t vector, uint16_t entry, uint32_t lapic_id)</argsstring>
        <name>pci_enable_msix</name>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lapic_id</declname>
        </param>
        <briefdescription>
<para>Enable MSI-X (extended message signalled interrupts). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>PCI device descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>APIC interrupt vector to assign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>MSI-X table entry to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lapic_id</parametername>
</parameternamelist>
<parameterdescription>
<para>local APIC ID of the CPU to route the vector to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if MSI-X was enabled successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="614" column="6" bodyfile="src/pci.c" bodystart="614" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="pci_8c_1a9388fd28fe0a2e0eb3214518dcb66c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pci_setup_interrupt</definition>
        <argsstring>(const char *name, pci_dev_t dev, uint8_t logical_cpu_id, isr_t handler, void *context)</argsstring>
        <name>pci_setup_interrupt</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="unionpci__dev__t" kindref="compound">pci_dev_t</ref></type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>logical_cpu_id</declname>
        </param>
        <param>
          <type><ref refid="idt_8h_1a7a3af27140adcc73f278f9d9c9dcd4bc" kindref="member">isr_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Configure an interrupt for a PCI device (MSI/MSI-X if available). </para>
        </briefdescription>
        <detaileddescription>
<para>Attempts to enable MSI/MSI-X for the given PCI device, routing the interrupt to the specified Local APIC ID. If the device does not support MSI/MSI-X, falls back to legacy INTx routing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Human-readable device name (used in logs/debug output). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The PCI device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logical_cpu_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical CPU ID of the target CPU that should receive the interrupt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt service routine to register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer passed to the ISR when the interrupt fires.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>The lapic_id parameter must be a valid logical ID corresponding to an online CPU. Passing an invalid or offline CPU ID will result in undefined behaviour and may cause interrupts to be lost.</para>
</simplesect>
<simplesect kind="return"><para>The assigned interrupt vector (64–255 if MSI/MSI-X was used, or IRQ_START + line if falling back to legacy INTx).</para>
</simplesect>
<simplesect kind="note"><para>Drivers should always check the returned vector to confirm which interrupt mechanism was actually configured. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pci.c" line="690" column="10" bodyfile="src/pci.c" bodystart="690" bodyend="713"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/pci.c"/>
  </compounddef>
</doxygen>
