<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="kmalloc_8c" kind="file" language="C++">
    <compoundname>kmalloc.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <includes refid="kmalloc_8h" local="no">kmalloc.h</includes>
    <includes local="no">limine.h</includes>
    <includes refid="debugger_8h" local="no">debugger.h</includes>
    <includes refid="tinyalloc_8h" local="no">tinyalloc.h</includes>
    <incdepgraph>
      <node id="32">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="20">
        <label>basic.h</label>
        <link refid="basic_8h"/>
      </node>
      <node id="35">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="47">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="59">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>basic_tokenizer.h</label>
        <link refid="basic__tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="23">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="41">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="42">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="60">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="55">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kmalloc.c</label>
        <link refid="kmalloc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="27">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
      </node>
      <node id="63">
        <label>tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="53">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="30">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="19">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="kmalloc_8c_1aa70a06ba78f022c050dd69989083b958" prot="public" static="no">
        <name>LOW_HEAP_START</name>
        <initializer>0x800000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="7" column="9" bodyfile="src/kmalloc.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kmalloc_8c_1a2bfa0cbe5b40caf99e238c8ec5b035a9" prot="public" static="no">
        <name>LOW_HEAP_MAX</name>
        <initializer>0x1400000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="8" column="9" bodyfile="src/kmalloc.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kmalloc_8c_1a42225350857e84e4e8b9000dd638f003" prot="public" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t heapstart</definition>
        <argsstring></argsstring>
        <name>heapstart</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="10" column="17" bodyfile="src/kmalloc.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmalloc_8c_1ad1ae938b9caa458cd870da047f468b4c" prot="public" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t heaplen</definition>
        <argsstring></argsstring>
        <name>heaplen</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="11" column="17" bodyfile="src/kmalloc.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmalloc_8c_1acd5fad81256e440dd3ca8721a6cb65cd" prot="public" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t allocated</definition>
        <argsstring></argsstring>
        <name>allocated</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="12" column="17" bodyfile="src/kmalloc.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmalloc_8c_1aba6a2743a4c6795d30e372170423213c" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t low_mem_cur</definition>
        <argsstring></argsstring>
        <name>low_mem_cur</name>
        <initializer>=  0x800000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="14" column="17" bodyfile="src/kmalloc.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmalloc_8c_1a105e95e79616b8c69b810041e80a8d12" prot="public" static="yes" mutable="no">
        <type><ref refid="spinlock_8h_1af82eed01f0304d83276dda764b213779" kindref="member">spinlock_t</ref></type>
        <definition>spinlock_t allocator_lock</definition>
        <argsstring></argsstring>
        <name>allocator_lock</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="16" column="19" bodyfile="src/kmalloc.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kmalloc_8c_1a0a4955210c7cbc8f15f210d05f8b25c5" prot="public" static="no" mutable="no">
        <type>struct limine_memmap_request</type>
        <definition>volatile struct limine_memmap_request memory_map_request</definition>
        <argsstring></argsstring>
        <name>memory_map_request</name>
        <initializer>= {
	.<ref refid="dns_8c_1a4fc3a0c58dfbd1e68224521185cb9384" kindref="member">id</ref> = LIMINE_MEMMAP_REQUEST,
	.<ref refid="acpi_8h_1ab01c6e281b316b1770d5646f3d3101c4" kindref="member">revision</ref> = 0,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="16" column="19" bodyfile="src/kmalloc.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="kmalloc_8c_1a48ed44cd60d7dd25dc396e20739a3a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void preboot_fail</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>preboot_fail</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Halt the system with a preboot failure message. </para>
        </briefdescription>
        <detaileddescription>
<para>Used when a critical failure occurs before full initialisation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Null-terminated string describing the failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="23" column="6" bodyfile="src/kmalloc.c" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a632fb5550678e7d65db823fb1adc2dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_heap</definition>
        <argsstring>()</argsstring>
        <name>init_heap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialise the kernel heap. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up internal data structures required for dynamic memory allocation. Should be called early during kernel initialisation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="30" column="6" bodyfile="src/kmalloc.c" bodystart="30" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a56ae8e632dd1a93d76e4a9b9f265f3a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_heapinfo</definition>
        <argsstring>()</argsstring>
        <name>print_heapinfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Print diagnostic heap information to the terminal. </para>
        </briefdescription>
        <detaileddescription>
<para>Outputs allocator statistics such as used, free, and total heap space. Primarily for debugging and diagnostics. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="56" column="6" bodyfile="src/kmalloc.c" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1aa6bcd5af56ca7ffbc761b010cbd70e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* kmalloc</definition>
        <argsstring>(uint64_t size)</argsstring>
        <name>kmalloc</name>
        <param>
          <type>uint64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate memory from the kernel heap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to allocate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated memory, or NULL if allocation fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="60" column="6" bodyfile="src/kmalloc.c" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a595b89fbbc872879d27d666f5cf8eba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kfree</definition>
        <argsstring>(const void *ptr)</argsstring>
        <name>kfree</name>
        <param>
          <type>const void *</type>
          <declname>addr</declname>
          <defname>ptr</defname>
        </param>
        <briefdescription>
<para>Free previously allocated memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer previously returned by kmalloc/kcalloc/krealloc. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="69" column="6" bodyfile="src/kmalloc.c" bodystart="69" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a2ae41a466ab6ea275ca1ebae81b56945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t kmalloc_low</definition>
        <argsstring>(uint32_t size)</argsstring>
        <name>kmalloc_low</name>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate memory from low (identity-mapped) memory under 4GB. </para>
        </briefdescription>
        <detaileddescription>
<para>Intended for DMA buffers or page tables that require low physical addresses.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to allocate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Physical address of the allocated block (below 4GB). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="84" column="10" bodyfile="src/kmalloc.c" bodystart="84" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a60f2a49082216212a87de02d7c79851f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kfree_low</definition>
        <argsstring>(uint32_t addr)</argsstring>
        <name>kfree_low</name>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Free a low-memory allocation made with <ref refid="kmalloc_8h_1a2ae41a466ab6ea275ca1ebae81b56945" kindref="member">kmalloc_low()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Only needed if low memory is explicitly managed and reused.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Physical address of the block to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="97" column="6" bodyfile="src/kmalloc.c" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a4af91afe377146f47af63dac6fb93fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* kcalloc</definition>
        <argsstring>(size_t num, size_t size)</argsstring>
        <name>kcalloc</name>
        <param>
          <type>size_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate zero-initialised memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of each element in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated memory, or NULL if allocation fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="101" column="6" bodyfile="src/kmalloc.c" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1aece282b3071af855886669942d53537a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* krealloc</definition>
        <argsstring>(void *ptr, size_t new_size)</argsstring>
        <name>krealloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
<para>Resize previously allocated memory block. </para>
        </briefdescription>
        <detaileddescription>
<para>Preserves contents up to the lesser of old and new sizes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to memory allocated by kmalloc/kcalloc/krealloc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_size</parametername>
</parameternamelist>
<parameterdescription>
<para>New size in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to reallocated memory, or NULL if resizing fails. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="107" column="6" bodyfile="src/kmalloc.c" bodystart="107" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1ab1204bd1ce4097b381452452445b75f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t get_free_memory</definition>
        <argsstring>()</argsstring>
        <name>get_free_memory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get total amount of free memory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Free heap space in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="117" column="10" bodyfile="src/kmalloc.c" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a3637eb65ed827e7cba29a4dc57273a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t get_used_memory</definition>
        <argsstring>()</argsstring>
        <name>get_used_memory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get total amount of used memory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Used heap space in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="121" column="10" bodyfile="src/kmalloc.c" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="kmalloc_8c_1a9227ee8bcad10a2503376915463f28b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t get_total_memory</definition>
        <argsstring>()</argsstring>
        <name>get_total_memory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get total available memory managed by the kernel heap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Total heap size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/kmalloc.c" line="125" column="10" bodyfile="src/kmalloc.c" bodystart="125" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/kmalloc.c"/>
  </compounddef>
</doxygen>
