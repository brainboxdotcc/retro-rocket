<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="clock_8c" kind="file" language="C++">
    <compoundname>clock.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <incdepgraph>
      <node id="32">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="20">
        <label>basic.h</label>
        <link refid="basic_8h"/>
      </node>
      <node id="35">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="47">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="59">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>basic_tokenizer.h</label>
        <link refid="basic__tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="23">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="41">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="42">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="60">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="55">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="27">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
      </node>
      <node id="40">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="53">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>clock.c</label>
        <link refid="clock_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="30">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="19">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="clock_8c_1a213ee6f0ec6d88083c8d350fde2202ae" prot="public" static="yes" mutable="no">
        <type><ref refid="structdatetime__t" kindref="compound">datetime_t</ref></type>
        <definition>datetime_t current_datetime</definition>
        <argsstring></argsstring>
        <name>current_datetime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="3" column="19" bodyfile="src/clock.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="clock_8c_1a6a0981ce9a86bd9d68fefd2aa88b5034" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* weekday_map[7]</definition>
        <argsstring>[7]</argsstring>
        <name>weekday_map</name>
        <initializer>= {&quot;Sun&quot;, &quot;Mon&quot;, &quot;Tue&quot;, &quot;Wed&quot;, &quot;Thu&quot;, &quot;Fri&quot;, &quot;Sat&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="5" column="12" bodyfile="src/clock.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="clock_8c_1ab436b26ed418007ddb2588ba31c2c3ad" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* month_map[12]</definition>
        <argsstring>[12]</argsstring>
        <name>month_map</name>
        <initializer>= {&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="6" column="12" bodyfile="src/clock.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="clock_8c_1ad038a951c786199a54840fe8b129d6b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtc_read_datetime</definition>
        <argsstring>()</argsstring>
        <name>rtc_read_datetime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="56" column="6" bodyfile="src/clock.c" bodystart="56" bodyend="74" declfile="src/clock.c" declline="8" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1a8224f7fa51de1642e6634e72f2f06be2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_weekday_from_date</definition>
        <argsstring>(datetime_t *dt)</argsstring>
        <name>get_weekday_from_date</name>
        <param>
          <type><ref refid="structdatetime__t" kindref="compound">datetime_t</ref> *</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Calculate the weekday index from a given date. </para>
        </briefdescription>
        <detaileddescription>
<para>Uses a modified version of Zeller&apos;s Congruence with precomputed tables for month codes and century codes (starting from the 18th century). The function accounts for leap years.</para>
<para>Weekdays are returned as an integer where:<itemizedlist>
<listitem><para>0 = Sunday</para>
</listitem><listitem><para>1 = Monday</para>
</listitem><listitem><para>2 = Tuesday</para>
</listitem><listitem><para>3 = Wednesday</para>
</listitem><listitem><para>4 = Thursday</para>
</listitem><listitem><para>5 = Friday</para>
</listitem><listitem><para>6 = Saturday</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <computeroutput><ref refid="structdatetime__t" kindref="compound">datetime_t</ref></computeroutput> structure containing the full date </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Weekday index (0 = Sunday ... 6 = Saturday) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="87" column="5" bodyfile="src/clock.c" bodystart="87" bodyend="96" declfile="src/clock.c" declline="9" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1a5422fc453dd6b462d4bc1fc0df9e4bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_datetime</definition>
        <argsstring>(datetime_t *dt)</argsstring>
        <name>get_datetime</name>
        <param>
          <type><ref refid="structdatetime__t" kindref="compound">datetime_t</ref> *</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Retrieve the current date and time into a <ref refid="structdatetime__t" kindref="compound">datetime_t</ref> structure. </para>
        </briefdescription>
        <detaileddescription>
<para>Accesses the hardware RTC and converts its registers to a structured format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="structdatetime__t" kindref="compound">datetime_t</ref> structure to fill with current values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="11" column="6" bodyfile="src/clock.c" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1aecb80e3a98cb51b2ce406daf24d2f26c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_updating_rtc</definition>
        <argsstring>()</argsstring>
        <name>is_updating_rtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="16" column="6" bodyfile="src/clock.c" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1a4b4ba8078f133a5e0aecfb236c25e317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t get_rtc_register</definition>
        <argsstring>(int reg_num)</argsstring>
        <name>get_rtc_register</name>
        <param>
          <type>int</type>
          <declname>reg_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="21" column="9" bodyfile="src/clock.c" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1a5c8646e79381e870b7acea77deeb5b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_rtc_register</definition>
        <argsstring>(uint16_t reg_num, uint8_t val)</argsstring>
        <name>set_rtc_register</name>
        <param>
          <type>uint16_t</type>
          <declname>reg_num</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="26" column="6" bodyfile="src/clock.c" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1a0ed0af74b6ab22d8c7a1b7ba9733e12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t day_of_year</definition>
        <argsstring>(uint64_t year, uint8_t month, uint8_t day)</argsstring>
        <name>day_of_year</name>
        <param>
          <type>uint64_t</type>
          <declname>year</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>month</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>day</declname>
        </param>
        <briefdescription>
<para>Calculate the ordinal day of the year for a given date. </para>
        </briefdescription>
        <detaileddescription>
<para>Ported from JavaScript (see: <ulink url="https://stackoverflow.com/a/75032366/3022125">https://stackoverflow.com/a/75032366/3022125</ulink>) Useful for computing time offsets or determining seasonal positions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>year</parametername>
</parameternamelist>
<parameterdescription>
<para>Full year (e.g., 2025) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>month</parametername>
</parameternamelist>
<parameterdescription>
<para>Month (1–12) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>day</parametername>
</parameternamelist>
<parameterdescription>
<para>Day of the month (1–31) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint64_t Day of the year (1–366) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="31" column="10" bodyfile="src/clock.c" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1ae7841e681c8c9d59818568d39553642c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="clock_8h_1a02ad034d26db2c14b7e295b0c50fc11d" kindref="member">time_t</ref></type>
        <definition>time_t time</definition>
        <argsstring>(time_t *t)</argsstring>
        <name>time</name>
        <param>
          <type><ref refid="clock_8h_1a02ad034d26db2c14b7e295b0c50fc11d" kindref="member">time_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Retrieve the current time in POSIX epoch format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the time value is also stored at this pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>time_t Number of seconds since 00:00:00 UTC on 1 January 1970 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="35" column="8" bodyfile="src/clock.c" bodystart="35" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1a06107a6d2df55301644f98a80ef0517a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_leap_year</definition>
        <argsstring>(int year, int month)</argsstring>
        <name>is_leap_year</name>
        <param>
          <type>int</type>
          <declname>year</declname>
        </param>
        <param>
          <type>int</type>
          <declname>month</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="76" column="5" bodyfile="src/clock.c" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1ab1913913a5b7c972308168a69e64d67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* datetime_to_str</definition>
        <argsstring>(datetime_t *dt)</argsstring>
        <name>datetime_to_str</name>
        <param>
          <type><ref refid="structdatetime__t" kindref="compound">datetime_t</ref> *</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="98" column="12" bodyfile="src/clock.c" bodystart="98" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1acaac299510c8ace6baf3848cf616de85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* get_datetime_str</definition>
        <argsstring>()</argsstring>
        <name>get_datetime_str</name>
        <briefdescription>
<para>Retrieve the current date and time as a human-readable string. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a static buffer containing the current date and time, formatted in the style: <computeroutput>&quot;Weekday, DD Month YYYY HH:MM:SS&quot;</computeroutput></para>
<para>Example: <computeroutput>&quot;Mon, 28 Jul 2025 01:45:12&quot;</computeroutput></para>
<para><simplesect kind="return"><para>const char* Pointer to a statically allocated string buffer (overwritten on subsequent calls). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="118" column="12" bodyfile="src/clock.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="clock_8c_1aff93106d7e8609959f1bd8185a822def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_realtime_clock</definition>
        <argsstring>()</argsstring>
        <name>init_realtime_clock</name>
        <briefdescription>
<para>Initialise the Real-Time Clock (RTC) subsystem. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be called during early boot to configure RTC access and disable periodic interrupts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clock.c" line="123" column="6" bodyfile="src/clock.c" bodystart="123" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/clock.c"/>
  </compounddef>
</doxygen>
