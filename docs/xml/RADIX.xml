<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RADIX" kind="page">
    <compoundname>RADIX</compoundname>
    <title>RADIX Function</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename=".basic"><codeline><highlight class="normal">RADIX(string-expression,<sp/>integer-expression)</highlight></codeline>
</programlisting></para>
<para>Converts a <bold>string</bold> (first parameter) to an <bold>integer</bold> using the specified <bold>radix</bold> (base). The second parameter is the base, typically <computeroutput>2</computeroutput> (binary), <computeroutput>8</computeroutput> (octal), <computeroutput>10</computeroutput> (decimal), or <computeroutput>16</computeroutput> (hexadecimal).</para>
<para><hruler/>
</para>
<sect3 id="RADIX_1autotoc_md366">
<title>Examples</title>
<para><programlisting filename=".basic"><codeline><highlight class="normal">PRINT<sp/>RADIX(&quot;1010&quot;,<sp/>2)</highlight></codeline>
</programlisting></para>
<para>Produces <computeroutput>10</computeroutput> (binary → decimal).</para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">PRINT<sp/>RADIX(&quot;755&quot;,<sp/>8)</highlight></codeline>
</programlisting></para>
<para>Produces <computeroutput>493</computeroutput> (octal → decimal).</para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">PRINT<sp/>RADIX(&quot;1234&quot;,<sp/>10)</highlight></codeline>
</programlisting></para>
<para>Produces <computeroutput>1234</computeroutput>.</para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">PRINT<sp/>RADIX(&quot;FF&quot;,<sp/>16)</highlight></codeline>
</programlisting></para>
<para>Produces <computeroutput>255</computeroutput>.</para>
<para><hruler/>
</para>
</sect3>
<sect3 id="RADIX_1autotoc_md368">
<title>Notes</title>
<para><itemizedlist>
<listitem><para>The string must consist only of valid digits for the given base.<itemizedlist>
<listitem><para>Binary: <computeroutput>0–1</computeroutput></para>
</listitem><listitem><para>Octal: <computeroutput>0–7</computeroutput></para>
</listitem><listitem><para>Decimal: <computeroutput>0–9</computeroutput></para>
</listitem><listitem><para>Hexadecimal: <computeroutput>0–9</computeroutput>, <computeroutput>A–F</computeroutput>, <computeroutput>a–f</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Returns a <bold>64-bit integer</bold>.</para>
</listitem><listitem><para>Invalid input (invalid digit for base, or empty string) returns <computeroutput>0</computeroutput>.</para>
</listitem><listitem><para>Equivalent to <ref refid="HEXVAL" kindref="compound">HEXVAL</ref> or <ref refid="OCTVAL" kindref="compound">OCTVAL</ref>, but generalised for any supported base.</para>
</listitem></itemizedlist>
</para>
<para><hruler/>
</para>
<para><bold>See also:</bold> <ref refid="HEXVAL" kindref="compound">HEXVAL</ref> · <ref refid="OCTVAL" kindref="compound">OCTVAL</ref> · <ref refid="STR" kindref="compound">STR$</ref> </para>
</sect3>
    </detaileddescription>
    <location file="docpages/basic-language-reference/functions/integer/RADIX.md"/>
  </compounddef>
</doxygen>
