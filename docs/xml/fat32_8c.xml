<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fat32_8c" kind="file" language="C++">
    <compoundname>fat32.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <incdepgraph>
      <node id="32">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="20">
        <label>basic.h</label>
        <link refid="basic_8h"/>
      </node>
      <node id="35">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="47">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="59">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>basic_tokenizer.h</label>
        <link refid="basic__tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="23">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="1">
        <label>fat32.c</label>
        <link refid="fat32_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="42">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="60">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="55">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="27">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
      </node>
      <node id="40">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="53">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="30">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="19">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fat32_8c_1a90c4351f9779eee039ea59ba083c45fe" prot="public" static="no">
        <name>FILL_UCS2</name>
        <param><defname>remain</defname></param>
        <param><defname>number_chars</defname></param>
        <param><defname>offset</defname></param>
        <param><defname>member</defname></param>
        <initializer>	if (remain &gt; offset) { \
		for (size_t <ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref> = 0; <ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref> &lt; number_chars; ++<ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref>) { \
			lfn[*entry_count].member[<ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref>] = 0; \
			if (<ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref> + offset &lt; remaining) { \
				lfn[*entry_count].member[<ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref>] = <ref refid="retrofs_8h_1ad9769d3d3ba7e8920ae13e0f71e0ca6e" kindref="member">filename</ref>[<ref refid="ahci_8h_1a5a648f5ec00c526b0dfa2df7a272c6c0" kindref="member">n</ref> + offset]; \
			} \
		} \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="95" column="9" bodyfile="src/fs/fat32.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fat32_8c_1adfdfafaea9aac14224ac28d5c89817e2" prot="public" static="yes" mutable="no">
        <type><ref refid="structfilesystem__t" kindref="compound">filesystem_t</ref> *</type>
        <definition>filesystem_t* fat32_fs</definition>
        <argsstring></argsstring>
        <name>fat32_fs</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="3" column="21" bodyfile="src/fs/fat32.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fat32_8c_1a8a44eb7fbc0fc5a7f728e1261f1f7a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t cluster_to_lba</definition>
        <argsstring>(fat32_t *info, uint32_t cluster)</argsstring>
        <name>cluster_to_lba</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1091" column="10" bodyfile="src/fs/fat32.c" bodystart="1091" bodyend="1103" declfile="src/fs/fat32.c" declline="5" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1ab2b5552bcacc6c41e909f22fae139173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t get_fat_entry</definition>
        <argsstring>(fat32_t *info, uint32_t cluster)</argsstring>
        <name>get_fat_entry</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1064" column="10" bodyfile="src/fs/fat32.c" bodystart="1064" bodyend="1089" declfile="src/fs/fat32.c" declline="6" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1afcf7754aee51b1f713f936900d3ca0d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_fat_entry</definition>
        <argsstring>(fat32_t *info, uint32_t cluster, uint32_t value)</argsstring>
        <name>set_fat_entry</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="984" column="6" bodyfile="src/fs/fat32.c" bodystart="984" bodyend="1011" declfile="src/fs/fat32.c" declline="7" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1af40bdb591129e797adb9d086c028747f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fat32_read_file</definition>
        <argsstring>(void *file, uint64_t start, uint32_t length, unsigned char *buffer)</argsstring>
        <name>fat32_read_file</name>
        <param>
          <type>void *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="287" column="6" bodyfile="src/fs/fat32.c" bodystart="287" bodyend="349" declfile="src/fs/fat32.c" declline="8" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a9446f3a0a213cd555dfe01b04cf866d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fat32_attach</definition>
        <argsstring>(const char *device_name, const char *path)</argsstring>
        <name>fat32_attach</name>
        <param>
          <type>const char *</type>
          <declname>device_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1225" column="5" bodyfile="src/fs/fat32.c" bodystart="1225" bodyend="1232" declfile="src/fs/fat32.c" declline="9" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1aacc63d284c6b57688b31e0dce988e2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fat32_unlink_file</definition>
        <argsstring>(void *dir, const char *name)</argsstring>
        <name>fat32_unlink_file</name>
        <param>
          <type>void *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="856" column="6" bodyfile="src/fs/fat32.c" bodystart="856" bodyend="961" declfile="src/fs/fat32.c" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a1ed6651959b379013082743603d3b741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t find_next_free_fat_entry</definition>
        <argsstring>(fat32_t *info)</argsstring>
        <name>find_next_free_fat_entry</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1027" column="10" bodyfile="src/fs/fat32.c" bodystart="1027" bodyend="1062" declfile="src/fs/fat32.c" declline="11" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1aa02f44eea78b5c987c744494a2e95ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amend_free_count</definition>
        <argsstring>(fat32_t *info, int adjustment)</argsstring>
        <name>amend_free_count</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adjustment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1013" column="6" bodyfile="src/fs/fat32.c" bodystart="1013" bodyend="1024" declfile="src/fs/fat32.c" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a6812245af8abf23230207172aca2dd02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fat32_extend_file</definition>
        <argsstring>(void *f, uint32_t size)</argsstring>
        <name>fat32_extend_file</name>
        <param>
          <type>void *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="483" column="6" bodyfile="src/fs/fat32.c" bodystart="483" bodyend="589" declfile="src/fs/fat32.c" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1aa8fc0ad8a32a8635507a78d2ed2c29a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool read_cluster</definition>
        <argsstring>(fat32_t *info, uint32_t cluster, void *buffer)</argsstring>
        <name>read_cluster</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="15" column="6" bodyfile="src/fs/fat32.c" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a795dd42d485221fca8daac417856de2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool write_cluster</definition>
        <argsstring>(fat32_t *info, uint32_t cluster, void *buffer)</argsstring>
        <name>write_cluster</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="20" column="6" bodyfile="src/fs/fat32.c" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a154b6991e5c3e7e4683127ebd47d5883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* parse_shitty_lfn_entry</definition>
        <argsstring>(char *nameptr, uint16_t *wide_chars, uint8_t n_wide_chars)</argsstring>
        <name>parse_shitty_lfn_entry</name>
        <param>
          <type>char *</type>
          <declname>nameptr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>wide_chars</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n_wide_chars</declname>
        </param>
        <briefdescription>
<para>Reads a chunk of a long filename from a directory entry. </para>
        </briefdescription>
        <detaileddescription>
<para>WHY THE HELL DID MICROSOFT MAKE THIS IN SUCH A WEIRD WAY?! Who in their right mind thought it sensible to split up a name across multiple different tiny arrays, and why is it 16 bit unicode instead of UTF-8 and WHY is 0xffff considered an invalid character?! Does NOT compute!!!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nameptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to name we are appending to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wide_chars</parametername>
</parameternamelist>
<parameterdescription>
<para>wide characters to append </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_wide_chars</parametername>
</parameternamelist>
<parameterdescription>
<para>number of wide characters to append </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char* new name pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="39" column="6" bodyfile="src/fs/fat32.c" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1ae55ed5cd371facac33ef362eeb6d03a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lfn_checksum</definition>
        <argsstring>(unsigned char *short_name)</argsstring>
        <name>lfn_checksum</name>
        <param>
          <type>unsigned char *</type>
          <declname>short_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="53" column="9" bodyfile="src/fs/fat32.c" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1abe9919d4a4bbbdb22fe3aa85816406b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_short</definition>
        <argsstring>(directory_entry_t *entry, const char *long_name, fs_directory_entry_t *current)</argsstring>
        <name>make_short</name>
        <param>
          <type><ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>long_name</declname>
        </param>
        <param>
          <type><ref refid="structfs__directory__entry__t" kindref="compound">fs_directory_entry_t</ref> *</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="62" column="6" bodyfile="src/fs/fat32.c" bodystart="62" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1ae8483845051139b1b9a0e9e30996f5b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_lfn_chain</definition>
        <argsstring>(const char *filename, fs_directory_entry_t *current, directory_entry_t *short_entry, directory_entry_t **entries, size_t *entry_count)</argsstring>
        <name>build_lfn_chain</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structfs__directory__entry__t" kindref="compound">fs_directory_entry_t</ref> *</type>
          <declname>current</declname>
        </param>
        <param>
          <type><ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref> *</type>
          <declname>short_entry</declname>
        </param>
        <param>
          <type><ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>entry_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="105" column="6" bodyfile="src/fs/fat32.c" bodystart="105" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1ab4c188f68625ee95f466fdef2e34a53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_short_name</definition>
        <argsstring>(directory_entry_t *entry, char *name, char *dotless)</argsstring>
        <name>parse_short_name</name>
        <param>
          <type><ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dotless</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="142" column="6" bodyfile="src/fs/fat32.c" bodystart="142" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1aa3983c947fb59690a94949357ef2a249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_fat32_directory</definition>
        <argsstring>(fs_directory_entry_t *list)</argsstring>
        <name>free_fat32_directory</name>
        <param>
          <type><ref refid="structfs__directory__entry__t" kindref="compound">fs_directory_entry_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Free a fs_directory_entry_t* list returned by <ref refid="fat32_8c_1af38e80c365dda1fc57d42ad748235421" kindref="member">parse_fat32_directory()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="176" column="6" bodyfile="src/fs/fat32.c" bodystart="176" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1af38e80c365dda1fc57d42ad748235421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfs__directory__entry__t" kindref="compound">fs_directory_entry_t</ref> *</type>
        <definition>fs_directory_entry_t* parse_fat32_directory</definition>
        <argsstring>(fs_tree_t *tree, fat32_t *info, uint32_t cluster)</argsstring>
        <name>parse_fat32_directory</name>
        <param>
          <type><ref refid="structfs__tree__t" kindref="compound">fs_tree_t</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="187" column="22" bodyfile="src/fs/fat32.c" bodystart="187" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1ae48418388f55134d5d1e9870fdf9bd83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fat32_write_file</definition>
        <argsstring>(void *f, uint64_t start, uint32_t length, unsigned char *buffer)</argsstring>
        <name>fat32_write_file</name>
        <param>
          <type>void *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="351" column="6" bodyfile="src/fs/fat32.c" bodystart="351" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a4933980852404bd63a0f5cf713a9346a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fat32_truncate_file</definition>
        <argsstring>(void *f, size_t length)</argsstring>
        <name>fat32_truncate_file</name>
        <param>
          <type>void *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="412" column="6" bodyfile="src/fs/fat32.c" bodystart="412" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a58bb3f0bd0c3e900d51c7cbef552ee97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insert_entries_at</definition>
        <argsstring>(bool grow, fat32_t *info, uint32_t entries, uint32_t cluster, uint8_t *buffer, int bufferoffset, directory_entry_t *short_entry, directory_entry_t *new_entries, int entry_count)</argsstring>
        <name>insert_entries_at</name>
        <param>
          <type>bool</type>
          <declname>grow</declname>
        </param>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cluster</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufferoffset</declname>
        </param>
        <param>
          <type><ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref> *</type>
          <declname>short_entry</declname>
        </param>
        <param>
          <type><ref refid="structdirectory__entry__t" kindref="compound">directory_entry_t</ref> *</type>
          <declname>new_entries</declname>
        </param>
        <param>
          <type>int</type>
          <declname>entry_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>XXX: It is important to write the list of LFN entries BACKWARDS, so that the final entry is first with ATTR_LFN_LAST_ENTRY bit set in its flags. The spec doesn&apos;t say this is important, and in theory we should be able to reassemble the long name with its parts in any order but linux at least is strict in this expectation and will only display part of the name or none, if the order is not as output traditionally by windows.</para>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="591" column="6" bodyfile="src/fs/fat32.c" bodystart="591" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a405eb3faeb7b6ea9403fd3e4f44abd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t fat32_internal_create_file</definition>
        <argsstring>(void *dir, const char *name, size_t size, uint8_t attributes)</argsstring>
        <name>fat32_internal_create_file</name>
        <param>
          <type>void *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="647" column="10" bodyfile="src/fs/fat32.c" bodystart="647" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a772b9c5459fce5f4f460fcea26a97e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t fat32_create_file</definition>
        <argsstring>(void *dir, const char *name, size_t size)</argsstring>
        <name>fat32_create_file</name>
        <param>
          <type>void *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="793" column="10" bodyfile="src/fs/fat32.c" bodystart="793" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a1e1c074017cafc487baf4ea5d240dbdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t fat32_create_directory</definition>
        <argsstring>(void *dir, const char *name)</argsstring>
        <name>fat32_create_directory</name>
        <param>
          <type>void *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="798" column="10" bodyfile="src/fs/fat32.c" bodystart="798" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a3683c4db42623765020db23f70014e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* fat32_get_directory</definition>
        <argsstring>(void *t)</argsstring>
        <name>fat32_get_directory</name>
        <param>
          <type>void *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="845" column="6" bodyfile="src/fs/fat32.c" bodystart="845" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1afc199e42292c2bcfb77aeacec4979461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fat32_unlink_dir</definition>
        <argsstring>(void *dir, const char *name)</argsstring>
        <name>fat32_unlink_dir</name>
        <param>
          <type>void *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="963" column="6" bodyfile="src/fs/fat32.c" bodystart="963" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a603abb297b74ff01f6671cbfcc73bacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_fs_info</definition>
        <argsstring>(fat32_t *info)</argsstring>
        <name>read_fs_info</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1105" column="5" bodyfile="src/fs/fat32.c" bodystart="1105" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a99a79a6dc2be83c2763d2cf09e8996de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_fat</definition>
        <argsstring>(fat32_t *info)</argsstring>
        <name>read_fat</name>
        <param>
          <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1127" column="5" bodyfile="src/fs/fat32.c" bodystart="1127" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1ac08ed2cd0ce4a68226bc009c761b7c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfat32__t" kindref="compound">fat32_t</ref> *</type>
        <definition>fat32_t* fat32_mount_volume</definition>
        <argsstring>(const char *device_name)</argsstring>
        <name>fat32_mount_volume</name>
        <param>
          <type>const char *</type>
          <declname>device_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1173" column="9" bodyfile="src/fs/fat32.c" bodystart="1173" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="fat32_8c_1a3fac5992ed8111e2a4da081700d74a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_fat32</definition>
        <argsstring>()</argsstring>
        <name>init_fat32</name>
        <briefdescription>
<para>Register fat32 as a filesystem type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fs/fat32.c" line="1234" column="6" bodyfile="src/fs/fat32.c" bodystart="1234" bodyend="1254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/fs/fat32.c"/>
  </compounddef>
</doxygen>
