<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="block_2ahci_2main_8c" kind="file" language="C++">
    <compoundname>block/ahci/main.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <includes refid="scsi_8h" local="no">scsi.h</includes>
    <incdepgraph>
      <node id="57">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="22">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>stdarg.h</label>
      </node>
      <node id="60">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="1">
        <label>main.c</label>
        <link refid="block_2ahci_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>stdnoreturn.h</label>
      </node>
      <node id="27">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="82">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="47">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="88">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="66">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="68">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="83">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="85">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="17">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="51">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="32">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="33">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>scsi.h</label>
        <link refid="scsi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="21">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="block_2ahci_2main_8c_1ab7764ec276dd722fd8b2a8217cc43008" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* aligned_read_buf</definition>
        <argsstring></argsstring>
        <name>aligned_read_buf</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="4" column="9" bodyfile="src/block/ahci/main.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="block_2ahci_2main_8c_1a811ff141dc2c62fc52486bd2e0c4d449" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* aligned_write_buf</definition>
        <argsstring></argsstring>
        <name>aligned_write_buf</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="5" column="9" bodyfile="src/block/ahci/main.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="block_2ahci_2main_8c_1a0294ea3b87ca64506f1df2f02b16d071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ahci_handler</definition>
        <argsstring>(uint8_t isr, uint64_t error, uint64_t irq, void *opaque)</argsstring>
        <name>ahci_handler</name>
        <param>
          <type>uint8_t</type>
          <declname>isr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>error</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>irq</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>opaque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="7" column="6" bodyfile="src/block/ahci/main.c" bodystart="7" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a3e9c682071692eca4d8de06a5bb0b369" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ahci_hba_supports_64b</definition>
        <argsstring>(const ahci_hba_mem_t *abar)</argsstring>
        <name>ahci_hba_supports_64b</name>
        <param>
          <type>const <ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="32" column="20" bodyfile="src/block/ahci/main.c" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a8c02c5729186ccc2b9a3c1340b8c3632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* allocate_ahci</definition>
        <argsstring>(const ahci_hba_mem_t *abar, size_t size)</argsstring>
        <name>allocate_ahci</name>
        <param>
          <type>const <ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="36" column="6" bodyfile="src/block/ahci/main.c" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a1739b1f50c9d12fef76bd70d476a823e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_type</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>check_type</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Inspect PxSIG/PxSSTS to determine attached device type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of AHCI_DEV_* constants. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="40" column="5" bodyfile="src/block/ahci/main.c" bodystart="40" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a3f731f3af4b9cf5fde7ffb8ebe3b23bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void start_cmd</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>start_cmd</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="62" column="6" bodyfile="src/block/ahci/main.c" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a87a8b71a9ff474b5626fe32e8672f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stop_cmd</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>stop_cmd</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="69" column="6" bodyfile="src/block/ahci/main.c" bodystart="69" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1aaefbf0af7da9210fa6c283fd821a2ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void port_rebase</definition>
        <argsstring>(ahci_hba_port_t *port, int portno, ahci_hba_mem_t *abar)</argsstring>
        <name>port_rebase</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>portno</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="82" column="6" bodyfile="src/block/ahci/main.c" bodystart="82" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a43e3e1c7e4452723f6ff21043edb5519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wait_for_ready</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>wait_for_ready</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Wait until the AHCI port and attached device are ready to accept a new command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if ready, false on timeout or fatal port state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="107" column="6" bodyfile="src/block/ahci/main.c" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a60084cde8e44fb4f4411e8839fbe93e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_prdt</definition>
        <argsstring>(ahci_hba_cmd_tbl_t *cmdtbl, size_t index, void *address, uint32_t byte_count, bool interrupt)</argsstring>
        <name>fill_prdt</name>
        <param>
          <type><ref refid="structahci__hba__cmd__tbl__t" kindref="compound">ahci_hba_cmd_tbl_t</ref> *</type>
          <declname>cmdtbl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>byte_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
<para>Fill one PRDT entry in the command table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdtbl</parametername>
</parameternamelist>
<parameterdescription>
<para>Command table to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>PRDT entry index to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Physical or DMA-able address of the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to transfer (1..4MiB per entry, device-dependent). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to request interrupt on completion for this PRDT entry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="118" column="6" bodyfile="src/block/ahci/main.c" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1aad42e0c0a814e479ed31f7ac2bc57090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__hba__cmd__header__t" kindref="compound">ahci_hba_cmd_header_t</ref> *</type>
        <definition>ahci_hba_cmd_header_t* get_cmdheader_for_slot</definition>
        <argsstring>(ahci_hba_port_t *port, size_t slot, bool write, bool atapi, uint16_t prdtls)</argsstring>
        <name>get_cmdheader_for_slot</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atapi</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>prdtls</declname>
        </param>
        <briefdescription>
<para>Obtain and initialise a command header for a slot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true for host-to-device (write), false for device-to-host (read). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atapi</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true for ATAPI packet command, false for ATA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prdtls</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of PRDT entries to advertise (PRDTL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the prepared command header. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="125" column="23" bodyfile="src/block/ahci/main.c" bodystart="125" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1aa78c7e40ebc49abff4596b0541c7460f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__hba__cmd__tbl__t" kindref="compound">ahci_hba_cmd_tbl_t</ref> *</type>
        <definition>ahci_hba_cmd_tbl_t* get_and_clear_cmdtbl</definition>
        <argsstring>(ahci_hba_cmd_header_t *cmdheader)</argsstring>
        <name>get_and_clear_cmdtbl</name>
        <param>
          <type><ref refid="structahci__hba__cmd__header__t" kindref="compound">ahci_hba_cmd_header_t</ref> *</type>
          <declname>cmdheader</declname>
        </param>
        <briefdescription>
<para>Return the command table for a header and clear CFIS/ATAPI/reserved regions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdheader</parametername>
</parameternamelist>
<parameterdescription>
<para>Command header whose table will be accessed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the command table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="136" column="20" bodyfile="src/block/ahci/main.c" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1ac60cff25b988babf024da82ac44f31df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__fis__reg__h2d__t" kindref="compound">ahci_fis_reg_h2d_t</ref> *</type>
        <definition>ahci_fis_reg_h2d_t* setup_reg_h2d</definition>
        <argsstring>(ahci_hba_cmd_tbl_t *cmdtbl, uint8_t type, uint8_t command, uint8_t feature_low)</argsstring>
        <name>setup_reg_h2d</name>
        <param>
          <type><ref refid="structahci__hba__cmd__tbl__t" kindref="compound">ahci_hba_cmd_tbl_t</ref> *</type>
          <declname>cmdtbl</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>feature_low</declname>
        </param>
        <briefdescription>
<para>Prepare a Register H2D FIS in the command table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdtbl</parametername>
</parameternamelist>
<parameterdescription>
<para>Command table to place the FIS into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>FIS type (e.g., FIS_TYPE_REG_H2D). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>ATA/ATAPI command opcode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feature_low</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature low byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the FIS within the command table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="143" column="20" bodyfile="src/block/ahci/main.c" bodystart="143" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1af2d2b58a79436b97865b25b02278f5af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_reg_h2c</definition>
        <argsstring>(ahci_fis_reg_h2d_t *cmdfis, uint64_t start, uint16_t count)</argsstring>
        <name>fill_reg_h2c</name>
        <param>
          <type><ref refid="structahci__fis__reg__h2d__t" kindref="compound">ahci_fis_reg_h2d_t</ref> *</type>
          <declname>cmdfis</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Fill LBA and sector count fields in a Register H2D FIS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdfis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the FIS previously created by setup_reg_h2d. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting LBA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Sector count (device logical block units). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="155" column="6" bodyfile="src/block/ahci/main.c" bodystart="155" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a21d8de7e0ba2b89e77a3ac60cba28f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void issue_command_to_slot</definition>
        <argsstring>(ahci_hba_port_t *port, uint8_t slot)</argsstring>
        <name>issue_command_to_slot</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Issue a prepared command in the given slot by setting PxCI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="174" column="6" bodyfile="src/block/ahci/main.c" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a42f2ea2136586167709f812bbbb427bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_error</definition>
        <argsstring>(ahci_hba_port_t *port, const char *function)</argsstring>
        <name>is_error</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="178" column="6" bodyfile="src/block/ahci/main.c" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a1f46c86686bb7c97c25523cbd2513165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wait_for_completion</definition>
        <argsstring>(ahci_hba_port_t *port, uint8_t slot, const char *function)</argsstring>
        <name>wait_for_completion</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Wait for a command slot to complete and detect transport/taskfile errors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Short label used for diagnostics/logging. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false if a taskfile/transport error occurred (error already logged). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="187" column="6" bodyfile="src/block/ahci/main.c" bodystart="187" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1a5fcb5e447d6a4b7f037017caced3bd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool issue_and_wait</definition>
        <argsstring>(ahci_hba_port_t *port, uint8_t slot, const char *function)</argsstring>
        <name>issue_and_wait</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Convenience wrapper to issue a command and wait for completion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Short label used for diagnostics/logging. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error (error already logged). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="203" column="6" bodyfile="src/block/ahci/main.c" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1ae4501711404dc088455fa70f32878dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void probe_port</definition>
        <argsstring>(ahci_hba_mem_t *abar)</argsstring>
        <name>probe_port</name>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="212" column="6" bodyfile="src/block/ahci/main.c" bodystart="212" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1af88908abdc3b2c442adf7799b3ae92f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int find_cmdslot</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar)</argsstring>
        <name>find_cmdslot</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Find a free command slot on a port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Slot index [0..31] on success, -1 if none available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="278" column="5" bodyfile="src/block/ahci/main.c" bodystart="278" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1afb72acab86bc2c9e146a6c3e21d136a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup_aligned_buffers</definition>
        <argsstring>(ahci_hba_mem_t *abar)</argsstring>
        <name>setup_aligned_buffers</name>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="293" column="6" bodyfile="src/block/ahci/main.c" bodystart="293" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="block_2ahci_2main_8c_1aee21823366d10636044f5358d4c6e527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_ahci</definition>
        <argsstring>()</argsstring>
        <name>init_ahci</name>
        <briefdescription>
<para>Initialise AHCI controller(s), enumerate ports, and register devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block/ahci/main.c" line="299" column="6" bodyfile="src/block/ahci/main.c" bodystart="299" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/block/ahci/main.c"/>
  </compounddef>
</doxygen>
