<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="console_8h" kind="file" language="C++">
    <compoundname>console.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="basic_8h" local="yes">basic.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="124">
        <label>memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="73">
        <label>console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="86">
        <label>reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="109">
        <label>main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="105">
        <label>createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="51">
        <label>helpers.c</label>
        <link refid="helpers_8c"/>
      </node>
      <node id="2">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="97">
        <label>errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="43">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="114">
        <label>filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="91">
        <label>variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="56">
        <label>unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="4">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="6">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="18">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="66">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="79">
        <label>function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="30">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="22">
        <label>hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="133">
        <label>queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="12">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="15">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="48">
        <label>format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="140">
        <label>stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="113">
        <label>writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="84">
        <label>maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="130">
        <label>icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="92">
        <label>buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="58">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="121">
        <label>keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="75">
        <label>debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="47">
        <label>createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="77">
        <label>file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="54">
        <label>truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="94">
        <label>debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="103">
        <label>devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="102">
        <label>debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="127">
        <label>descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="87">
        <label>sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="144">
        <label>video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="55">
        <label>unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="67">
        <label>acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="80">
        <label>graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="123">
        <label>maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="52">
        <label>main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="36">
        <label>e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="95">
        <label>debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="76">
        <label>double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="143">
        <label>timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="9">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="81">
        <label>int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="42">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="126">
        <label>debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="72">
        <label>array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="24">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="19">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="60">
        <label>serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="59">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="120">
        <label>ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="23">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="117">
        <label>gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="37">
        <label>mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="128">
        <label>dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="35">
        <label>mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="71">
        <label>ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="50">
        <label>getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="89">
        <label>string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="65">
        <label>tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="74">
        <label>datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="139">
        <label>rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="78">
        <label>flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="33">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="116">
        <label>ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="25">
        <label>init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="63">
        <label>tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="134">
        <label>tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="46">
        <label>createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="135">
        <label>udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="107">
        <label>fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="17">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="3">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="34">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="10">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="21">
        <label>devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="115">
        <label>partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="61">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="85">
        <label>process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="88">
        <label>string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="20">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="106">
        <label>directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="110">
        <label>readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="27">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="111">
        <label>truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="129">
        <label>dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="7">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="68">
        <label>ahci.c</label>
        <link refid="ahci_8c"/>
      </node>
      <node id="41">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="122">
        <label>lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="40">
        <label>installer.c</label>
        <link refid="installer_8c"/>
      </node>
      <node id="96">
        <label>drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="45">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="53">
        <label>readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="console_8h_1a5c98872e18d0340326d67d9118135325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_get_text_max_x</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_get_text_max_x</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Get the maximum X position for text output. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the maximum number of characters that can be displayed in a line on the console (width).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum X position for text output.</para>
</simplesect>
This function queries the console for the maximum horizontal space available to display text. It returns the number of characters that can fit in a line, allowing for accurate text positioning and wrapping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum number of characters that can be displayed in a line. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="17" column="9" bodyfile="src/basic/console.c" bodystart="10" bodyend="13" declfile="include/basic/console.h" declline="17" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1abf7fba182ee692bd56914e5c3f78672c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_get_text_max_y</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_get_text_max_y</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Get the maximum Y position for text output. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the maximum number of lines that can be displayed on the console (height).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum Y position for text output.</para>
</simplesect>
This function queries the console for the maximum vertical space available to display text. It returns the maximum number of lines that can fit on the screen before the text wraps or scrolls.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum number of lines that can be displayed on the console. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="25" column="9" bodyfile="src/basic/console.c" bodystart="15" bodyend="18" declfile="include/basic/console.h" declline="25" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a4d2dd7d8cdaa07e0fb506abaa0f33534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_get_text_cur_x</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_get_text_cur_x</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Retrieves the current horizontal position (column) of the cursor in the console. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the current X position of the cursor.</para>
<para>This function queries the console for the current cursor position along the X-axis (horizontal position). It returns the current column where the cursor is located, which can be used to position or move the cursor programmatically.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current column position of the cursor.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current X position of the cursor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="64" column="9" bodyfile="src/basic/console.c" bodystart="20" bodyend="25" declfile="include/basic/console.h" declline="64" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1ae0f318e0f96b6c6a72ec6b2e6294ddc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_get_text_cur_y</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_get_text_cur_y</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Retrieves the current vertical position (row) of the cursor in the console. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the current Y position of the cursor.</para>
<para>This function queries the console for the current cursor position along the Y-axis (vertical position). It returns the current row where the cursor is located, allowing for precise text positioning and manipulation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current row position of the cursor.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current Y position of the cursor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="77" column="9" bodyfile="src/basic/console.c" bodystart="27" bodyend="32" declfile="include/basic/console.h" declline="77" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a960906e3c99518691d7436fb9e89fc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_ctrlkey</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_ctrlkey</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Check if the CTRL key is held down. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if the control (Ctrl) key is currently pressed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if CTRL is held, 0 otherwise.</para>
</simplesect>
This function queries the state of the control (Ctrl) key on the keyboard. It returns a non-zero value (true) if the Ctrl key is pressed, and 0 (false) if it is not.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-zero value if the Ctrl key is pressed, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="101" column="9" bodyfile="src/basic/console.c" bodystart="46" bodyend="49" declfile="include/basic/console.h" declline="101" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1aa9dd52b60d188a55633447b3582b9b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_shiftkey</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_shiftkey</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Check if the SHIFT key is held down. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if the shift key is currently pressed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if SHIFT is held, 0 otherwise.</para>
</simplesect>
This function queries the state of the shift key on the keyboard. It returns a non-zero value (true) if the shift key is pressed, and 0 (false) if it is not.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-zero value if the shift key is pressed, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="109" column="9" bodyfile="src/basic/console.c" bodystart="51" bodyend="54" declfile="include/basic/console.h" declline="109" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a4b999614892e962bb89fcf30c78feadc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_altkey</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_altkey</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Check if the ALT key is held down. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if the alt key is currently pressed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if ALT is held, 0 otherwise.</para>
</simplesect>
This function queries the state of the alt key on the keyboard. It returns a non-zero value (true) if the Alt key is pressed, and 0 (false) if it is not.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-zero value if the Alt key is pressed, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="117" column="9" bodyfile="src/basic/console.c" bodystart="56" bodyend="59" declfile="include/basic/console.h" declline="117" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a6f6eeff9a451f2f806478dc60db581a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t basic_capslock</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_capslock</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Check if the CAPS LOCK is on. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if the Caps Lock key is currently enabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if CAPS LOCK is on, 0 otherwise.</para>
</simplesect>
This function queries the state of the Caps Lock key. It returns a non-zero value (true) if Caps Lock is enabled (active), and 0 (false) if it is not.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-zero value if Caps Lock is enabled, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="125" column="9" bodyfile="src/basic/console.c" bodystart="61" bodyend="64" declfile="include/basic/console.h" declline="125" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a141ef8feeaeb6e4d2e77039ba4a3164e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void input_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>input_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Handle cooperative input for the INPUT statement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Handle cooperative input for the INPUT statement.</para>
<para>When a BASIC <computeroutput>INPUT</computeroutput> statement is encountered, the interpreter checks whether a complete line of user input is available via <computeroutput><ref refid="input_8h_1ad1207d022962151b2b0d89c803dd5ae2" kindref="member">kinput()</ref></computeroutput>. If not, the process voluntarily yields using <computeroutput><ref refid="taskswitch_8h_1a837266f5243f7240269b77b0298afbe2" kindref="member">proc_set_idle()</ref></computeroutput> and assigns a custom callback (<computeroutput>check_input_in_progress</computeroutput>) to periodically test for input readiness.</para>
<para>While idle, the process enters <computeroutput>PROC_IO_BOUND</computeroutput> state. Once the callback returns <computeroutput>false</computeroutput>, the scheduler resumes execution at the original line (via <computeroutput><ref refid="context_8h_1aa2c73bceaa056ea01125ef6fdfce922e" kindref="member">jump_linenum()</ref></computeroutput>), and input is finalised and assigned to the variable.</para>
<para>This mechanism ensures non-blocking interactive IO without requiring preemption, and keeps the interpreter logic readable and non-reentrant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="132" column="6" bodyfile="src/basic/console.c" bodystart="91" bodyend="126" declfile="include/basic/console.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a2402fcbe3e6467bbe5de2234e6462e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kget_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>kget_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Process GET statement to read a single keypress. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Process GET statement to read a single keypress.</para>
<para>The GET statement waits for a keypress, then stores it into a variable. It behaves like INPUT but only reads a single character (without requiring ENTER).</para>
<para>It yields execution while no key is pressed, using the cooperative multitasking system to prevent blocking.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>BASIC context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="139" column="6" bodyfile="src/basic/console.c" bodystart="303" bodyend="340" declfile="include/basic/console.h" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1aa79d393bc53a7587af19bb1efb76a9e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cls_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>cls_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Clear the screen. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="146" column="6" bodyfile="src/basic/console.c" bodystart="128" bodyend="133" declfile="include/basic/console.h" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a930b943b79750ff6ff07d594b14db781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gotoxy_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>gotoxy_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Move the cursor to the specified position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="153" column="6" bodyfile="src/basic/console.c" bodystart="135" bodyend="143" declfile="include/basic/console.h" declline="153" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1abffec674ac0197db69350612d5ced1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>print_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Output data to the console with the PRINT statement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="160" column="6" bodyfile="src/basic/console.c" bodystart="145" bodyend="157" declfile="include/basic/console.h" declline="160" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a868b87233705ab22e1b93c632e15b6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void colour_statement</definition>
        <argsstring>(struct basic_ctx *ctx, int tok)</argsstring>
        <name>colour_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
<para>Set the text foreground colour. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tok</parametername>
</parameternamelist>
<parameterdescription>
<para>The token for the colour. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="168" column="6" bodyfile="src/basic/console.c" bodystart="159" bodyend="164" declfile="include/basic/console.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1aabca0a0f88ad93cea8fa1a1ffba32fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void background_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>background_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Set the text background colour. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="175" column="6" bodyfile="src/basic/console.c" bodystart="166" bodyend="171" declfile="include/basic/console.h" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a7819293510d81ebc888c8487a60ef9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keymap_statement</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>keymap_statement</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Load a keymap from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The BASIC context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="182" column="6" bodyfile="src/basic/console.c" bodystart="249" bodyend="279" declfile="include/basic/console.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="console_8h_1a376039e4daac4d18aa94c2aac69924f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* basic_inkey</definition>
        <argsstring>(struct basic_ctx *ctx)</argsstring>
        <name>basic_inkey</name>
        <param>
          <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Retrieves a keypress from the user. </para>
        </briefdescription>
        <detaileddescription>
<para>This function waits for a keypress from the user and returns the corresponding character as a string. If no key is pressed, the function enters a wait state until a key is pressed. If the key is <computeroutput>255</computeroutput>, which may indicate a timeout or no input, the function enters a &quot;pause&quot; state and returns an empty string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpreter context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string containing the key pressed by the user. Returns an empty string if no valid key is pressed (e.g., key value <computeroutput>255</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/basic/console.h" line="196" column="6" bodyfile="src/basic/console.c" bodystart="34" bodyend="44" declfile="include/basic/console.h" declline="196" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header for BASIC console IO functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/basic/console.h"/>
  </compounddef>
</doxygen>
