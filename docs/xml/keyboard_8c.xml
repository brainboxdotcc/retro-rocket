<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="keyboard_8c" kind="file" language="C++">
    <compoundname>keyboard.c</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <incdepgraph>
      <node id="57">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="22">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>stdarg.h</label>
      </node>
      <node id="60">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="29">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>stdnoreturn.h</label>
      </node>
      <node id="27">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="82">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>keyboard.c</label>
        <link refid="keyboard_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="47">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="88">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="66">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="68">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="83">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="85">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="17">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="51">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="32">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="33">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>scsi.h</label>
        <link refid="scsi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="21">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="keyboard_8c_1a3e201dfedd4080d0056b86b75962ff6f" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char keyboard_buffer[KEYBOARD_BUFFER_SIZE]</definition>
        <argsstring>[KEYBOARD_BUFFER_SIZE]</argsstring>
        <name>keyboard_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="7" column="13" bodyfile="src/keyboard.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a81ed4c617e8238a8fdbe7e5d49714758" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t buffer_write_ptr</definition>
        <argsstring></argsstring>
        <name>buffer_write_ptr</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="8" column="15" bodyfile="src/keyboard.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a2292a474e718350aae634fd92e09ea9a" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t buffer_read_ptr</definition>
        <argsstring></argsstring>
        <name>buffer_read_ptr</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="9" column="15" bodyfile="src/keyboard.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1aadad985ecd5e758357960d3a60fcc04f" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool escaped</definition>
        <argsstring></argsstring>
        <name>escaped</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="10" column="13" bodyfile="src/keyboard.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a4e5d2afb28e9a000f65653cbadaf9a46" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool caps_lock</definition>
        <argsstring></argsstring>
        <name>caps_lock</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="11" column="13" bodyfile="src/keyboard.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1ab4d2f0d7862d6355ca5765004408aa64" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool shift_state</definition>
        <argsstring></argsstring>
        <name>shift_state</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="12" column="13" bodyfile="src/keyboard.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1aa8b082bb806066cd0e37454bf65706dd" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool ctrl_state</definition>
        <argsstring></argsstring>
        <name>ctrl_state</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="13" column="13" bodyfile="src/keyboard.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a11a5a860aaec244417a62961fdc9a6b0" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool alt_state</definition>
        <argsstring></argsstring>
        <name>alt_state</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="14" column="13" bodyfile="src/keyboard.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a6451a6bdd15372f12502fa3839fc04a0" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structkey__state" kindref="compound">key_state</ref></type>
        <definition>struct key_state key_states[256]</definition>
        <argsstring>[256]</argsstring>
        <name>key_states</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="14" column="13" bodyfile="src/keyboard.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a4cd0cb3ff17313f457e445f5dbd20e4d" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t key_was_extended[256]</definition>
        <argsstring>[256]</argsstring>
        <name>key_was_extended</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="17" column="16" bodyfile="src/keyboard.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1a21e905b4d844bc6c61ab988829f2fb4e" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char keyboard_scan_map_lower[MAX_SCANCODE]</definition>
        <argsstring>[MAX_SCANCODE]</argsstring>
        <name>keyboard_scan_map_lower</name>
        <initializer>= {0, 27, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;7&apos;, &apos;8&apos;, &apos;9&apos;, &apos;0&apos;, &apos;-&apos;, &apos;=&apos;,
						     8, 9, &apos;q&apos;, &apos;w&apos;, &apos;e&apos;,
						     &apos;r&apos;, &apos;t&apos;, &apos;y&apos;, &apos;u&apos;, &apos;i&apos;, &apos;o&apos;, &apos;p&apos;, &apos;[&apos;, &apos;]&apos;, 13, 0 , &apos;a&apos;,
						     &apos;<ref refid="serial_8h_1ab87f55bd0280d90925050a4188c14ab5" kindref="member">s</ref>&apos;, &apos;d&apos;, &apos;f&apos;, &apos;g&apos;, &apos;h&apos;,
						     &apos;j&apos;, &apos;k&apos;, &apos;l&apos;, &apos;;&apos;, &apos;\&apos;&apos;, &apos;#&apos;, 0 , &apos;\\&apos;, &apos;z&apos;, &apos;x&apos;,
						     &apos;<ref refid="serial_8h_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>&apos;, &apos;v&apos;, &apos;b&apos;, &apos;n&apos;, &apos;m&apos;, &apos;,&apos;,
						     &apos;.&apos;, &apos;/&apos;, 0 , 0 , 0 , &apos; &apos;,
						     0 , 0 ,
						     0 , 0 , 0 , 0 , 0 ,
						     0 , 0 , 0 ,
						     0 , 0 , 0 , 0 ,
						     0 , 0 ,
						     &apos;-&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;+&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;0&apos;, &apos;.&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="21" column="13" bodyfile="src/keyboard.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="keyboard_8c_1ade290418f249fcfc961275ad3420e709" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char keyboard_scan_map_upper[MAX_SCANCODE]</definition>
        <argsstring>[MAX_SCANCODE]</argsstring>
        <name>keyboard_scan_map_upper</name>
        <initializer>= {0, 27, &apos;!&apos;, &apos;@&apos;, &apos;~&apos;, &apos;$&apos;, &apos;%&apos;, &apos;^&apos;, &apos;&amp;&apos;, &apos;*&apos;, &apos;(&apos;, &apos;)&apos;, &apos;_&apos;, &apos;+&apos;,
						     8, 9, &apos;Q&apos;, &apos;W&apos;, &apos;E&apos;,
						     &apos;R&apos;, &apos;T&apos;, &apos;Y&apos;, &apos;U&apos;, &apos;I&apos;, &apos;O&apos;, &apos;P&apos;, &apos;{&apos;, &apos;}&apos;, 13, 0 , &apos;A&apos;,
						     &apos;S&apos;, &apos;D&apos;, &apos;F&apos;, &apos;G&apos;, &apos;H&apos;,
						     &apos;J&apos;, &apos;K&apos;, &apos;L&apos;, &apos;:&apos;, &apos;&quot;&apos;, &apos;~&apos;, 0 , &apos;|&apos;, &apos;Z&apos;, &apos;X&apos;,
						     &apos;C&apos;, &apos;V&apos;, &apos;B&apos;, &apos;N&apos;, &apos;M&apos;, &apos;&lt;&apos;,
						     &apos;&gt;&apos;, &apos;?&apos;, 0 , 0 , 0 , &apos; &apos;,
						     0 , 0 ,
						     0 , 0 , 0 , 0 , 0 ,
						     0 , 0 , 0 ,
						     0 , 0 , 0 , 0 ,
						     0 , 0 ,
						     &apos;-&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;+&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;0&apos;, &apos;.&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="35" column="13" bodyfile="src/keyboard.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="keyboard_8c_1ab24b25eb7f8071189cf8cbf6a90da417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keyboard_handler</definition>
        <argsstring>(uint8_t isr, uint64_t errorcode, uint64_t irq, void *opaque)</argsstring>
        <name>keyboard_handler</name>
        <param>
          <type>uint8_t</type>
          <declname>isr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>errorcode</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>irq</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>opaque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="315" column="6" bodyfile="src/keyboard.c" bodystart="315" bodyend="383" declfile="src/keyboard.c" declline="3" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1ab0cac5c6dca20c250afb035c720d0619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char translate_keycode</definition>
        <argsstring>(unsigned char scancode, uint8_t escaped, uint8_t shift_state, uint8_t ctrl_state, uint8_t alt_state)</argsstring>
        <name>translate_keycode</name>
        <param>
          <type>unsigned char</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>escaped</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>shift_state</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ctrl_state</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alt_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="220" column="15" bodyfile="src/keyboard.c" bodystart="220" bodyend="272" declfile="src/keyboard.c" declline="4" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1adaa23568614e9de5ba0771d8515b86b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void push_to_buffer</definition>
        <argsstring>(char x)</argsstring>
        <name>push_to_buffer</name>
        <param>
          <type>char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="290" column="13" bodyfile="src/keyboard.c" bodystart="290" bodyend="313" declfile="src/keyboard.c" declline="5" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1aa8f9fae4b9e256edce717695ccfaa427" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char parse_token</definition>
        <argsstring>(const char **p)</argsstring>
        <name>parse_token</name>
        <param>
          <type>const char **</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Parse one token (hex or literal) from keymap text. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported formats: a -&gt; character &apos;a&apos; &amp;41 -&gt; hex value (65 = &apos;A&apos;)</para>
<para>Advances *p to the end of the token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="59" column="13" bodyfile="src/keyboard.c" bodystart="59" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1ab5cfd80e1528c2d400a6833d10d8c364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load_keymap_from_string</definition>
        <argsstring>(const char *text)</argsstring>
        <name>load_keymap_from_string</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Load a keymap from a null-terminated text string. </para>
        </briefdescription>
        <detaileddescription>
<para>Format: &amp;1E a A # scancode &amp;1E produces &apos;a&apos; and &apos;A&apos; &amp;02 1 ! # scancode &amp;02 produces &apos;1&apos; and &apos;!&apos; &amp;1C &amp;0D # scancode &amp;1C is Enter (hex 0D)</para>
<para><itemizedlist>
<listitem><para>Lines starting with &apos;#&apos; are comments.</para>
</listitem><listitem><para>First field must be scancode prefixed with &amp; (hexadecimal).</para>
</listitem><listitem><para>Two tokens may follow: normal (unshifted) and shifted.</para>
</listitem><listitem><para>If only one token is given, shifted = normal. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="100" column="6" bodyfile="src/keyboard.c" bodystart="100" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1a2bca7aca5923899893d4ff20136bc279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keyboard_repeat_tick</definition>
        <argsstring>()</argsstring>
        <name>keyboard_repeat_tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="191" column="6" bodyfile="src/keyboard.c" bodystart="191" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1ac3a72156d4bbba013e4d62801992794d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_keyboard</definition>
        <argsstring>()</argsstring>
        <name>init_keyboard</name>
        <briefdescription>
<para>Initialises the keyboard driver. </para>
        </briefdescription>
        <detaileddescription>
<para>Claims IRQ1, sets up the scan code map, and clears the keyboard buffer ready for use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="209" column="6" bodyfile="src/keyboard.c" bodystart="209" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1afdb02475d45b894eb5ec2a57b4100eea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ctrl_held</definition>
        <argsstring>()</argsstring>
        <name>ctrl_held</name>
        <briefdescription>
<para>Tests if the CTRL key is currently held down. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if CTRL is held, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="274" column="6" bodyfile="src/keyboard.c" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1a91e9663f1e43e4aca8439739c3b10c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool shift_held</definition>
        <argsstring>()</argsstring>
        <name>shift_held</name>
        <briefdescription>
<para>Tests if the SHIFT key is currently held down. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if SHIFT is held, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="278" column="6" bodyfile="src/keyboard.c" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1ac7d5ba52d15d8a0066ee06b39399411f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool alt_held</definition>
        <argsstring>()</argsstring>
        <name>alt_held</name>
        <briefdescription>
<para>Tests if the ALT key is currently held down. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if ALT is held, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="282" column="6" bodyfile="src/keyboard.c" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1af491f52ce63929279d3733c13ba771d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool caps_lock_on</definition>
        <argsstring>()</argsstring>
        <name>caps_lock_on</name>
        <briefdescription>
<para>Tests if CAPS LOCK is currently engaged. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if CAPS LOCK is on, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="286" column="6" bodyfile="src/keyboard.c" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1a86378414e15a4c45269f773f9bc1a34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool key_waiting</definition>
        <argsstring>()</argsstring>
        <name>key_waiting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="385" column="6" bodyfile="src/keyboard.c" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1a2f6948e7b53d94c61b16fafea0cd73ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char kpeek</definition>
        <argsstring>()</argsstring>
        <name>kpeek</name>
        <briefdescription>
<para>Checks the next key in the keyboard buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cons</parametername>
</parameternamelist>
<parameterdescription>
<para>Current console (unused, reserved for future use). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ASCII character or extended key constant, or 255 if no input is available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="389" column="15" bodyfile="src/keyboard.c" bodystart="389" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1adeef92b49557a51527be9cd292d12ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char kgetc</definition>
        <argsstring>()</argsstring>
        <name>kgetc</name>
        <briefdescription>
<para>Reads the next key from the keyboard buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cons</parametername>
</parameternamelist>
<parameterdescription>
<para>Current console (unused, reserved for future use). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ASCII character or extended key constant, or 255 if no input is available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="397" column="15" bodyfile="src/keyboard.c" bodystart="397" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_8c_1a9c2b65b8f7fbaf40e3c116962d44f586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Noreturn void</type>
        <definition>_Noreturn void reboot</definition>
        <argsstring>(void)</argsstring>
        <name>reboot</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboard.c" line="405" column="16" bodyfile="src/keyboard.c" bodystart="405" bodyend="422"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/keyboard.c"/>
  </compounddef>
</doxygen>
