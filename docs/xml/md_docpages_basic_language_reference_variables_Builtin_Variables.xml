<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_docpages_basic_language_reference_variables_Builtin_Variables" kind="page">
    <compoundname>md_docpages_basic_language_reference_variables_Builtin_Variables</compoundname>
    <title>Built-in Variables</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The following variables are pre-defined by Retro Rocket BASIC and cannot be reassigned:</para>
<para><itemizedlist>
<listitem><para>**<computeroutput>TRUE</computeroutput>** – Always contains the numeric value <computeroutput>1</computeroutput>. <linebreak/>
 Useful for logical expressions, e.g., <computeroutput>IF A = TRUE THEN ...</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>FALSE</computeroutput>** – Always contains the numeric value <computeroutput>0</computeroutput>. <linebreak/>
 Often used as the opposite of <computeroutput>TRUE</computeroutput>, e.g., <computeroutput>IF A = FALSE THEN ...</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>PID</computeroutput>** – Contains the process ID (integer) of the current process.</para>
</listitem><listitem><para>**<computeroutput>ERR</computeroutput>** – True only while in an error handler or after an error in an <computeroutput>EVAL</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>ERRLINE</computeroutput>** – Contains the line an error last occurred on while in error handler or after an error in an <computeroutput>EVAL</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>ERR$</computeroutput>** – Contains the error message which last occurred while in error handler or after an error in an <computeroutput>EVAL</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>ARG$</computeroutput>** – A string containing the command line arguments passed to the current process.</para>
</listitem><listitem><para>**<computeroutput>PROGRAM$</computeroutput>** – A string containing the fully qualified path of the current program.</para>
</listitem><listitem><para>**<computeroutput>GRAPHICS_WIDTH</computeroutput>** – An integer containing the width of the graphics screen</para>
</listitem><listitem><para>**<computeroutput>GRAPHICS_HEIGHT</computeroutput>** – An integer containing the height of the graphics screen</para>
</listitem><listitem><para>**<computeroutput>GRAPHICS_CENTRE_X</computeroutput>** – An integer containing the X coordinate of the centre of the graphics screen. Also accessible via the American English spelling <computeroutput>GRAPHICS_CENTER_X</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>GRAPHICS_CENTRE_Y</computeroutput>** – An integer containing the Y coordinate of the centre of the graphics screen. Also accessible via the American English spelling <computeroutput>GRAPHICS_CENTER_Y</computeroutput>.</para>
</listitem><listitem><para>**<computeroutput>PI#</computeroutput>** – A real constant for π (<computeroutput>3.141592653589793238</computeroutput>). <linebreak/>
 Useful for trigonometric or geometric calculations.</para>
</listitem><listitem><para>**<computeroutput>E#</computeroutput>** – A real constant for e (<computeroutput>2.7182818284590451</computeroutput>). <linebreak/>
 Useful for trigonometric or geometric calculations.</para>
</listitem></itemizedlist>
</para>
<sect2 id="md_docpages_basic_language_reference_variables_Builtin_Variables_1autotoc_md539">
<title>TRUE and FALSE</title>
<para>In Retro Rocket BASIC, <computeroutput>TRUE</computeroutput> is defined as <computeroutput>1</computeroutput> and <computeroutput>FALSE</computeroutput> as <computeroutput>0</computeroutput>. This differs from BBC BASIC, where <computeroutput>TRUE</computeroutput> was <computeroutput>-1</computeroutput>.</para>
<para><bold>Why BBC BASIC used <computeroutput>-1</computeroutput>:</bold> <linebreak/>
 BBC BASIC, like many early BASIC dialects, used 16-bit signed integers with all bits set (<computeroutput>11111111 11111111</computeroutput>) representing <computeroutput>-1</computeroutput>. <linebreak/>
 This meant any logical <computeroutput>NOT</computeroutput> operation (bitwise inversion) would turn <computeroutput>-1</computeroutput> into <computeroutput>0</computeroutput> (FALSE), and vice versa, which was convenient when logical values were treated as bit patterns.</para>
<para><bold>Why Retro Rocket uses <computeroutput>1</computeroutput>:</bold> <linebreak/>
 Retro Rocket BASIC treats boolean values more like modern languages (C, Python, etc.), where <computeroutput>TRUE</computeroutput> is <computeroutput>1</computeroutput> and <computeroutput>FALSE</computeroutput> is <computeroutput>0</computeroutput>. <linebreak/>
 This is more intuitive, avoids confusion when mixing booleans with arithmetic, and reflects the way most modern hardware tests nonzero values. </para>
</sect2>
    </detaileddescription>
    <location file="docpages/basic-language-reference/variables/Builtin-Variables.md"/>
  </compounddef>
</doxygen>
