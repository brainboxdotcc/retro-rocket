<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ahci_8h" kind="file" language="C++">
    <compoundname>ahci.h</compoundname>
    <includes refid="kernel_8h" local="no">kernel.h</includes>
    <includes refid="scsi_8h" local="no">scsi.h</includes>
    <includedby refid="kernel_8h" local="yes">kernel.h</includedby>
    <incdepgraph>
      <node id="55">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="22">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>stdarg.h</label>
      </node>
      <node id="58">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="29">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>stdnoreturn.h</label>
      </node>
      <node id="27">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="82">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="47">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="88">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="64">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="66">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="83">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="85">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="17">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="51">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="32">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="33">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>scsi.h</label>
        <link refid="scsi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="21">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="153">
        <label>memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="13">
        <label>console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="102">
        <label>reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="140">
        <label>main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="136">
        <label>createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="71">
        <label>helpers.c</label>
        <link refid="fs_2retrofs_2helpers_8c"/>
      </node>
      <node id="6">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="11">
        <label>context.h</label>
        <link refid="context_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="63">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="20">
        <label>filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="113">
        <label>main.c</label>
        <link refid="block_2ahci_2main_8c"/>
      </node>
      <node id="107">
        <label>variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="76">
        <label>unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="43">
        <label>helpers.c</label>
        <link refid="installer_2helpers_8c"/>
      </node>
      <node id="3">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="4">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="5">
        <label>peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="86">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="95">
        <label>function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="50">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="163">
        <label>queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="25">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>block_cache.h</label>
        <link refid="block__cache_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>main.c</label>
        <link refid="installer_2main_8c"/>
      </node>
      <node id="69">
        <label>fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="28">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="68">
        <label>format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="169">
        <label>stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="40">
        <label>installer.h</label>
        <link refid="installer_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="99">
        <label>maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="160">
        <label>icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="119">
        <label>ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="120">
        <label>buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="78">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="8">
        <label>tui.c</label>
        <link refid="tui_8c"/>
      </node>
      <node id="150">
        <label>keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="154">
        <label>module_loader.c</label>
        <link refid="module__loader_8c"/>
      </node>
      <node id="93">
        <label>debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="67">
        <label>createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="94">
        <label>file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="74">
        <label>truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="124">
        <label>debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="134">
        <label>devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="133">
        <label>debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="157">
        <label>descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="103">
        <label>sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="173">
        <label>video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="58">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="87">
        <label>acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="42">
        <label>gpt_writer.c</label>
        <link refid="gpt__writer_8c"/>
      </node>
      <node id="96">
        <label>graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="116">
        <label>storage_device.c</label>
        <link refid="storage__device_8c"/>
      </node>
      <node id="152">
        <label>maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="72">
        <label>main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="56">
        <label>e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="125">
        <label>debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="14">
        <label>double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="172">
        <label>timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="115">
        <label>sense.c</label>
        <link refid="sense_8c"/>
      </node>
      <node id="22">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="166">
        <label>pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="100">
        <label>peekpoke.c</label>
        <link refid="peekpoke_8c"/>
      </node>
      <node id="16">
        <label>int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="110">
        <label>enquiry.c</label>
        <link refid="enquiry_8c"/>
      </node>
      <node id="62">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="91">
        <label>array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="118">
        <label>write.c</label>
        <link refid="write_8c"/>
      </node>
      <node id="37">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="32">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="80">
        <label>serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="79">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="129">
        <label>fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="104">
        <label>statement.c</label>
        <link refid="statement_8c"/>
      </node>
      <node id="149">
        <label>ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="36">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="146">
        <label>gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="18">
        <label>unified_expression.c</label>
        <link refid="unified__expression_8c"/>
      </node>
      <node id="57">
        <label>mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="158">
        <label>dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="55">
        <label>mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>vector.c</label>
        <link refid="vector_8c"/>
      </node>
      <node id="97">
        <label>lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="90">
        <label>ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="132">
        <label>block_cache.c</label>
        <link refid="block__cache_8c"/>
      </node>
      <node id="70">
        <label>getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="17">
        <label>string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="85">
        <label>tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="109">
        <label>eject.c</label>
        <link refid="eject_8c"/>
      </node>
      <node id="92">
        <label>datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="168">
        <label>rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="15">
        <label>flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="53">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="45">
        <label>os_detection.c</label>
        <link refid="os__detection_8c"/>
      </node>
      <node id="38">
        <label>init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="108">
        <label>description.c</label>
        <link refid="description_8c"/>
      </node>
      <node id="83">
        <label>tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="164">
        <label>tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="114">
        <label>read.c</label>
        <link refid="read_8c"/>
      </node>
      <node id="66">
        <label>createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="41">
        <label>crc32.c</label>
        <link refid="crc32_8c"/>
      </node>
      <node id="165">
        <label>udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="138">
        <label>fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="30">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="54">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>error.c</label>
        <link refid="error_8c"/>
      </node>
      <node id="121">
        <label>clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="23">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="35">
        <label>devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="145">
        <label>partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="81">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="101">
        <label>process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="105">
        <label>string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="33">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="137">
        <label>directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="141">
        <label>readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="112">
        <label>identify.c</label>
        <link refid="identify_8c"/>
      </node>
      <node id="47">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="142">
        <label>truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="159">
        <label>dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="117">
        <label>trim.c</label>
        <link refid="trim_8c"/>
      </node>
      <node id="10">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="122">
        <label>map.c</label>
        <link refid="map_8c"/>
      </node>
      <node id="61">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="26">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="151">
        <label>lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="12">
        <label>unified_expression.h</label>
        <link refid="unified__expression_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>recursive_file_copy.c</label>
        <link refid="recursive__file__copy_8c"/>
      </node>
      <node id="126">
        <label>drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="65">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="73">
        <label>readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structahci__fis__reg__h2d__t" prot="public">ahci_fis_reg_h2d_t</innerclass>
    <innerclass refid="structahci__fis__reg__d2h__t" prot="public">ahci_fis_reg_d2h_t</innerclass>
    <innerclass refid="structahci__fis__data__t" prot="public">ahci_fis_data_t</innerclass>
    <innerclass refid="structahci__fis__pio__setup__t" prot="public">ahci_fis_pio_setup_t</innerclass>
    <innerclass refid="structahci__fis__dma__setup__t" prot="public">ahci_fis_dma_setup_t</innerclass>
    <innerclass refid="structahci__hba__port__t" prot="public">ahci_hba_port_t</innerclass>
    <innerclass refid="structahci__hba__mem__t" prot="public">ahci_hba_mem_t</innerclass>
    <innerclass refid="structahci__fis__dev__bits__t" prot="public">ahci_fis_dev_bits_t</innerclass>
    <innerclass refid="structahci__hba__fis__t" prot="public">ahci_hba_fis_t</innerclass>
    <innerclass refid="structahci__hba__cmd__header__t" prot="public">ahci_hba_cmd_header_t</innerclass>
    <innerclass refid="structahci__hba__prdt__entry__t" prot="public">ahci_hba_prdt_entry_t</innerclass>
    <innerclass refid="structahci__hba__cmd__tbl__t" prot="public">ahci_hba_cmd_tbl_t</innerclass>
    <innerclass refid="structahci__trim__range" prot="public">ahci_trim_range</innerclass>
    <innerclass refid="structahci__trim__caps" prot="public">ahci_trim_caps</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ahci_8h_1a66922d8324a82ab4630ac6b6f122b922" prot="public" static="no">
        <name>ATA_CMD_DATA_SET_MANAGEMENT</name>
        <initializer>0x06</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="264" column="9" bodyfile="include/ahci.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a4224d2160f2f2718d8a67a09bfb8f4a5" prot="public" static="no">
        <name>ATA_IDENT_DEVICETYPE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>ATA IDENTIFY: device type offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="288" column="9" bodyfile="include/ahci.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a692fbddd7825db7edba694d647a69aa7" prot="public" static="no">
        <name>ATA_IDENT_CYLINDERS</name>
        <initializer>2</initializer>
        <briefdescription>
<para>ATA IDENTIFY: cylinder count offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="290" column="9" bodyfile="include/ahci.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a1dcc2ec4b54df2f3cb011bbf6dc3795c" prot="public" static="no">
        <name>ATA_IDENT_HEADS</name>
        <initializer>6</initializer>
        <briefdescription>
<para>ATA IDENTIFY: head count offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="292" column="9" bodyfile="include/ahci.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1ae9be2cb739432bf835c6e5492cf92ba7" prot="public" static="no">
        <name>ATA_IDENT_SECTORS</name>
        <initializer>12</initializer>
        <briefdescription>
<para>ATA IDENTIFY: sectors per track offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="294" column="9" bodyfile="include/ahci.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a60e929ababaf71de94d96c079f9028d0" prot="public" static="no">
        <name>ATA_IDENT_SERIAL</name>
        <initializer>20</initializer>
        <briefdescription>
<para>ATA IDENTIFY: serial number string offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="296" column="9" bodyfile="include/ahci.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a9fd52e892928c016a4a66f59a46241e4" prot="public" static="no">
        <name>ATA_IDENT_MODEL</name>
        <initializer>54</initializer>
        <briefdescription>
<para>ATA IDENTIFY: model string offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="298" column="9" bodyfile="include/ahci.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a4efaa1ae14eb268a085d1824eb2a1f08" prot="public" static="no">
        <name>ATA_IDENT_CAPABILITIES</name>
        <initializer>98</initializer>
        <briefdescription>
<para>ATA IDENTIFY: capabilities word offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="300" column="9" bodyfile="include/ahci.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a4515f6ed07cf67add34766e02bd8d133" prot="public" static="no">
        <name>ATA_IDENT_FIELDVALID</name>
        <initializer>106</initializer>
        <briefdescription>
<para>ATA IDENTIFY: field validity word offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="302" column="9" bodyfile="include/ahci.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1ae0d046a29ce70e07d868961cf17b54c7" prot="public" static="no">
        <name>ATA_IDENT_MAX_LBA</name>
        <initializer>120</initializer>
        <briefdescription>
<para>ATA IDENTIFY: 28-bit max LBA (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="304" column="9" bodyfile="include/ahci.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a8536e132f24aa36e826f753b6061e8ea" prot="public" static="no">
        <name>ATA_IDENT_COMMANDSETS</name>
        <initializer>164</initializer>
        <briefdescription>
<para>ATA IDENTIFY: command sets supported offset (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="306" column="9" bodyfile="include/ahci.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1aa1926c13a31f512c9ec07ed3bdba8893" prot="public" static="no">
        <name>ATA_IDENT_MAX_LBA_EXT</name>
        <initializer>200</initializer>
        <briefdescription>
<para>ATA IDENTIFY: 48-bit max LBA (bytes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="308" column="9" bodyfile="include/ahci.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1ab97be318da4cd3f956b53f3d3c162d22" prot="public" static="no">
        <name>SATA_SIG_ATA</name>
        <initializer>0x00000101</initializer>
        <briefdescription>
<para>SATA device signature: ATA drive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="313" column="9" bodyfile="include/ahci.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1aa52680525d3698b9c2206cedbf2b3c82" prot="public" static="no">
        <name>SATA_SIG_ATAPI</name>
        <initializer>0xEB140101</initializer>
        <briefdescription>
<para>SATA device signature: ATAPI (SATAPI) device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="315" column="9" bodyfile="include/ahci.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a74a4ae0fdaf517fb886dfe8fc53218db" prot="public" static="no">
        <name>SATA_SIG_SEMB</name>
        <initializer>0xC33C0101</initializer>
        <briefdescription>
<para>SATA device signature: Enclosure Management Bridge. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="317" column="9" bodyfile="include/ahci.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a5824e44ad5e394c0026dad1f997d26d3" prot="public" static="no">
        <name>SATA_SIG_PM</name>
        <initializer>0x96690101</initializer>
        <briefdescription>
<para>SATA device signature: Port Multiplier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="319" column="9" bodyfile="include/ahci.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a19b753e9763ff280a5528feb3868d78b" prot="public" static="no">
        <name>HBA_CAP_S64A</name>
        <initializer>(1u &lt;&lt; 31) /* 64-bit Addressing (AHCI CAP.S64A) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="321" column="9" bodyfile="include/ahci.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a70cb9cf6f5592304658efff34c009d0f" prot="public" static="no">
        <name>AHCI_DEV_NULL</name>
        <initializer>0</initializer>
        <briefdescription>
<para>AHCI enumerated device type: none. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="326" column="9" bodyfile="include/ahci.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a528bf8cf48a25cbb5faf1b47aa41469c" prot="public" static="no">
        <name>AHCI_DEV_SATA</name>
        <initializer>1</initializer>
        <briefdescription>
<para>AHCI enumerated device type: SATA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="328" column="9" bodyfile="include/ahci.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a252890fb3343fb24494794f3f2c33a92" prot="public" static="no">
        <name>AHCI_DEV_SEMB</name>
        <initializer>2</initializer>
        <briefdescription>
<para>AHCI enumerated device type: SEMB. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="330" column="9" bodyfile="include/ahci.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a388f0e67c6bf032307b8e8192bf07c47" prot="public" static="no">
        <name>AHCI_DEV_PM</name>
        <initializer>3</initializer>
        <briefdescription>
<para>AHCI enumerated device type: Port Multiplier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="332" column="9" bodyfile="include/ahci.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1af14cd62b8394e7284ed7880e9a6cd379" prot="public" static="no">
        <name>AHCI_DEV_SATAPI</name>
        <initializer>4</initializer>
        <briefdescription>
<para>AHCI enumerated device type: SATAPI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="334" column="9" bodyfile="include/ahci.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a7799cbde4e99b339a61cb79ba018ed78" prot="public" static="no">
        <name>HBA_PORT_IPM_ACTIVE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Interface Power Management (IPM) state: active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="339" column="9" bodyfile="include/ahci.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1ad35e9d10e89ce48bf4f0e94929664102" prot="public" static="no">
        <name>HBA_PORT_DET_PRESENT</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Device Detection (DET) state: device present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="341" column="9" bodyfile="include/ahci.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a469ab8af9bf8f1f89a5c8f79b2305e34" prot="public" static="no">
        <name>HBA_PxCMD_ST</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>PxCMD: Start (ST). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="346" column="9" bodyfile="include/ahci.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a27978dd2aac599cbd0330c923652c6e4" prot="public" static="no">
        <name>HBA_PxCMD_FRE</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>PxCMD: FIS Receive Enable (FRE). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="348" column="9" bodyfile="include/ahci.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a93f2b1904299d4d1920e65039ff7ce5c" prot="public" static="no">
        <name>HBA_PxCMD_FR</name>
        <initializer>0x4000</initializer>
        <briefdescription>
<para>PxCMD: FIS Receive Running (FR) (read-only). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="350" column="9" bodyfile="include/ahci.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1ad2550f8f63fa32140f93da1b95354cf6" prot="public" static="no">
        <name>HBA_PxCMD_CR</name>
        <initializer>0x8000</initializer>
        <briefdescription>
<para>PxCMD: Command List Running (CR) (read-only). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="352" column="9" bodyfile="include/ahci.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a11add414188662b170c68ead95a786d8" prot="public" static="no">
        <name>HBA_PxIS_TFES</name>
        <initializer>(1 &lt;&lt; 30)   /** Task file <ref refid="ahci_8h_1adc64ccb7538429fe78e3fe0139267370" kindref="member">error</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="356" column="9" bodyfile="include/ahci.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a3f9cdaa8fab34c7d825ead65297d42d7" prot="public" static="no">
        <name>HBA_PxIS_IFS</name>
        <initializer>(1u &lt;&lt; 27)  /* Interface fatal <ref refid="ahci_8h_1adc64ccb7538429fe78e3fe0139267370" kindref="member">error</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="357" column="9" bodyfile="include/ahci.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a7697866d4a6d2d027fa9cd368fa5c490" prot="public" static="no">
        <name>HBA_PxIS_HBDS</name>
        <initializer>(1u &lt;&lt; 28)  /* Host bus <ref refid="udp_8h_1a5c239a1bb87b52b0f1d6d68c4749cd2a" kindref="member">data</ref> <ref refid="ahci_8h_1adc64ccb7538429fe78e3fe0139267370" kindref="member">error</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="358" column="9" bodyfile="include/ahci.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a8eeecf5fd64033567bfdc19f6ad364cc" prot="public" static="no">
        <name>HBA_PxIS_HBFS</name>
        <initializer>(1u &lt;&lt; 29)  /* Host bus fatal <ref refid="ahci_8h_1adc64ccb7538429fe78e3fe0139267370" kindref="member">error</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="359" column="9" bodyfile="include/ahci.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a38dd4451240fdf39ed56148f148e9ffd" prot="public" static="no">
        <name>ATA_CMD_READ_DMA_EX</name>
        <initializer>0x25</initializer>
        <briefdescription>
<para>ATA command: READ DMA EXT (48-bit). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="362" column="9" bodyfile="include/ahci.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1aad07fe181bd03623b039bca75664ec29" prot="public" static="no">
        <name>ATA_CMD_WRITE_DMA_EX</name>
        <initializer>0x35</initializer>
        <briefdescription>
<para>ATA command: WRITE DMA EXT (48-bit). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="364" column="9" bodyfile="include/ahci.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a32b0d71691c7e21ded44e462fe3de8db" prot="public" static="no">
        <name>ATA_DEV_BUSY</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>ATA Status: Busy (BSY). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="369" column="9" bodyfile="include/ahci.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1af12bdbc024458d3a760650e93bc32cb3" prot="public" static="no">
        <name>ATA_DEV_DRQ</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>ATA Status: Data Request (DRQ). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="371" column="9" bodyfile="include/ahci.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1acf60b1853666411b233e2f7f9dda7c12" prot="public" static="no">
        <name>HDD_SECTOR_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
<para>Logical HDD sector size in bytes (common 512 B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="376" column="9" bodyfile="include/ahci.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a91386c4e101094fc0177f95dbfdee42d" prot="public" static="no">
        <name>ATAPI_SECTOR_SIZE</name>
        <initializer>2048</initializer>
        <briefdescription>
<para>ATAPI logical sector size in bytes (2048 B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="378" column="9" bodyfile="include/ahci.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ahci_8h_1a8465803f3d0809bfc3ba02ecd86471a5" prot="public" static="no">
        <name>GET_SLOT</name>
        <param><defname>port</defname></param>
        <param><defname>abar</defname></param>
        <initializer>int slot = <ref refid="block_2ahci_2main_8c_1af88908abdc3b2c442adf7799b3ae92f7" kindref="member">find_cmdslot</ref>(port, abar); if (slot == -1) { return false; }</initializer>
        <briefdescription>
<para>Acquire a free command slot or return false from the caller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Expands to a declaration <computeroutput>int slot</computeroutput> and early-return path on failure. Intended for use at the start of functions that submit commands. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="394" column="9" bodyfile="include/ahci.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2" prot="public" static="no" strong="no">
        <type></type>
        <name>ahci_fis_type_t</name>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2a6bf1b47f446739ef43faae8f336c3926" prot="public">
          <name>FIS_TYPE_REG_H2D</name>
          <initializer>= 0x27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Register FIS - host to device </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2ae1d5eaa1f1a908043927530044b4394d" prot="public">
          <name>FIS_TYPE_REG_D2H</name>
          <initializer>= 0x34</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Register FIS - device to host </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2a1a3d1978859cdf6c6001c13177dbd386" prot="public">
          <name>FIS_TYPE_DMA_ACT</name>
          <initializer>= 0x39</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DMA activate FIS - device to host </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2adb343aab8b5d14af51decdcc24629af8" prot="public">
          <name>FIS_TYPE_DMA_SETUP</name>
          <initializer>= 0x41</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DMA setup FIS - bidirectional </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2ac2c749b258ea247c739772b70ee8fe96" prot="public">
          <name>FIS_TYPE_DATA</name>
          <initializer>= 0x46</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data FIS - bidirectional </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2a6d51bc47354d35b144fa146cbcb0d5cd" prot="public">
          <name>FIS_TYPE_BIST</name>
          <initializer>= 0x58</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BIST activate FIS - bidirectional </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2a2af968dcd3c14953622d44e9e90c6336" prot="public">
          <name>FIS_TYPE_PIO_SETUP</name>
          <initializer>= 0x5F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PIO setup FIS - device to host </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ahci_8h_1a3965c5db290baca217198a0da9de0ee2ab4aa404255097815f1e4a1dd372a151a" prot="public">
          <name>FIS_TYPE_DEV_BITS</name>
          <initializer>= 0xA1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set device bits FIS - device to host </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Frame Information Structure (FIS) type identifiers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="19" column="1" bodyfile="include/ahci.h" bodystart="19" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ahci_8h_1aa682c9430d53cab300ee8940356ef8ec" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t fis_type</definition>
        <argsstring></argsstring>
        <name>fis_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIS type (FIS_TYPE_REG_H2D)</para>
<para>FIS type (FIS_TYPE_REG_D2H)</para>
<para>FIS type (FIS_TYPE_DATA)</para>
<para>FIS type (FIS_TYPE_PIO_SETUP)</para>
<para>FIS type (FIS_TYPE_DMA_SETUP)</para>
<para>FIS type (FIS_TYPE_DEV_BITS) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="0" column="9" bodyfile="include/ahci.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a992e274c1d71ede460beb0d8af125622" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t pmport</definition>
        <argsstring></argsstring>
        <name>pmport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Port multiplier port </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="9" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ae09be11ca919ba207e66f2dc574125eb" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint32_t rsv0</definition>
        <argsstring></argsstring>
        <name>rsv0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero</para>
<para>0x1C, Reserved </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="2" column="9" bodyfile="include/ahci.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7da793e4e74beb561acfcfdd6879a842" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t command_or_control</definition>
        <argsstring></argsstring>
        <name>command_or_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1: Command, 0: Control </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="9" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a1a5aaa930940857f68f245eeb89506b5" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t command</definition>
        <argsstring></argsstring>
        <name>command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="9" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7fa21ea87b174e659eaec48fe5747baa" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t feature_low</definition>
        <argsstring></argsstring>
        <name>feature_low</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Feature register, bits 7:0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="9" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a4d37bb385b2335b413564d27fd70b540" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lba0</definition>
        <argsstring></argsstring>
        <name>lba0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LBA low register, bits 7:0</para>
<para>LBA low, bits 7:0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="9" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ac304bc04b42911d40f4f2c72c9874a86" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lba1</definition>
        <argsstring></argsstring>
        <name>lba1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LBA mid register, bits 15:8</para>
<para>LBA mid, bits 15:8 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="7" column="9" bodyfile="include/ahci.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a2a83e1f9d697fda069699cac7ada6aa9" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lba2</definition>
        <argsstring></argsstring>
        <name>lba2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LBA high register, bits 23:16</para>
<para>LBA high, bits 23:16 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="8" column="9" bodyfile="include/ahci.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a2376f17d1e7367401184b2a3978bcd3a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Device register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="9" column="9" bodyfile="include/ahci.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a88941bc1671b5fe35dc2a56fab1b06c9" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lba3</definition>
        <argsstring></argsstring>
        <name>lba3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LBA register, bits 31:24</para>
<para>LBA, bits 31:24 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="10" column="9" bodyfile="include/ahci.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a35586c129650892e7d4a6c9873f3d0b7" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lba4</definition>
        <argsstring></argsstring>
        <name>lba4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LBA register, bits 39:32</para>
<para>LBA, bits 39:32 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="11" column="9" bodyfile="include/ahci.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7fe42d2d7b97b74048b192a186ddd18a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lba5</definition>
        <argsstring></argsstring>
        <name>lba5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LBA register, bits 47:40</para>
<para>LBA, bits 47:40 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="12" column="9" bodyfile="include/ahci.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7ae23cb3327a1bdb06655e8f9c587381" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t feature_high</definition>
        <argsstring></argsstring>
        <name>feature_high</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Feature register, bits 15:8 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="13" column="9" bodyfile="include/ahci.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ad5464336123b49cddf33c152c21e09fd" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t count_low</definition>
        <argsstring></argsstring>
        <name>count_low</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count register, bits 7:0</para>
<para>Count, bits 7:0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="14" column="9" bodyfile="include/ahci.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ac093f8f0183d6918b620ecc760476af3" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t count_high</definition>
        <argsstring></argsstring>
        <name>count_high</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count register, bits 15:8</para>
<para>Count, bits 15:8 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="15" column="9" bodyfile="include/ahci.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a8617e0fef3725e58934abede60a1c969" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t icc</definition>
        <argsstring></argsstring>
        <name>icc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Isochronous command completion </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="16" column="9" bodyfile="include/ahci.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ae11ecbd546ec0301d5462df23b139816" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t control</definition>
        <argsstring></argsstring>
        <name>control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Control register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="17" column="9" bodyfile="include/ahci.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a81fef0fb460b6e929abedd18ad48c68d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint32_t rsv1</definition>
        <argsstring>[4]</argsstring>
        <name>rsv1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero</para>
<para>0x44–0x6F, Reserved </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="18" column="9" bodyfile="include/ahci.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a1d4518dd09f265f813b7c429c114822c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint32_t interrupt</definition>
        <argsstring></argsstring>
        <name>interrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interrupt bit (I)</para>
<para>Interrupt on completion (IOC) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="9" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1afea475b453c81c5b3f5a31abb861edfb" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>volatile uint8_t status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ATA Status register snapshot</para>
<para>Status register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="9" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1adc64ccb7538429fe78e3fe0139267370" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t error</definition>
        <argsstring></argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ATA Error register snapshot</para>
<para>Error register</para>
<para>Error register (valid if ERR set) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="9" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ada04bac69c987a631b5fb01d1619925a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsv2</definition>
        <argsstring></argsstring>
        <name>rsv2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="14" column="9" bodyfile="include/ahci.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ab04f732f78798f4cc1ce0bed9a3aa792" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsv3</definition>
        <argsstring>[2]</argsstring>
        <name>rsv3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="17" column="9" bodyfile="include/ahci.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ad0cc498dc8714f1605be7a653b1cf6fc" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsv4</definition>
        <argsstring>[4]</argsstring>
        <name>rsv4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="18" column="9" bodyfile="include/ahci.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a75a257f81d6b64479c0da8d516360bd0" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t data[]</definition>
        <argsstring>[]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dword-aligned payload </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="10" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ac6116d5235e13e059e591879c46d7174" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data direction: 1 = device-&gt;host </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="9" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a6114889460e0e9b1c9684351d5248239" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t e_status</definition>
        <argsstring></argsstring>
        <name>e_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>New Status value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="19" column="9" bodyfile="include/ahci.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a368ec4c8e0c57e4f198048b1ad39b6f5" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint32_t transfer_count</definition>
        <argsstring></argsstring>
        <name>transfer_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transfer count (bytes)</para>
<para>Bytes to transfer (bit0==0) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="20" column="10" bodyfile="include/ahci.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a11667ae4233da22db2d59c9c25c62216" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t activate</definition>
        <argsstring></argsstring>
        <name>activate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Auto-activate (DMA Activate FIS needed) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="9" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1afe31ba51100f985e69bc6b1a39adf505" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsved[2]</definition>
        <argsstring>[2]</argsstring>
        <name>rsved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="9" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ad120517ff77b63dea4aa900d80a23b2f" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t dma_buffer_id</definition>
        <argsstring></argsstring>
        <name>dma_buffer_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Host DMA buffer identifier (host-specific) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="7" column="10" bodyfile="include/ahci.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a12144a8b7d28e438d97bd2606d534990" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint8_t rsvd</definition>
        <argsstring></argsstring>
        <name>rsvd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="8" column="10" bodyfile="include/ahci.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7c97b6a54517ca21645aacc1203c899f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dma_buffer_offset</definition>
        <argsstring></argsstring>
        <name>dma_buffer_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Byte offset into buffer (bits[1:0]==0) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="9" column="10" bodyfile="include/ahci.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1aadbe85d15d901f6cff0102084cac5386" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t resvd</definition>
        <argsstring></argsstring>
        <name>resvd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="11" column="10" bodyfile="include/ahci.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1abf67ca7996d279a2ef8bffda1a82ee7f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t command_list_base_addr_lower</definition>
        <argsstring></argsstring>
        <name>command_list_base_addr_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x00, Command List Base Address (CLB), 1 KiB aligned </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="0" column="10" bodyfile="include/ahci.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1abc51f0d8c995f9cfa08e4c1c25ffd627" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t command_list_base_addr_upper</definition>
        <argsstring></argsstring>
        <name>command_list_base_addr_upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x04, CLB upper 32 bits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="10" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a600f253196689c3f368e4b06fafd482f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t fis_base_addr_lower</definition>
        <argsstring></argsstring>
        <name>fis_base_addr_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x08, FIS Base Address (FB), 256 B aligned </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="2" column="10" bodyfile="include/ahci.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a61858b13bf5415fe6fb502173db8ba9a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t fis_base_addr_upper</definition>
        <argsstring></argsstring>
        <name>fis_base_addr_upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x0C, FB upper 32 bits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="10" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1aebca3714238e7755e09ece3033923a78" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t interrupt_status</definition>
        <argsstring></argsstring>
        <name>interrupt_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x10, Interrupt Status (PxIS)</para>
<para>0x08, Interrupt Status (IS) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="10" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a4f199fad661569e4856c1f15791a1346" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t interrupt_enable</definition>
        <argsstring></argsstring>
        <name>interrupt_enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x14, Interrupt Enable (PxIE) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="10" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a5e9712b08d7cbf6091f9e5334ff97b5d" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t cmd</definition>
        <argsstring></argsstring>
        <name>cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x18, Command and Status (PxCMD) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="10" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a588a71ba5aeb215fb91d811ba3f9ea48" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t task_file_data</definition>
        <argsstring></argsstring>
        <name>task_file_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x20, Task File Data (PxTFD) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="8" column="10" bodyfile="include/ahci.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1acd2a6284879dded65f0b8daa7c68485a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t signature</definition>
        <argsstring></argsstring>
        <name>signature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x24, Signature (PxSIG) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="9" column="10" bodyfile="include/ahci.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a1efd84c0ac752cbb1d9a6a3b8a67f12a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sata_status</definition>
        <argsstring></argsstring>
        <name>sata_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x28, SATA Status (SCR0:SStatus) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="10" column="10" bodyfile="include/ahci.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7ca08849fde81436e4e01bb0e522b0d0" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sata_control</definition>
        <argsstring></argsstring>
        <name>sata_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x2C, SATA Control (SCR2:SControl) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="11" column="10" bodyfile="include/ahci.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7a115bcf12f25d7e7d6bc8c86f1a8286" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sata_error</definition>
        <argsstring></argsstring>
        <name>sata_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x30, SATA Error (SCR1:SError) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="12" column="10" bodyfile="include/ahci.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a35356cc27a93f3d43c76c5814263ca90" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sata_active</definition>
        <argsstring></argsstring>
        <name>sata_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x34, SATA Active (SCR3:SActive) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="13" column="10" bodyfile="include/ahci.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a6f885bc33993db056e0079136744ec7a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t command_issue</definition>
        <argsstring></argsstring>
        <name>command_issue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x38, Command Issue (PxCI) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="14" column="10" bodyfile="include/ahci.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1aed140a9b2483555a29ff3204c948a527" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sata_notification</definition>
        <argsstring></argsstring>
        <name>sata_notification</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x3C, SATA Notification (SCR4:SNotification) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="15" column="10" bodyfile="include/ahci.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a6adc90b814f31334f45f5785910ab535" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t fis_switch_control</definition>
        <argsstring></argsstring>
        <name>fis_switch_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x40, FIS-based Switch Control (PxFBS) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="16" column="10" bodyfile="include/ahci.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1adea7e7ade5cd02d3f97ac87b3032a648" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint8_t vendor</definition>
        <argsstring>[4]</argsstring>
        <name>vendor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x70–0x7F, Vendor specific</para>
<para>0xA0–0xFF, Vendor specific </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="18" column="10" bodyfile="include/ahci.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a69f4f160bd18bb1e8e3cedb21fd18ba1" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t host_capabilities</definition>
        <argsstring></argsstring>
        <name>host_capabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x00, Host Capabilities (CAP) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="10" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ad418712ee32cdabbe0485d78ded43548" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t global_host_control</definition>
        <argsstring></argsstring>
        <name>global_host_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x04, Global Host Control (GHC) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="2" column="10" bodyfile="include/ahci.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a4b125c0884506c8bfdb802a8394e826a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t ports_implemented</definition>
        <argsstring></argsstring>
        <name>ports_implemented</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x0C, Ports Implemented bitmask (PI) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="10" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1acd99bb05ca015e7d74448acb1deba7ca" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x10, Version (VS) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="10" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a57208d1b8521334df7c5e9e5103af185" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t ccc_ctl</definition>
        <argsstring></argsstring>
        <name>ccc_ctl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x14, Command Completion Coalescing Control </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="10" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a78eeaafb4be125bcf73f5c77d91737e8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t ccc_pts</definition>
        <argsstring></argsstring>
        <name>ccc_pts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x18, Command Completion Coalescing Ports </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="7" column="10" bodyfile="include/ahci.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a83914548fdfabd05de7e2ebd4df20537" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t em_loc</definition>
        <argsstring></argsstring>
        <name>em_loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x1C, Enclosure Management Location </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="8" column="10" bodyfile="include/ahci.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a35498bdea06b81b36992e6589c6e5d31" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t em_ctl</definition>
        <argsstring></argsstring>
        <name>em_ctl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x20, Enclosure Management Control </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="9" column="10" bodyfile="include/ahci.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ab2aea79393e271b47d2d86745898b7d9" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t extended_host_capabilities</definition>
        <argsstring></argsstring>
        <name>extended_host_capabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x24, Extended Host Capabilities (CAP2) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="10" column="10" bodyfile="include/ahci.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a106708a7d3753ab0bf72344ad1fea205" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t bios_handoff_control</definition>
        <argsstring></argsstring>
        <name>bios_handoff_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x28, BIOS/OS Handoff Control and Status (BOHC) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="11" column="10" bodyfile="include/ahci.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a793fd337c7301176ce7fcd42541f21af" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsv</definition>
        <argsstring>[0xA0-0x2C]</argsstring>
        <name>rsv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x2C–0x9F, Reserved</para>
<para>0xA0–0xFF, Reserved</para>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="12" column="9" bodyfile="include/ahci.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a5f1a604579819241e224bf29b305671c" prot="public" static="no" mutable="no">
        <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref></type>
        <definition>ahci_hba_port_t ports[32]</definition>
        <argsstring>[32]</argsstring>
        <name>ports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x100–, Port control registers (Px) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="14" column="16" bodyfile="include/ahci.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a4961e9402dd42d1b23038326212a3955" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t notification</definition>
        <argsstring></argsstring>
        <name>notification</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notification (N) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="9" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a89b7ae3057fa9f2cd772f58597e094ce" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t status_low</definition>
        <argsstring></argsstring>
        <name>status_low</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Status bits [2:0] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="9" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a245f1b9e33575d765f74219a01dbb2c6" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsvd2</definition>
        <argsstring></argsstring>
        <name>rsvd2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="9" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a328c10d9870ee8a7cc642e93e2cdbfdb" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t status_high</definition>
        <argsstring></argsstring>
        <name>status_high</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Status bits [7:5] (packed MSBs) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="7" column="9" bodyfile="include/ahci.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ac67adda688fe24bd9870d837c52793d1" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rsvd3</definition>
        <argsstring></argsstring>
        <name>rsvd3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserved, must be zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="8" column="9" bodyfile="include/ahci.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1af8b2056e8cb8288830e7e421234d78e3" prot="public" static="no" mutable="no">
        <type><ref refid="structahci__fis__dma__setup__t" kindref="compound">ahci_fis_dma_setup_t</ref></type>
        <definition>ahci_fis_dma_setup_t dma_setup_fis</definition>
        <argsstring></argsstring>
        <name>dma_setup_fis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x00–0x1F, DMA Setup FIS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="0" column="22" bodyfile="include/ahci.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a87cee13f0709f20b417dc80bdfc5f1fd" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t pad0[4]</definition>
        <argsstring>[4]</argsstring>
        <name>pad0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Padding </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="9" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ae6b8596c5c8bf7e6134a06307f63a959" prot="public" static="no" mutable="no">
        <type><ref refid="structahci__fis__pio__setup__t" kindref="compound">ahci_fis_pio_setup_t</ref></type>
        <definition>ahci_fis_pio_setup_t pio_setup_fis</definition>
        <argsstring></argsstring>
        <name>pio_setup_fis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x20–0x3F, PIO Setup FIS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="2" column="22" bodyfile="include/ahci.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a289fe28fad49aef9085c84a01e508642" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t pad1[12]</definition>
        <argsstring>[12]</argsstring>
        <name>pad1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Padding </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="9" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1aa193cc6e40f9ee85db9251e11f8e5032" prot="public" static="no" mutable="no">
        <type><ref refid="structahci__fis__reg__d2h__t" kindref="compound">ahci_fis_reg_d2h_t</ref></type>
        <definition>ahci_fis_reg_d2h_t register_fis</definition>
        <argsstring></argsstring>
        <name>register_fis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x40–0x57, Register – Device to Host FIS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="20" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a782095999a45daafbc11ab173275430b" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t pad2[4]</definition>
        <argsstring>[4]</argsstring>
        <name>pad2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Padding </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="9" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a0b28785ffe2082b5b6e6bde8c408601e" prot="public" static="no" mutable="no">
        <type><ref refid="structahci__fis__dev__bits__t" kindref="compound">ahci_fis_dev_bits_t</ref></type>
        <definition>ahci_fis_dev_bits_t set_device_bit_fis</definition>
        <argsstring></argsstring>
        <name>set_device_bit_fis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x58–0x5F, Set Device Bits FIS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="21" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a3d1a6866cd54c83d027f4362457e43da" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ufis[64]</definition>
        <argsstring>[64]</argsstring>
        <name>ufis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0x60–0x9F, Unknown/other FIS (vendor/ATAPI) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="7" column="9" bodyfile="include/ahci.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a910cb047df259fa231b7fdf0f6f15ac1" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t command_fis_length</definition>
        <argsstring></argsstring>
        <name>command_fis_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command FIS length (DWORDs, 2–16) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="0" column="9" bodyfile="include/ahci.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a3d89f3fd367895f609c2c14bbe283870" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t atapi</definition>
        <argsstring></argsstring>
        <name>atapi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ATAPI command (1 = ATAPI) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="9" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a60e9c75aa693ad12f404344cffc12505" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t write</definition>
        <argsstring></argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Direction: 1 = H2D write, 0 = D2H read </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="2" column="9" bodyfile="include/ahci.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a541f7cf2157c5192c992718093d78ec5" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t prefetchable</definition>
        <argsstring></argsstring>
        <name>prefetchable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prefetchable hint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="9" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ad4693f3cf41505cc76fe9e313cbcc8ee" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t reset</definition>
        <argsstring></argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Device reset </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="4" column="9" bodyfile="include/ahci.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a108b6ddc5e42151cbe2747453502d7af" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t built_in_self_test</definition>
        <argsstring></argsstring>
        <name>built_in_self_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BIST </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="5" column="9" bodyfile="include/ahci.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a27f07dd3b7a4f8cd7adc1e93b94f8c75" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t clear_busy_on_ok</definition>
        <argsstring></argsstring>
        <name>clear_busy_on_ok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear busy upon R_OK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="6" column="9" bodyfile="include/ahci.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1af23d5a6ba81779ead9d99275fda199c0" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t port_multiplier_port</definition>
        <argsstring></argsstring>
        <name>port_multiplier_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Port multiplier port </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="8" column="9" bodyfile="include/ahci.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1af479470216ead0dcdcb1dc1ef4b992e1" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t prdt_length_entries</definition>
        <argsstring></argsstring>
        <name>prdt_length_entries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PRDT length in entries </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="9" column="10" bodyfile="include/ahci.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ac8d39c461915c7810aba1d549a0309aa" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>volatile uint32_t prdbc</definition>
        <argsstring></argsstring>
        <name>prdbc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bytes transferred by HBA (read-only to host) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="10" column="19" bodyfile="include/ahci.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ac84a5c5b4196e41e9ad8943f583d03c6" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t command_table_base_lower</definition>
        <argsstring></argsstring>
        <name>command_table_base_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command Table Base Address (CTBA) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="11" column="10" bodyfile="include/ahci.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1af6fa144ce0d979ab990b8a71eee07a53" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t command_table_base_upper</definition>
        <argsstring></argsstring>
        <name>command_table_base_upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CTBA upper 32 bits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="12" column="10" bodyfile="include/ahci.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1aead9db9e852afca1d4a3e420837b0ca2" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t data_address_lower</definition>
        <argsstring></argsstring>
        <name>data_address_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data base address (lower) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="0" column="10" bodyfile="include/ahci.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ae845a6b4621c8387e733a84e879a4ffa" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t data_address_upper</definition>
        <argsstring></argsstring>
        <name>data_address_upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data base address (upper) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="10" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1ae15613b55ef4a6c4195797e604e57966" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t byte_count</definition>
        <argsstring></argsstring>
        <name>byte_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Byte count minus 1 (max 4 MiB - 1) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="10" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7cdb33f544dc7f96ae9340bc9492d5bc" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t command_fis[64]</definition>
        <argsstring>[64]</argsstring>
        <name>command_fis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command FIS (CFIS) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="0" column="9" bodyfile="include/ahci.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a0dbd58d94c2383a6c51348ec983f0a94" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t atapi_command[16]</definition>
        <argsstring>[16]</argsstring>
        <name>atapi_command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ATAPI packet command (12 or 16 bytes) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="9" bodyfile="include/ahci.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1aab699e89e2d277835a68abc61a481565" prot="public" static="no" mutable="no">
        <type><ref refid="structahci__hba__prdt__entry__t" kindref="compound">ahci_hba_prdt_entry_t</ref></type>
        <definition>ahci_hba_prdt_entry_t prdt_entry[1]</definition>
        <argsstring>[1]</argsstring>
        <name>prdt_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PRDT entries (0–65535, flexible array) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="3" column="23" bodyfile="include/ahci.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ahci_8h_1a7f771274efa0cb7b6d1d9dba459a3511" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structahci__trim__range" kindref="compound">ahci_trim_range</ref></type>
        <definition>struct ahci_trim_range __attribute__</definition>
        <argsstring></argsstring>
        <name>__attribute__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="269" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ahci_8h_1a5dcd32d6ef59787d3ee7710511d69b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structahci__fis__reg__h2d__t" kindref="compound">ahci_fis_reg_h2d_t</ref></type>
        <definition>struct ahci_fis_reg_h2d_t __attribute__</definition>
        <argsstring>((packed)) ahci_fis_reg_h2d_t</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(packed)</type>
        </param>
        <briefdescription>
<para>Register FIS: Host to Device (H2D). </para>
        </briefdescription>
        <detaileddescription>
<para>Command Table (points to CFIS/ACMD and PRDT).</para>
<para>Physical Region Descriptor Table (PRDT) entry.</para>
<para>Command Header (one per command slot).</para>
<para>Received FIS area layout in system memory (per-port).</para>
<para>Set Device Bits (SDB) FIS (device-&gt;host asynchronous notification).</para>
<para>AHCI Host Bus Adapter (HBA) memory-mapped register space.</para>
<para>AHCI Port register block (Px*).</para>
<para>DMA Setup FIS (bidirectional).</para>
<para>PIO Setup FIS (device to host).</para>
<para>Data FIS (bidirectional payload).</para>
<para>Register FIS: Device to Host (D2H).</para>
<para><simplesect kind="note"><para>dma_buffer_offset low 2 bits must be 0 (DWORD aligned). </para>
</simplesect>
<simplesect kind="note"><para>transfer_count bit 0 must be 0 (even byte count).</para>
</simplesect>
<simplesect kind="note"><para>Addresses labelled &quot;base address&quot; require the documented alignment (1 KiB for CLB, 256 B for FB).</para>
</simplesect>
<simplesect kind="note"><para>Reconstruct the full ATA Status as (status_low | (status_high &lt;&lt; 3)).</para>
</simplesect>
<simplesect kind="note"><para>command_fis_length is measured in DWORDs (2–16). </para>
</simplesect>
<simplesect kind="note"><para>prdbc is written by HBA with bytes actually transferred.</para>
</simplesect>
<simplesect kind="note"><para>byte_count is encoded as (N - 1); N must be even; N ≤ 4 MiB.</para>
</simplesect>
Register FIS: Host to Device (H2D).</para>
<para>Root System Description Table (RSDT)</para>
<para>Generic ACPI System Description Table Header.</para>
<para>This structure serves as the entry point to the ACPI system description tables. Its location is typically found by scanning the BIOS memory range. It may point to either the RSDT (ACPI 1.0) or XSDT (ACPI 2.0+).</para>
<para>All ACPI tables begin with this header. It is used to identify table type, length, version, and source information.</para>
<para>Points to other system description tables using 32-bit addresses. Superseded by XSDT in ACPI 2.0+ which uses 64-bit addresses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="1" column="0" bodyfile="include/scsi.h" bodystart="58" bodyend="65" declfile="include/ahci.h" declline="1" declcolumn="0"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1aee21823366d10636044f5358d4c6e527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_ahci</definition>
        <argsstring>()</argsstring>
        <name>init_ahci</name>
        <briefdescription>
<para>Initialise AHCI controller(s), enumerate ports, and register devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="401" column="6" bodyfile="src/block/ahci/main.c" bodystart="287" bodyend="308" declfile="include/ahci.h" declline="401" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1af88908abdc3b2c442adf7799b3ae92f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int find_cmdslot</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar)</argsstring>
        <name>find_cmdslot</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Find a free command slot on a port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Slot index [0..31] on success, -1 if none available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="409" column="5" bodyfile="src/block/ahci/main.c" bodystart="266" bodyend="279" declfile="include/ahci.h" declline="409" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a391e13118d09abac3bf8cf315a45061d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ahci_read</definition>
        <argsstring>(ahci_hba_port_t *port, uint64_t start, uint32_t count, char *buf, ahci_hba_mem_t *abar)</argsstring>
        <name>ahci_read</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Read from a SATA block device via DMA. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting LBA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sectors to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer (caller-managed). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="420" column="6" bodyfile="src/block/ahci/read.c" bodystart="6" bodyend="43" declfile="include/ahci.h" declline="420" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a5f86b1b710b32bba724bd02538f30eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ahci_write</definition>
        <argsstring>(ahci_hba_port_t *port, uint64_t start, uint32_t count, char *buf, ahci_hba_mem_t *abar)</argsstring>
        <name>ahci_write</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Write to a SATA block device via DMA. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting LBA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sectors to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Source buffer (caller-managed). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="431" column="6" bodyfile="src/block/ahci/write.c" bodystart="5" bodyend="31" declfile="include/ahci.h" declline="431" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a2a2c8713fcc0d75976e7d01cae9e635b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ahci_atapi_read</definition>
        <argsstring>(ahci_hba_port_t *port, uint64_t start, uint32_t count, char *buf, ahci_hba_mem_t *abar)</argsstring>
        <name>ahci_atapi_read</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Read from an ATAPI device (e.g., optical) via PACKET command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting logical block address (ATAPI). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of logical blocks to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer (caller-managed). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="442" column="6" bodyfile="src/block/ahci/read.c" bodystart="61" bodyend="88" declfile="include/ahci.h" declline="442" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a4a1031f089ff792cfc6c22f251cb5df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t ahci_read_size</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar)</argsstring>
        <name>ahci_read_size</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Query capacity (in bytes) from a SATA device using IDENTIFY data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Device size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="450" column="10" bodyfile="src/block/ahci/read.c" bodystart="45" bodyend="59" declfile="include/ahci.h" declline="450" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1aa312ddeba45345b6a31a08b9ca9cd36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_sata_label</definition>
        <argsstring>(struct storage_device_t *sd, const uint8_t *id_page)</argsstring>
        <name>build_sata_label</name>
        <param>
          <type>struct <ref refid="structstorage__device__t" kindref="compound">storage_device_t</ref> *</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>id_page</declname>
        </param>
        <briefdescription>
<para>Build a human-readable SATA device label from IDENTIFY data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sd</parametername>
</parameternamelist>
<parameterdescription>
<para>Storage device object to populate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id_page</parametername>
</parameternamelist>
<parameterdescription>
<para>512-byte IDENTIFY DEVICE buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="457" column="6" bodyfile="src/block/ahci/description.c" bodystart="71" bodyend="81" declfile="include/ahci.h" declline="457" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a7c4ecb444f414a2b7f2b5ae6f2816333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void humanise_capacity</definition>
        <argsstring>(char *out, size_t out_len, uint64_t bytes)</argsstring>
        <name>humanise_capacity</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>out_len</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Render a human-readable capacity string (e.g., &quot;931 GiB&quot;). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Capacity in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="465" column="6" bodyfile="src/block/ahci/description.c" bodystart="58" bodyend="69" declfile="include/ahci.h" declline="465" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a1739b1f50c9d12fef76bd70d476a823e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_type</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>check_type</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Inspect PxSIG/PxSSTS to determine attached device type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI port register block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of AHCI_DEV_* constants. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="472" column="5" bodyfile="src/block/ahci/main.c" bodystart="28" bodyend="48" declfile="include/ahci.h" declline="472" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a60cd04d7eb20bbf35fb2356ab1687bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int storage_device_ahci_block_read</definition>
        <argsstring>(void *dev, uint64_t start, uint32_t bytes, unsigned char *buffer)</argsstring>
        <name>storage_device_ahci_block_read</name>
        <param>
          <type>void *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Block device read shim for the storage layer (bytes interface). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque device pointer (struct storage_device_t*). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte offset to read from (converted to sectors internally). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno-style on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="482" column="5" bodyfile="src/block/ahci/storage_device.c" bodystart="3" bodyend="52" declfile="include/ahci.h" declline="482" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a8cf110926059fdb38b939d7a94eacaa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int storage_device_ahci_block_write</definition>
        <argsstring>(void *dev, uint64_t start, uint32_t bytes, const unsigned char *buffer)</argsstring>
        <name>storage_device_ahci_block_write</name>
        <param>
          <type>void *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Block device write shim for the storage layer (bytes interface). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque device pointer (struct storage_device_t*). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte offset to write to (converted to sectors internally). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Source buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno-style on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="492" column="5" bodyfile="src/block/ahci/storage_device.c" bodystart="74" bodyend="100" declfile="include/ahci.h" declline="492" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a43e3e1c7e4452723f6ff21043edb5519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wait_for_ready</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>wait_for_ready</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Wait until the AHCI port and attached device are ready to accept a new command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if ready, false on timeout or fatal port state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="499" column="6" bodyfile="src/block/ahci/main.c" bodystart="95" bodyend="104" declfile="include/ahci.h" declline="499" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a60084cde8e44fb4f4411e8839fbe93e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_prdt</definition>
        <argsstring>(ahci_hba_cmd_tbl_t *cmdtbl, size_t index, void *address, uint32_t byte_count, bool interrupt)</argsstring>
        <name>fill_prdt</name>
        <param>
          <type><ref refid="structahci__hba__cmd__tbl__t" kindref="compound">ahci_hba_cmd_tbl_t</ref> *</type>
          <declname>cmdtbl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>byte_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
<para>Fill one PRDT entry in the command table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdtbl</parametername>
</parameternamelist>
<parameterdescription>
<para>Command table to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>PRDT entry index to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Physical or DMA-able address of the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to transfer (1..4MiB per entry, device-dependent). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to request interrupt on completion for this PRDT entry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="509" column="6" bodyfile="src/block/ahci/main.c" bodystart="106" bodyend="111" declfile="include/ahci.h" declline="509" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1aad42e0c0a814e479ed31f7ac2bc57090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__hba__cmd__header__t" kindref="compound">ahci_hba_cmd_header_t</ref> *</type>
        <definition>ahci_hba_cmd_header_t* get_cmdheader_for_slot</definition>
        <argsstring>(ahci_hba_port_t *port, size_t slot, bool write, bool atapi, uint16_t prdtls)</argsstring>
        <name>get_cmdheader_for_slot</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atapi</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>prdtls</declname>
        </param>
        <briefdescription>
<para>Obtain and initialise a command header for a slot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true for host-to-device (write), false for device-to-host (read). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atapi</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true for ATAPI packet command, false for ATA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prdtls</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of PRDT entries to advertise (PRDTL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the prepared command header. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="520" column="23" bodyfile="src/block/ahci/main.c" bodystart="113" bodyend="122" declfile="include/ahci.h" declline="520" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1aa78c7e40ebc49abff4596b0541c7460f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__hba__cmd__tbl__t" kindref="compound">ahci_hba_cmd_tbl_t</ref> *</type>
        <definition>ahci_hba_cmd_tbl_t* get_and_clear_cmdtbl</definition>
        <argsstring>(ahci_hba_cmd_header_t *cmdheader)</argsstring>
        <name>get_and_clear_cmdtbl</name>
        <param>
          <type><ref refid="structahci__hba__cmd__header__t" kindref="compound">ahci_hba_cmd_header_t</ref> *</type>
          <declname>cmdheader</declname>
        </param>
        <briefdescription>
<para>Return the command table for a header and clear CFIS/ATAPI/reserved regions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdheader</parametername>
</parameternamelist>
<parameterdescription>
<para>Command header whose table will be accessed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the command table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="527" column="20" bodyfile="src/block/ahci/main.c" bodystart="124" bodyend="129" declfile="include/ahci.h" declline="527" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1ac60cff25b988babf024da82ac44f31df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__fis__reg__h2d__t" kindref="compound">ahci_fis_reg_h2d_t</ref> *</type>
        <definition>ahci_fis_reg_h2d_t* setup_reg_h2d</definition>
        <argsstring>(ahci_hba_cmd_tbl_t *cmdtbl, uint8_t type, uint8_t command, uint8_t feature_low)</argsstring>
        <name>setup_reg_h2d</name>
        <param>
          <type><ref refid="structahci__hba__cmd__tbl__t" kindref="compound">ahci_hba_cmd_tbl_t</ref> *</type>
          <declname>cmdtbl</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>feature_low</declname>
        </param>
        <briefdescription>
<para>Prepare a Register H2D FIS in the command table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdtbl</parametername>
</parameternamelist>
<parameterdescription>
<para>Command table to place the FIS into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>FIS type (e.g., FIS_TYPE_REG_H2D). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>ATA/ATAPI command opcode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feature_low</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature low byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the FIS within the command table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="537" column="20" bodyfile="src/block/ahci/main.c" bodystart="131" bodyend="141" declfile="include/ahci.h" declline="537" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1af2d2b58a79436b97865b25b02278f5af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_reg_h2c</definition>
        <argsstring>(ahci_fis_reg_h2d_t *cmdfis, uint64_t start, uint16_t count)</argsstring>
        <name>fill_reg_h2c</name>
        <param>
          <type><ref refid="structahci__fis__reg__h2d__t" kindref="compound">ahci_fis_reg_h2d_t</ref> *</type>
          <declname>cmdfis</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Fill LBA and sector count fields in a Register H2D FIS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmdfis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the FIS previously created by setup_reg_h2d. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting LBA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Sector count (device logical block units). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="545" column="6" bodyfile="src/block/ahci/main.c" bodystart="143" bodyend="160" declfile="include/ahci.h" declline="545" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a21d8de7e0ba2b89e77a3ac60cba28f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void issue_command_to_slot</definition>
        <argsstring>(ahci_hba_port_t *port, uint8_t slot)</argsstring>
        <name>issue_command_to_slot</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Issue a prepared command in the given slot by setting PxCI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="552" column="6" bodyfile="src/block/ahci/main.c" bodystart="162" bodyend="164" declfile="include/ahci.h" declline="552" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a1f46c86686bb7c97c25523cbd2513165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wait_for_completion</definition>
        <argsstring>(ahci_hba_port_t *port, uint8_t slot, const char *function)</argsstring>
        <name>wait_for_completion</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Wait for a command slot to complete and detect transport/taskfile errors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Short label used for diagnostics/logging. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false if a taskfile/transport error occurred (error already logged). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="561" column="6" bodyfile="src/block/ahci/main.c" bodystart="175" bodyend="189" declfile="include/ahci.h" declline="561" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a5fcb5e447d6a4b7f037017caced3bd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool issue_and_wait</definition>
        <argsstring>(ahci_hba_port_t *port, uint8_t slot, const char *function)</argsstring>
        <name>issue_and_wait</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Convenience wrapper to issue a command and wait for completion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Command slot number (0..31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Short label used for diagnostics/logging. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error (error already logged). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="570" column="6" bodyfile="src/block/ahci/main.c" bodystart="191" bodyend="198" declfile="include/ahci.h" declline="570" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a82e8bd67bf0658684f32539fc17143ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trim_trailing_spaces</definition>
        <argsstring>(char *s)</argsstring>
        <name>trim_trailing_spaces</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim trailing ASCII spaces from a NUL-terminated string in place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer to modify. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="576" column="6" bodyfile="src/block/ahci/description.c" bodystart="3" bodyend="13" declfile="include/ahci.h" declline="576" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1abc3ab1a42524ee7ed623464a5b616f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void build_atapi_label</definition>
        <argsstring>(struct storage_device_t *sd, const uint8_t *inq)</argsstring>
        <name>build_atapi_label</name>
        <param>
          <type>struct <ref refid="structstorage__device__t" kindref="compound">storage_device_t</ref> *</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>inq</declname>
        </param>
        <briefdescription>
<para>Build a human-readable ATAPI device label from INQUIRY data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sd</parametername>
</parameternamelist>
<parameterdescription>
<para>Storage device object to receive the label. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inq</parametername>
</parameternamelist>
<parameterdescription>
<para>36+ byte SCSI INQUIRY response buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="583" column="6" bodyfile="src/block/ahci/description.c" bodystart="15" bodyend="35" declfile="include/ahci.h" declline="583" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a6f1b76549e327abf15df2d5ebd0fda5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool atapi_eject</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar)</argsstring>
        <name>atapi_eject</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <briefdescription>
<para>Eject removable media from an ATAPI device (ALLOW removal then START STOP with LOEJ). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port for the device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory (ABAR) pointer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on command acceptance, false on error (caller may fetch sense). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="591" column="6" bodyfile="src/block/ahci/eject.c" bodystart="5" bodyend="53" declfile="include/ahci.h" declline="591" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1aff61e662465d5f8a0a1552ca888f99c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ahci_identify_page</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar, uint8_t *out)</argsstring>
        <name>ahci_identify_page</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Issue IDENTIFY (ATA or ATAPI) and copy the 512-byte identify page to out. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory (ABAR) pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer for identify data (512 bytes). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="600" column="6" bodyfile="src/block/ahci/identify.c" bodystart="6" bodyend="26" declfile="include/ahci.h" declline="600" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a69ff994956593f784ed5a220fcb27378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool atapi_enquiry</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar, uint8_t *out, uint8_t len)</argsstring>
        <name>atapi_enquiry</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Issue ATAPI INQUIRY (0x12) and copy the response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory (ABAR) pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer for INQUIRY data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocation length requested and number of bytes to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on error (caller may use sense mapping). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="610" column="6" bodyfile="src/block/ahci/enquiry.c" bodystart="7" bodyend="32" declfile="include/ahci.h" declline="610" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a8c1bff1fbaab0782718b05e5c8a8056c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ahci_classify_error</definition>
        <argsstring>(ahci_hba_port_t *port)</argsstring>
        <name>ahci_classify_error</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Map AHCI/AHCI-ATA/ATAPI latched status on a port to a fixed fs_error_t without performing I/O. </para>
        </briefdescription>
        <detaileddescription>
<para>Map AHCI/AHCI-ATA/ATAPI status to a fixed fs_error_t.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port; uses PxIS/PxSERR/PxTFD/PxSIG snapshots. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>fs_error_t value describing the failure class.</para>
</simplesect>
Uses PxIS priority: HBFS → HBDS → IFS → TFES. For TFES, inspects PxTFD ERR bits. For ATAPI, returns FS_ERR_ATAPI_CHECK on TFES so the caller can issue REQUEST SENSE.</para>
<para>This function performs no I/O; it only interprets the latched registers you pass in. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="617" column="5" bodyfile="src/block/ahci/error.c" bodystart="30" bodyend="74" declfile="include/ahci.h" declline="617" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a2e62ece5ea1ce15bfa0e845c57d65c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int scsi_map_sense_to_fs_error</definition>
        <argsstring>(scsi_sense_key_t sense_key, scsi_additional_sense_code_t additional_sense_code, scsi_additional_sense_code_qualifier_t additional_sense_code_qualifier)</argsstring>
        <name>scsi_map_sense_to_fs_error</name>
        <param>
          <type><ref refid="scsi_8h_1a9355b0372f49295777f09d38c721a1c2" kindref="member">scsi_sense_key_t</ref></type>
          <declname>sense_key</declname>
        </param>
        <param>
          <type><ref refid="scsi_8h_1ab5df6d96bbf6cf687849581e976419f6" kindref="member">scsi_additional_sense_code_t</ref></type>
          <declname>additional_sense_code</declname>
        </param>
        <param>
          <type><ref refid="scsi_8h_1a8545aad73b77f61eb65a7f61117eec51" kindref="member">scsi_additional_sense_code_qualifier_t</ref></type>
          <declname>additional_sense_code_qualifier</declname>
        </param>
        <briefdescription>
<para>Map SCSI/ATAPI sense (sense key, ASC, ASCQ) to a fixed fs_error_t. </para>
        </briefdescription>
        <detaileddescription>
<para>Map SCSI/ATAPI sense (SK/ASC/ASCQ) to fs_error_t with fixed message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sense_key</parametername>
</parameternamelist>
<parameterdescription>
<para>SCSI sense key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_sense_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional Sense Code (ASC). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_sense_code_qualifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional Sense Code Qualifier (ASCQ). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>fs_error_t value describing the failure class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="626" column="5" bodyfile="src/block/ahci/error.c" bodystart="76" bodyend="84" declfile="include/ahci.h" declline="626" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a67335ead3b50fc4e6a0dceac3a9a1fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool atapi_request_sense6</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar, uint8_t *out, uint8_t out_len)</argsstring>
        <name>atapi_request_sense6</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>out_len</declname>
        </param>
        <briefdescription>
<para>Issue ATAPI REQUEST SENSE (6) and copy sense data to the caller buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Issue ATAPI REQUEST SENSE (6) and copy sense data to &apos;out&apos;. Expects &apos;out_len&apos; &gt;= 18 for standard fixed-format sense. Returns true on success (command accepted and data DMA&apos;d), false on failure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory (ABAR) pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer for sense data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocation length requested (typically 18). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure to obtain sense data.</para>
</simplesect>
Issue ATAPI REQUEST SENSE (6) and copy sense data to the caller buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="636" column="6" bodyfile="src/block/ahci/sense.c" bodystart="11" bodyend="35" declfile="include/ahci.h" declline="636" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1af9292ade57de279bcb1e38aa3acfb06a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scsi_extract_fixed_sense</definition>
        <argsstring>(const uint8_t *buf, scsi_sense_key_t *sense_key, scsi_additional_sense_code_t *additional_sense_code, scsi_additional_sense_code_qualifier_t *additional_sense_code_qualifier)</argsstring>
        <name>scsi_extract_fixed_sense</name>
        <param>
          <type>const uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="scsi_8h_1a9355b0372f49295777f09d38c721a1c2" kindref="member">scsi_sense_key_t</ref> *</type>
          <declname>sense_key</declname>
        </param>
        <param>
          <type><ref refid="scsi_8h_1ab5df6d96bbf6cf687849581e976419f6" kindref="member">scsi_additional_sense_code_t</ref> *</type>
          <declname>additional_sense_code</declname>
        </param>
        <param>
          <type><ref refid="scsi_8h_1a8545aad73b77f61eb65a7f61117eec51" kindref="member">scsi_additional_sense_code_qualifier_t</ref> *</type>
          <declname>additional_sense_code_qualifier</declname>
        </param>
        <briefdescription>
<para>Extract sense key, ASC and ASCQ from a fixed-format (0x70/0x71) REQUEST SENSE buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Extract SK/ASC/ASCQ from a fixed-format (0x70/0x71) REQUEST SENSE buffer. Caller guarantees &apos;buf&apos; points to at least 14 bytes (we usually pass 18).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Sense buffer (&gt;= 14 bytes, typically 18). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sense_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: sense key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_sense_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: ASC. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_sense_code_qualifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: ASCQ. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="645" column="6" bodyfile="src/block/ahci/sense.c" bodystart="37" bodyend="41" declfile="include/ahci.h" declline="645" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1ae36ebeb081e7e447969e1ea00d1c68e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool atapi_handle_check_condition</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar, const char *function)</argsstring>
        <name>atapi_handle_check_condition</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Handle ATAPI CHECK CONDITION by issuing REQUEST SENSE, mapping to fs_error_t, logging a single line, and returning false. </para>
        </briefdescription>
        <detaileddescription>
<para>Convenience helper for ATAPI CHECK CONDITION paths. Issues REQUEST SENSE, extracts and maps sense, logs a single line, then returns false.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abar</parametername>
</parameternamelist>
<parameterdescription>
<para>AHCI HBA memory (ABAR) pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Short label used for diagnostics/logging. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Always false to simplify call-sites that branch on failure.</para>
</simplesect>
Always returns false so call-sites can simply: if (!atapi_handle_check_condition(...)) return false; If REQUEST SENSE itself fails, logs a generic timeout/hardware error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="654" column="6" bodyfile="src/block/ahci/error.c" bodystart="86" bodyend="107" declfile="include/ahci.h" declline="654" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1ad8403a4edeb593b93c11b04778257d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ahci_trim_one_range</definition>
        <argsstring>(ahci_hba_port_t *port, ahci_hba_mem_t *abar, const ahci_trim_caps *caps, uint64_t lba, uint32_t sectors)</argsstring>
        <name>ahci_trim_one_range</name>
        <param>
          <type><ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref> *</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="structahci__hba__mem__t" kindref="compound">ahci_hba_mem_t</ref> *</type>
          <declname>abar</declname>
        </param>
        <param>
          <type>const <ref refid="structahci__trim__caps" kindref="compound">ahci_trim_caps</ref> *</type>
          <declname>caps</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lba</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sectors</declname>
        </param>
        <briefdescription>
<para>Trim a single contiguous LBA range. No batching/merging of disjoint ranges. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true on success, or if TRIM unsupported (no-op); false on submission error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="694" column="6" bodyfile="src/block/ahci/trim.c" bodystart="27" bodyend="77" declfile="include/ahci.h" declline="694" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a80593b6ec5e0425e455a5c5b7e19ca3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structahci__trim__caps" kindref="compound">ahci_trim_caps</ref></type>
        <definition>ahci_trim_caps ahci_probe_trim_caps</definition>
        <argsstring>(const uint16_t *id_words)</argsstring>
        <name>ahci_probe_trim_caps</name>
        <param>
          <type>const uint16_t *</type>
          <declname>id_words</declname>
        </param>
        <briefdescription>
<para>Extract TRIM/DSM capability flags from IDENTIFY DEVICE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="696" column="16" bodyfile="src/block/ahci/trim.c" bodystart="6" bodyend="23" declfile="include/ahci.h" declline="696" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1aee2abbc6ba2189c0a6e7e4d0d8bfe627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool storage_device_ahci_block_clear</definition>
        <argsstring>(void *dev, uint64_t lba, uint32_t sectors)</argsstring>
        <name>storage_device_ahci_block_clear</name>
        <param>
          <type>void *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lba</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="698" column="6" bodyfile="src/block/ahci/storage_device.c" bodystart="54" bodyend="72" declfile="include/ahci.h" declline="698" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a2cd77a3bd6b05c603c9ceeb2d93f1393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_Static_assert</definition>
        <argsstring>(sizeof(ahci_hba_cmd_header_t)==0x20, &quot;cmd header size&quot;)</argsstring>
        <name>_Static_assert</name>
        <param>
          <type>sizeof(<ref refid="structahci__hba__cmd__header__t" kindref="compound">ahci_hba_cmd_header_t</ref>)</type>
          <defval>=0x20</defval>
        </param>
        <param>
          <type>&quot;cmd <ref refid="acpi_8h_1a89376b1a0d2080ce083befe8f35cd34d" kindref="member">header</ref> <ref refid="fat32_8h_1ab2c6b258f02add8fdf4cfc7c371dd772" kindref="member">size</ref>&quot;</type>
        </param>
        <briefdescription>
<para>Compile-time size check: command header must be 0x20 bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="703" column="1" declfile="include/ahci.h" declline="703" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a0796f5924e844b77e3140eb0069d5b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_Static_assert</definition>
        <argsstring>(offsetof(ahci_hba_port_t, command_issue)==0x38, &quot;CI offset&quot;)</argsstring>
        <name>_Static_assert</name>
        <param>
          <type>offsetof(<ref refid="structahci__hba__port__t" kindref="compound">ahci_hba_port_t</ref>, <ref refid="ahci_8h_1a6f885bc33993db056e0079136744ec7a" kindref="member">command_issue</ref>)</type>
          <defval>=0x38</defval>
        </param>
        <param>
          <type>&quot;CI offset&quot;</type>
        </param>
        <briefdescription>
<para>Compile-time offset check: PxCI must be at 0x38. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="705" column="1" declfile="include/ahci.h" declline="705" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="ahci_8h_1a8a928a31e73ff25f2475afb5061e488f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_Static_assert</definition>
        <argsstring>(offsetof(ahci_hba_fis_t, set_device_bit_fis)==0x58, &quot;SDB FIS offset&quot;)</argsstring>
        <name>_Static_assert</name>
        <param>
          <type>offsetof(<ref refid="structahci__hba__fis__t" kindref="compound">ahci_hba_fis_t</ref>, <ref refid="ahci_8h_1a0b28785ffe2082b5b6e6bde8c408601e" kindref="member">set_device_bit_fis</ref>)</type>
          <defval>=0x58</defval>
        </param>
        <param>
          <type>&quot;SDB FIS offset&quot;</type>
        </param>
        <briefdescription>
<para>Compile-time offset check: SDB FIS must be at 0x58 within received FIS area. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ahci.h" line="707" column="1" declfile="include/ahci.h" declline="707" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AHCI/SATA register and FIS definitions plus driver-facing prototypes. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Craig Edwards (<ulink url="mailto:craigedwards@brainbox.cc">craigedwards@brainbox.cc</ulink>) </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2012-2025</para>
</simplesect>
<simplesect kind="note"><para>Bitfield layout in these structs matches x86_64 GCC/Clang ABI and AHCI 1.3.x diagrams. Bitfield layout is implementation-defined by C; if porting to other ABIs/endianness, prefer explicit masking on byte arrays. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/ahci.h"/>
  </compounddef>
</doxygen>
