<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="DELETE" kind="page">
    <compoundname>DELETE</compoundname>
    <title>DELETE Keyword</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename=".basic"><codeline><highlight class="normal">DELETE<sp/>string-expression</highlight></codeline>
</programlisting></para>
<para>Deletes the specified <bold>file</bold> from the filesystem.</para>
<para><itemizedlist>
<listitem><para><computeroutput>string-expression</computeroutput> must evaluate to a <bold>filename or path</bold>.</para>
</listitem><listitem><para>Paths are <bold>case-insensitive</bold>.</para>
</listitem><listitem><para>Relative paths are resolved against the current directory (see <ref refid="CHDIR" kindref="compound">CHDIR</ref>).</para>
</listitem><listitem><para><computeroutput>.</computeroutput> and <computeroutput>..</computeroutput> are <bold>not supported</bold> in paths.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>This is a <bold>destructive</bold> operation (no undo). </para>
</simplesect>
<simplesect kind="note"><para>If the file does not exist, or cannot be removed (for example because it is currently <bold>open</bold>), </para>
</simplesect>
<simplesect kind="note"><para>a runtime error is raised (catchable with <ulink url="https://github.com/brainboxdotcc/retro-rocket/wiki/ONERROR"><computeroutput>ON ERROR</computeroutput></ulink>).</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>DELETE</computeroutput> removes <bold>files</bold> only. To remove a directory, use <ref refid="RMDIR" kindref="compound">RMDIR</ref>.</para>
</simplesect>
<hruler/>
</para>
<para><heading level="5">Example: simple delete</heading>
</para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">DELETE<sp/>&quot;old_config.txt&quot;</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
<para><heading level="5">Example: defensive delete (only if it’s a file)</heading>
</para>
<para><programlisting filename=".basic"><codeline><highlight class="normal">IF<sp/>FILETYPE$(&quot;backup.dat&quot;)<sp/>=<sp/>&quot;FILE&quot;<sp/>THEN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DELETE<sp/>&quot;backup.dat&quot;</highlight></codeline>
<codeline><highlight class="normal">ELSE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>PRINT<sp/>&quot;Not<sp/>a<sp/>file,<sp/>skipping.&quot;</highlight></codeline>
<codeline><highlight class="normal">ENDIF</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
<para><heading level="5">Notes</heading>
</para>
<para><itemizedlist>
<listitem><para>Ensure any open handles to the file are <bold>closed</bold> first with <ref refid="CLOSE" kindref="compound">CLOSE</ref>.</para>
</listitem><listitem><para>Wildcards are not supported; delete files <bold>one at a time</bold>.</para>
</listitem><listitem><para>Deleting a non-existent file raises an error.</para>
</listitem></itemizedlist>
</para>
<para><bold>See also:</bold> <linebreak/>
 <ref refid="OPENIN" kindref="compound">OPENIN</ref> · <ref refid="OPENOUT" kindref="compound">OPENOUT</ref> · <ref refid="OPENUP" kindref="compound">OPENUP</ref> · <ref refid="CLOSE" kindref="compound">CLOSE</ref> · <ref refid="RMDIR" kindref="compound">RMDIR</ref> · <ref refid="CHDIR" kindref="compound">CHDIR</ref> · <ref refid="FILETYPE" kindref="compound">FILETYPE$</ref> </para>
    </detaileddescription>
    <location file="docpages/basic-language-reference/keywords/DELETE.md"/>
  </compounddef>
</doxygen>
