<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="SOCKACCEPT" kind="page">
    <compoundname>SOCKACCEPT</compoundname>
    <title>SOCKACCEPT Function</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename=".basic"><codeline><highlight class="normal">client<sp/>=<sp/>SOCKACCEPT(server)</highlight></codeline>
</programlisting></para>
<para>Removes and returns the next <bold>established</bold> connection from the listening socket’s pending queue. Returns a non-negative file descriptor on success, or <computeroutput>-1</computeroutput> if no connection is ready (or on error).</para>
<para><simplesect kind="note"><para><computeroutput>SOCKACCEPT</computeroutput> is <bold>non-blocking</bold>: it returns immediately. If there are no connections to accept, it will return <computeroutput>-1</computeroutput>.</para>
</simplesect>
<hruler/>
</para>
<sect1 id="SOCKACCEPT_1how-to-use-it_1s1"><sect2 id="SOCKACCEPT_1how-to-use-it_1s2"><sect3 id="SOCKACCEPT_1how-to-use-it">
<title>How to use it</title><para><itemizedlist>
<listitem><para><computeroutput>server</computeroutput> is the file descriptor returned by <computeroutput>SOCKLISTEN(ip$, port, backlog)</computeroutput>.</para>
</listitem><listitem><para>Call repeatedly in your main loop to accept clients as they become ready.</para>
</listitem><listitem><para>Use the returned <computeroutput>client</computeroutput> descriptor with <computeroutput>SOCKWRITE</computeroutput>, <computeroutput>SOCKREAD</computeroutput>, <computeroutput>INSOCKET$</computeroutput>, and <computeroutput>SOCKCLOSE</computeroutput>.</para>
</listitem><listitem><para>The pending queue is FIFO; only the head is checked each call.</para>
</listitem></itemizedlist>
</para>
<para><hruler/>
</para>
</sect3></sect2></sect1>
<sect1 id="SOCKACCEPT_1examples-64_1s1"><sect2 id="SOCKACCEPT_1examples-64_1s2"><sect3 id="SOCKACCEPT_1examples-64">
<title>Examples</title><para><programlisting filename=".basic"><codeline><highlight class="normal">REM<sp/>Minimal<sp/>accept<sp/>loop</highlight></codeline>
<codeline><highlight class="normal">server<sp/>=<sp/>SOCKLISTEN(NETINFO$(&quot;ip&quot;),<sp/>2000,<sp/>5)</highlight></codeline>
<codeline><highlight class="normal">IF<sp/>server<sp/>&lt;<sp/>0<sp/>THEN<sp/>PRINT<sp/>&quot;Listen<sp/>failed&quot;:<sp/>END</highlight></codeline>
<codeline><highlight class="normal">PRINT<sp/>&quot;Listening<sp/>on<sp/>port<sp/>2000&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">REPEAT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>client<sp/>=<sp/>SOCKACCEPT(server)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IF<sp/>client<sp/>&gt;=<sp/>0<sp/>THEN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOCKWRITE<sp/>client,<sp/>&quot;HELLO!&quot;<sp/>+<sp/>CHR$(13)<sp/>+<sp/>CHR$(10)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOCKCLOSE<sp/>client</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>END<sp/>IF</highlight></codeline>
<codeline><highlight class="normal">UNTIL<sp/>INKEY$<sp/>&lt;&gt;<sp/>&quot;&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">SOCKCLOSE<sp/>server</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
</sect3></sect2></sect1>
<sect1 id="SOCKACCEPT_1notes-63_1s1"><sect2 id="SOCKACCEPT_1notes-63_1s2"><sect3 id="SOCKACCEPT_1notes-63">
<title>Notes</title><para><itemizedlist>
<listitem><para>Returns <computeroutput>-1</computeroutput> when no established connection is available; try again later.</para>
</listitem><listitem><para>Each successful call returns a <bold>new</bold> client descriptor; the server remains listening.</para>
</listitem></itemizedlist>
</para>
<para><bold>See also:</bold> <ref refid="SOCKLISTEN" kindref="compound">SOCKLISTEN</ref> · <ref refid="SOCKWRITE" kindref="compound">SOCKWRITE</ref> · <ref refid="SOCKREAD" kindref="compound">SOCKREAD</ref> · <ref refid="INSOCKET" kindref="compound">INSOCKET$ Function</ref>$ &quot;INSOCKET\$&quot; · <ref refid="SOCKSTATUS" kindref="compound">SOCKSTATUS</ref> · <ref refid="SOCKCLOSE" kindref="compound">SOCKCLOSE</ref> · <ref refid="NETINFO" kindref="compound">NETINFO$ Function</ref>$ &quot;NETINFO\$&quot; </para>
</sect3></sect2></sect1>
    </detaileddescription>
    <location file="docpages/basic-language-reference/functions/integer/SOCKACCEPT.md"/>
  </compounddef>
</doxygen>
