<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hashmap_8h" kind="file" language="C++">
    <compoundname>hashmap.h</compoundname>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="kernel_8h" local="yes">kernel.h</includedby>
    <includedby refid="hashmap_8c" local="yes">hashmap.c</includedby>
    <includedby refid="devicename_8c" local="no">devicename.c</includedby>
    <incdepgraph>
      <node id="56">
        <label>ata.h</label>
        <link refid="ata_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="21">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>stdarg.h</label>
      </node>
      <node id="59">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdatomic.h</label>
      </node>
      <node id="28">
        <label>basic/validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>basic/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>basic/structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>stdnoreturn.h</label>
      </node>
      <node id="26">
        <label>buddy_allocator.h</label>
        <link refid="buddy__allocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rwlock.h</label>
        <link refid="rwlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <link refid="idt_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="83">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>x86intrin.h</label>
      </node>
      <node id="46">
        <label>ioapic.h</label>
        <link refid="ioapic_8h"/>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="89">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>basic/array.h</label>
        <link refid="array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>basic/flow_control.h</label>
        <link refid="flow__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="65">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="15">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>basic/builtin_real_functions.h</label>
        <link refid="builtin__real__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="67">
        <label>input.h</label>
        <link refid="input_8h"/>
      </node>
      <node id="84">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>video.h</label>
        <link refid="video_8h"/>
      </node>
      <node id="86">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>basic/sockets.h</label>
        <link refid="sockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>basic/defines.h</label>
        <link refid="defines_8h"/>
      </node>
      <node id="16">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>basic/builtin_integer_functions.h</label>
        <link refid="builtin__integer__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>filesystem.h</label>
        <link refid="filesystem_8h"/>
      </node>
      <node id="50">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>basic/expression.h</label>
        <link refid="expression_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>errorhandler.h</label>
        <link refid="errorhandler_8h"/>
      </node>
      <node id="31">
        <label>basic/builtin_string_functions.h</label>
        <link refid="builtin__string__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>basic/console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>basic/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>debugger.h</label>
        <link refid="debugger_8h"/>
      </node>
      <node id="32">
        <label>basic/builtin_file_io_functions.h</label>
        <link refid="builtin__file__io__functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>scsi.h</label>
        <link refid="scsi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>basic/lowlevel.h</label>
        <link refid="lowlevel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>apic.h</label>
        <link refid="apic_8h"/>
      </node>
      <node id="20">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>basic/process.h</label>
        <link refid="process_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>basic/datetime.h</label>
        <link refid="datetime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="152">
        <label>memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="14">
        <label>console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="100">
        <label>reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="139">
        <label>main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="135">
        <label>createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="69">
        <label>helpers.c</label>
        <link refid="fs_2retrofs_2helpers_8c"/>
      </node>
      <node id="7">
        <label>basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="12">
        <label>context.h</label>
        <link refid="context_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="61">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="21">
        <label>filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="111">
        <label>main.c</label>
        <link refid="block_2ahci_2main_8c"/>
      </node>
      <node id="105">
        <label>variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="74">
        <label>unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="41">
        <label>helpers.c</label>
        <link refid="installer_2helpers_8c"/>
      </node>
      <node id="3">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="5">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="6">
        <label>peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="84">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="93">
        <label>function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="48">
        <label>iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="162">
        <label>queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="26">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>block_cache.h</label>
        <link refid="block__cache_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>main.c</label>
        <link refid="installer_2main_8c"/>
      </node>
      <node id="67">
        <label>fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="29">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="66">
        <label>format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="168">
        <label>stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="38">
        <label>installer.h</label>
        <link refid="installer_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="97">
        <label>maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="159">
        <label>icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="117">
        <label>ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="118">
        <label>buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="76">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="9">
        <label>tui.c</label>
        <link refid="tui_8c"/>
      </node>
      <node id="149">
        <label>keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="153">
        <label>module_loader.c</label>
        <link refid="module__loader_8c"/>
      </node>
      <node id="91">
        <label>debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="65">
        <label>createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="92">
        <label>file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="72">
        <label>truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="122">
        <label>debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="133">
        <label>devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="132">
        <label>debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="156">
        <label>descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="101">
        <label>sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="172">
        <label>video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="56">
        <label>module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="85">
        <label>acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="40">
        <label>gpt_writer.c</label>
        <link refid="gpt__writer_8c"/>
      </node>
      <node id="94">
        <label>graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="114">
        <label>storage_device.c</label>
        <link refid="storage__device_8c"/>
      </node>
      <node id="151">
        <label>maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="70">
        <label>main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="54">
        <label>e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="123">
        <label>debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="15">
        <label>double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="171">
        <label>timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="113">
        <label>sense.c</label>
        <link refid="sense_8c"/>
      </node>
      <node id="23">
        <label>cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="165">
        <label>pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="98">
        <label>peekpoke.c</label>
        <link refid="peekpoke_8c"/>
      </node>
      <node id="17">
        <label>int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="108">
        <label>enquiry.c</label>
        <link refid="enquiry_8c"/>
      </node>
      <node id="60">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="89">
        <label>array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="116">
        <label>write.c</label>
        <link refid="write_8c"/>
      </node>
      <node id="35">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="33">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="78">
        <label>serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="77">
        <label>serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="128">
        <label>fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="102">
        <label>statement.c</label>
        <link refid="statement_8c"/>
      </node>
      <node id="148">
        <label>ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="34">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="145">
        <label>gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="19">
        <label>unified_expression.c</label>
        <link refid="unified__expression_8c"/>
      </node>
      <node id="55">
        <label>mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="157">
        <label>dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="53">
        <label>mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>vector.c</label>
        <link refid="vector_8c"/>
      </node>
      <node id="95">
        <label>lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="88">
        <label>ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="131">
        <label>block_cache.c</label>
        <link refid="block__cache_8c"/>
      </node>
      <node id="68">
        <label>getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="18">
        <label>string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="83">
        <label>tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="107">
        <label>eject.c</label>
        <link refid="eject_8c"/>
      </node>
      <node id="90">
        <label>datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="167">
        <label>rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="16">
        <label>flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="51">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="43">
        <label>os_detection.c</label>
        <link refid="os__detection_8c"/>
      </node>
      <node id="36">
        <label>init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="106">
        <label>description.c</label>
        <link refid="description_8c"/>
      </node>
      <node id="81">
        <label>tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="163">
        <label>tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="112">
        <label>read.c</label>
        <link refid="read_8c"/>
      </node>
      <node id="64">
        <label>createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="39">
        <label>crc32.c</label>
        <link refid="crc32_8c"/>
      </node>
      <node id="164">
        <label>udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="137">
        <label>fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="31">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="52">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>error.c</label>
        <link refid="error_8c"/>
      </node>
      <node id="119">
        <label>clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="24">
        <label>debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="124">
        <label>devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="144">
        <label>partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="79">
        <label>taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="99">
        <label>process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="103">
        <label>string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="1">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="136">
        <label>directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="140">
        <label>readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="110">
        <label>identify.c</label>
        <link refid="identify_8c"/>
      </node>
      <node id="45">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="141">
        <label>truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="158">
        <label>dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="115">
        <label>trim.c</label>
        <link refid="trim_8c"/>
      </node>
      <node id="11">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="120">
        <label>map.c</label>
        <link refid="map_8c"/>
      </node>
      <node id="59">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="27">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="150">
        <label>lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="13">
        <label>unified_expression.h</label>
        <link refid="unified__expression_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>recursive_file_copy.c</label>
        <link refid="recursive__file__copy_8c"/>
      </node>
      <node id="125">
        <label>drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="63">
        <label>retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="71">
        <label>readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hashmap_8h_1a84e1541ebaae44d640953da111175724" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* hashmap_allocator) (size_t size, void *udata)</definition>
        <argsstring>)(size_t size, void *udata)</argsstring>
        <name>hashmap_allocator</name>
        <briefdescription>
<para>Allocate a new block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes requested. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer supplied at map construction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated block, or NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="32" column="9" bodyfile="include/hashmap.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashmap_8h_1a9b9407668f00cfe5fa9bb02ddd2efb7d" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* hashmap_reallocator) (void *ptr, size_t size, void *udata)</definition>
        <argsstring>)(void *ptr, size_t size, void *udata)</argsstring>
        <name>hashmap_reallocator</name>
        <briefdescription>
<para>Resize an existing block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Existing allocation (or NULL to behave like malloc). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>New size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer supplied at map construction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to (possibly moved) block, or NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="41" column="9" bodyfile="include/hashmap.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashmap_8h_1a597bd7a56022ec65170922921947a3b6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* hashmap_releaser) (const void *ptr, void *udata)</definition>
        <argsstring>)(const void *ptr, void *udata)</argsstring>
        <name>hashmap_releaser</name>
        <briefdescription>
<para>Release an allocated block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Block to free (may be NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer supplied at map construction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="48" column="9" bodyfile="include/hashmap.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashmap_8h_1ad4b6740ff6182ab764172ec817958b15" prot="public" static="no">
        <type>uint64_t(*</type>
        <definition>typedef uint64_t(* hashmap_hash_fn) (const void *item, uint64_t seed0, uint64_t seed1)</definition>
        <argsstring>)(const void *item, uint64_t seed0, uint64_t seed1)</argsstring>
        <name>hashmap_hash_fn</name>
        <briefdescription>
<para>Hash an item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to key/item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed0</parametername>
</parameternamelist>
<parameterdescription>
<para>First 64-bit seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second 64-bit seed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64-bit hash value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="57" column="9" bodyfile="include/hashmap.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashmap_8h_1ae5bfaacdf57aaec6f8e95b9375af85c3" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* hashmap_compare_fn) (const void *a, const void *b, void *udata)</definition>
        <argsstring>)(const void *a, const void *b, void *udata)</argsstring>
        <name>hashmap_compare_fn</name>
        <briefdescription>
<para>Compare two items. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer supplied at map construction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 if a&lt;b, 0 if equal, &gt;0 if a&gt;b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="66" column="9" bodyfile="include/hashmap.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashmap_8h_1a37ed308a890839d65354aaabbd81e151" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* hashmap_elfree_fn) (const void *item, void *udata)</definition>
        <argsstring>)(const void *item, void *udata)</argsstring>
        <name>hashmap_elfree_fn</name>
        <briefdescription>
<para>Optional element destructor for items stored by value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Element to dispose.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Note: This is only for element-internal resources. The map storage itself is freed by the map’s allocator callbacks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="75" column="9" bodyfile="include/hashmap.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashmap_8h_1a5dd0027590908524e2b8812f1d2e6ba9" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* hashmap_iter_fn) (const void *item, void *udata)</definition>
        <argsstring>)(const void *item, void *udata)</argsstring>
        <name>hashmap_iter_fn</name>
        <briefdescription>
<para>Iterator callback for scanning all items. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Current element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data pointer supplied at call site. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true to continue, false to stop. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="83" column="9" bodyfile="include/hashmap.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hashmap_8h_1ae6a663c261ae740a81f069e0eff30b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
        <definition>struct hashmap* hashmap_new</definition>
        <argsstring>(size_t elsize, size_t cap, uint64_t seed0, uint64_t seed1, hashmap_hash_fn hash, hashmap_compare_fn compare, hashmap_elfree_fn elfree, void *udata)</argsstring>
        <name>hashmap_new</name>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cap</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1ad4b6740ff6182ab764172ec817958b15" kindref="member">hashmap_hash_fn</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1ae5bfaacdf57aaec6f8e95b9375af85c3" kindref="member">hashmap_compare_fn</ref></type>
          <declname>compare</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1a37ed308a890839d65354aaabbd81e151" kindref="member">hashmap_elfree_fn</ref></type>
          <declname>elfree</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>udata</declname>
        </param>
        <briefdescription>
<para>Create a new hashmap with standard kernel allocators. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of each element stored by the map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cap</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial capacity hint (0 defaults to 16). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed0</parametername>
</parameternamelist>
<parameterdescription>
<para>First 64-bit hash seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second 64-bit hash seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash function for items. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>Comparison function for items. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elfree</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional element destructor (may be NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data passed to <computeroutput>compare</computeroutput> (and may be used internally). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle to a new hashmap, or NULL on OOM. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="103" column="14" bodyfile="src/containers/hashmap.c" bodystart="122" bodyend="124" declfile="include/hashmap.h" declline="103" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a435d0e27a2f744753cd3694cd7546489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
        <definition>struct hashmap* hashmap_new_with_allocator</definition>
        <argsstring>(hashmap_allocator _malloc, hashmap_reallocator _realloc, hashmap_releaser _free, size_t elsize, size_t cap, uint64_t seed0, uint64_t seed1, hashmap_hash_fn hash, hashmap_compare_fn compare, hashmap_elfree_fn elfree, void *udata)</argsstring>
        <name>hashmap_new_with_allocator</name>
        <param>
          <type><ref refid="hashmap_8h_1a84e1541ebaae44d640953da111175724" kindref="member">hashmap_allocator</ref></type>
          <declname>_malloc</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1a9b9407668f00cfe5fa9bb02ddd2efb7d" kindref="member">hashmap_reallocator</ref></type>
          <declname>_realloc</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1a597bd7a56022ec65170922921947a3b6" kindref="member">hashmap_releaser</ref></type>
          <declname>_free</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cap</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1ad4b6740ff6182ab764172ec817958b15" kindref="member">hashmap_hash_fn</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1ae5bfaacdf57aaec6f8e95b9375af85c3" kindref="member">hashmap_compare_fn</ref></type>
          <declname>compare</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1a37ed308a890839d65354aaabbd81e151" kindref="member">hashmap_elfree_fn</ref></type>
          <declname>elfree</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>udata</declname>
        </param>
        <briefdescription>
<para>Create a new hashmap with custom allocators. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_malloc</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator callback (required). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_realloc</parametername>
</parameternamelist>
<parameterdescription>
<para>Reallocator callback (required). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_free</parametername>
</parameternamelist>
<parameterdescription>
<para>Releaser callback (required). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of each element stored by the map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cap</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial capacity hint (0 defaults to 16). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed0</parametername>
</parameternamelist>
<parameterdescription>
<para>First 64-bit hash seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second 64-bit hash seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash function for items. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>Comparison function for items. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elfree</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional element destructor (may be NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data passed to allocator callbacks and <computeroutput>compare</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle to a new hashmap, or NULL on OOM. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="121" column="14" bodyfile="src/containers/hashmap.c" bodystart="70" bodyend="120" declfile="include/hashmap.h" declline="121" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a97ab64db6070065a0e8b5afc23793342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashmap_free</definition>
        <argsstring>(struct hashmap *map)</argsstring>
        <name>hashmap_free</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Free a hashmap and its storage. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput>elfree</computeroutput> for each element if provided, then releases internal buffers via the map’s allocator callbacks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="131" column="6" bodyfile="src/containers/hashmap.c" bodystart="305" bodyend="312" declfile="include/hashmap.h" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1ab09b4f126a08c1e716bac424b1927f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashmap_clear</definition>
        <argsstring>(struct hashmap *map, bool update_cap)</argsstring>
        <name>hashmap_clear</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>update_cap</declname>
        </param>
        <briefdescription>
<para>Clear all items from the map. </para>
        </briefdescription>
        <detaileddescription>
<para>Each element is passed to <computeroutput>elfree</computeroutput> (if provided). If <computeroutput>update_cap</computeroutput> is true, internal capacity is trimmed to the current number of buckets to avoid new allocations on the clear.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_cap</parametername>
</parameternamelist>
<parameterdescription>
<para>When true, shrink capacity to current bucket count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="143" column="6" bodyfile="src/containers/hashmap.c" bodystart="135" bodyend="152" declfile="include/hashmap.h" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1acf2d7645190129fb4880ba452c6436ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashmap_count</definition>
        <argsstring>(struct hashmap *map)</argsstring>
        <name>hashmap_count</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get the number of stored items. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Item count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="150" column="8" bodyfile="src/containers/hashmap.c" bodystart="301" bodyend="303" declfile="include/hashmap.h" declline="150" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1ad07477cf9562c5c78b5dcde3ccf8aced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashmap_oom</definition>
        <argsstring>(struct hashmap *map)</argsstring>
        <name>hashmap_oom</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Test whether the previous <computeroutput>hashmap_set</computeroutput> failed due to OOM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the last set operation ran out of memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="157" column="6" bodyfile="src/containers/hashmap.c" bodystart="314" bodyend="316" declfile="include/hashmap.h" declline="157" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a85a95e15442ce2e8101d4306119ca62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_get</definition>
        <argsstring>(struct hashmap *map, const void *item)</argsstring>
        <name>hashmap_get</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Look up an item by key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to stored item, or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="165" column="6" bodyfile="src/containers/hashmap.c" bodystart="233" bodyend="250" declfile="include/hashmap.h" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a3f0cd71606aace704e5381aa88f5bf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_set</definition>
        <argsstring>(struct hashmap *map, const void *item)</argsstring>
        <name>hashmap_set</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Insert or replace an item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Item to insert (by value). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the replaced item if it existed, otherwise NULL.</para>
</simplesect>
On allocation failure returns NULL and sets the sticky OOM flag (see <computeroutput>hashmap_oom</computeroutput>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="176" column="6" bodyfile="src/containers/hashmap.c" bodystart="192" bodyend="231" declfile="include/hashmap.h" declline="176" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a996e7ad281b47f679925c5b32b5613b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_delete</definition>
        <argsstring>(struct hashmap *map, void *item)</argsstring>
        <name>hashmap_delete</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Remove an item by key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the removed item, or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="184" column="6" bodyfile="src/containers/hashmap.c" bodystart="261" bodyend="298" declfile="include/hashmap.h" declline="184" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1aad3c9111f88493b810d832bb2e61b523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_probe</definition>
        <argsstring>(struct hashmap *map, uint64_t position)</argsstring>
        <name>hashmap_probe</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Probe a raw bucket position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Bucket index (will be reduced modulo bucket count). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to stored item at that bucket, or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="192" column="6" bodyfile="src/containers/hashmap.c" bodystart="252" bodyend="259" declfile="include/hashmap.h" declline="192" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a4008679515a2c5238c44d519e73fc403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashmap_scan</definition>
        <argsstring>(struct hashmap *map, hashmap_iter_fn iter, void *udata)</argsstring>
        <name>hashmap_scan</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="hashmap_8h_1a5dd0027590908524e2b8812f1d2e6ba9" kindref="member">hashmap_iter_fn</ref></type>
          <declname>iter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>udata</declname>
        </param>
        <briefdescription>
<para>Iterate over every item in the map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback invoked for each item; return false to stop early. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udata</parametername>
</parameternamelist>
<parameterdescription>
<para>User data passed to <computeroutput>iter</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if iteration was stopped early, true otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="201" column="6" bodyfile="src/containers/hashmap.c" bodystart="318" bodyend="328" declfile="include/hashmap.h" declline="201" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1abc4cede290fdcdc96168de2c86373882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashmap_iter</definition>
        <argsstring>(struct hashmap *map, size_t *i, void **item)</argsstring>
        <name>hashmap_iter</name>
        <param>
          <type>struct <ref refid="structhashmap" kindref="compound">hashmap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Cursor-based iterator over items. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Hashmap handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Cursor (initialise to 0; updated on each call). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Out: pointer to the current stored item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if an item was produced; false if iteration is complete.</para>
</simplesect>
Note: If <computeroutput>hashmap_delete</computeroutput> is called during iteration, the bucket layout may change. Reset the cursor to 0 to restart iteration safely. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="213" column="6" bodyfile="src/containers/hashmap.c" bodystart="330" bodyend="343" declfile="include/hashmap.h" declline="213" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a9a8e35929f3fa17f10b93594e89e98ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hashmap_sip</definition>
        <argsstring>(const void *data, size_t len, uint64_t seed0, uint64_t seed1)</argsstring>
        <name>hashmap_sip</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <briefdescription>
<para>SipHash-2-4. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed0</parametername>
</parameternamelist>
<parameterdescription>
<para>First 64-bit seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second 64-bit seed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64-bit hash value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="223" column="10" bodyfile="src/containers/hashmap.c" bodystart="590" bodyend="592" declfile="include/hashmap.h" declline="223" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a0ad2116023e2861efbaeeb332e2bef24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hashmap_murmur</definition>
        <argsstring>(const void *data, size_t len, uint64_t seed0, uint64_t seed1)</argsstring>
        <name>hashmap_murmur</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <briefdescription>
<para>Murmur3_86_128 (folded to 64 bits). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed0</parametername>
</parameternamelist>
<parameterdescription>
<para>First 64-bit seed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second 64-bit seed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64-bit hash value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="233" column="10" declfile="include/hashmap.h" declline="233" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Open-addressed hashmap (Robin Hood), with allocator udata support. </para>
    </briefdescription>
    <detaileddescription>
<para>Updated by Craig Edwards, September 2025, to allow <computeroutput>udata</computeroutput> to be passed to the allocator functions. This enables contextual/arena allocators (e.g., per BASIC interpreter context) without altering external call sites.</para>
<para>Based on tidwall hashmap, copyright 2020 Joshua J Baker. All rights reserved. Use of this source code is governed by an MIT-style licence that can be found in the LICENSE file. <ulink url="https://github.com/tidwall/hashmap.c">https://github.com/tidwall/hashmap.c</ulink> </para>
    </detaileddescription>
    <location file="include/hashmap.h"/>
  </compounddef>
</doxygen>
