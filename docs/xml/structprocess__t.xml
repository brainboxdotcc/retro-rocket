<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structprocess__t" kind="struct" language="C++" prot="public">
    <compoundname>process_t</compoundname>
    <includes local="no">taskswitch.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structprocess__t_1a0cea0ed21d2f6ed41a5c99b947041eea" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1a7a26cb7f5678736cec66712d6df1d4ed" kindref="member">pid_t</ref></type>
        <definition>pid_t process_t::pid</definition>
        <argsstring></argsstring>
        <name>pid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unique process ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="66" column="6" bodyfile="include/taskswitch.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a5bec0e4d8de103748bb6cba6ff37291a" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1a7a26cb7f5678736cec66712d6df1d4ed" kindref="member">pid_t</ref></type>
        <definition>pid_t process_t::ppid</definition>
        <argsstring></argsstring>
        <name>ppid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent process ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="67" column="6" bodyfile="include/taskswitch.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a5ca3ea3c45957d39b8993fedc08692b2" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1af2306308627701b66dc6f3babe821ab4" kindref="member">uid_t</ref></type>
        <definition>uid_t process_t::uid</definition>
        <argsstring></argsstring>
        <name>uid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User ID (future use) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="68" column="6" bodyfile="include/taskswitch.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a07aef83877679df4398fa641ff557519" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1aa7352f1065fe606194d792e2b292cf83" kindref="member">gid_t</ref></type>
        <definition>gid_t process_t::gid</definition>
        <argsstring></argsstring>
        <name>gid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Group ID (future use) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="69" column="6" bodyfile="include/taskswitch.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a40e84a87e647e4e0f10f32668c8ed3ab" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1ab97efa0d1c4aeaf55ff756bf16685854" kindref="member">process_state_t</ref></type>
        <definition>process_state_t process_t::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Running state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="70" column="16" bodyfile="include/taskswitch.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a4ecc4cac7db5cdf92547364b666dcd9c" prot="public" static="no" mutable="no">
        <type><ref refid="clock_8h_1a7f5991675a84025dc7c24754a9b257c0" kindref="member">time_t</ref></type>
        <definition>time_t process_t::start_time</definition>
        <argsstring></argsstring>
        <name>start_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start time (UNIX epoch) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="71" column="7" bodyfile="include/taskswitch.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1ade947bc49b3c970c9b6fe15da2f12f9b" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1a7a26cb7f5678736cec66712d6df1d4ed" kindref="member">pid_t</ref></type>
        <definition>pid_t process_t::waitpid</definition>
        <argsstring></argsstring>
        <name>waitpid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PID being waited on </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="72" column="6" bodyfile="include/taskswitch.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a9efd67622874d1d026fb44b259569ac9" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1a66e2436dbfe8b3600c090f28627b621f" kindref="member">cpu_id_t</ref></type>
        <definition>cpu_id_t process_t::cpu</definition>
        <argsstring></argsstring>
        <name>cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logical CPU this process is assigned to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="73" column="9" bodyfile="include/taskswitch.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a03df500e6a022a5c1f061c8af547476e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* process_t::directory</definition>
        <argsstring></argsstring>
        <name>directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directory of program </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="74" column="11" bodyfile="include/taskswitch.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a39b862a83f8dc13357cfd8cdc8f64a9d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* process_t::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filename of program </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="75" column="11" bodyfile="include/taskswitch.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1afb5ad7c637ed36d339e8e9a1027e9aff" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t process_t::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of program in bytes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="76" column="9" bodyfile="include/taskswitch.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a9b3ddad1d78a30249998440a837922b3" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* process_t::csd</definition>
        <argsstring></argsstring>
        <name>csd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current selected directory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="77" column="11" bodyfile="include/taskswitch.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a80a803afc53644e36db504d3dc22b3f4" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structconsole" kindref="compound">console</ref> *</type>
        <definition>struct console* process_t::cons</definition>
        <argsstring></argsstring>
        <name>cons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associated console </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="78" column="14" bodyfile="include/taskswitch.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1aac89744257f50e77369d583e70974822" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structbasic__ctx" kindref="compound">basic_ctx</ref> *</type>
        <definition>struct basic_ctx* process_t::code</definition>
        <argsstring></argsstring>
        <name>code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BASIC interpreter context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="79" column="16" bodyfile="include/taskswitch.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a319121e790b8160ed34c39eba2befe06" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>struct process_t* process_t::prev</definition>
        <argsstring></argsstring>
        <name>prev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Previous process in doubly linked list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="80" column="16" bodyfile="include/taskswitch.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1a35426bef9435a3bc4399ee832dab5cf2" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structprocess__t" kindref="compound">process_t</ref> *</type>
        <definition>struct process_t* process_t::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Next process in doubly linked list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="81" column="16" bodyfile="include/taskswitch.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1ac5c17010c97fc19cead0529f1bc3a380" prot="public" static="no" mutable="no">
        <type><ref refid="taskswitch_8h_1adfca8568dd4c246f6a2cb5c23dc34052" kindref="member">activity_callback_t</ref></type>
        <definition>activity_callback_t process_t::check_idle</definition>
        <argsstring></argsstring>
        <name>check_idle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If non-null, called to check if the process should remain idle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="82" column="20" bodyfile="include/taskswitch.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structprocess__t_1aa1c947b3c296d37a2290e44c96d68e7c" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* process_t::idle_context</definition>
        <argsstring></argsstring>
        <name>idle_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque context passed to the check_idle callback </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/taskswitch.h" line="83" column="5" bodyfile="include/taskswitch.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a process in the system. </para>
    </briefdescription>
    <detaileddescription>
<para>Each process has its own PID, optional parent PID, execution state, associated console, and BASIC execution context. Processes are linked in a global doubly-linked list for scheduling. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>size_t</label>
      </node>
      <node id="35">
        <label>ub_param</label>
        <link refid="structub__param"/>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>void *</label>
      </node>
      <node id="17">
        <label>ub_var_double_array</label>
        <link refid="structub__var__double__array"/>
        <childnode refid="17" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>values</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>itemcount</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>varname</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>buddy_region_t</label>
        <link refid="structbuddy__region__t"/>
        <childnode refid="12" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>max_order</edgelabel>
          <edgelabel>min_order</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>free_lists</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>pool</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>struct buddy_region *</label>
      </node>
      <node id="27">
        <label>void *(*)(size_t)</label>
      </node>
      <node id="2">
        <label>process_state_t</label>
      </node>
      <node id="22">
        <label>hashmap</label>
        <link refid="structhashmap"/>
        <childnode refid="3" relation="usage">
          <edgelabel>hash</edgelabel>
          <edgelabel>seed0</edgelabel>
          <edgelabel>seed1</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>elfree</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bucketsz</edgelabel>
          <edgelabel>cap</edgelabel>
          <edgelabel>count</edgelabel>
          <edgelabel>elsize</edgelabel>
          <edgelabel>growat</edgelabel>
          <edgelabel>mask</edgelabel>
          <edgelabel>nbuckets</edgelabel>
          <edgelabel>shrinkat</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>compare</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>oom</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>realloc</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>buckets</edgelabel>
          <edgelabel>edata</edgelabel>
          <edgelabel>spare</edgelabel>
          <edgelabel>udata</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>free</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>malloc</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>int32_t</label>
      </node>
      <node id="10">
        <label>buddy_allocator_t</label>
        <link refid="structbuddy__allocator__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>active_region</edgelabel>
          <edgelabel>regions</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>current_bytes</edgelabel>
          <edgelabel>peak_bytes</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>grow_order</edgelabel>
          <edgelabel>max_order</edgelabel>
          <edgelabel>min_order</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>uint64_t</label>
      </node>
      <node id="15">
        <label>struct buddy_header *</label>
      </node>
      <node id="14">
        <label>buddy_header_t</label>
        <link refid="structbuddy__header__t"/>
        <childnode refid="12" relation="usage">
          <edgelabel>region</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>order</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>sprite_t</label>
        <link refid="structsprite__t"/>
        <childnode refid="32" relation="usage">
          <edgelabel>height</edgelabel>
          <edgelabel>pixels</edgelabel>
          <edgelabel>width</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>process_t</label>
        <link refid="structprocess__t"/>
        <childnode refid="1" relation="usage">
          <edgelabel>next</edgelabel>
          <edgelabel>prev</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>csd</edgelabel>
          <edgelabel>directory</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>cons</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>start_time</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>code</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>gid</edgelabel>
          <edgelabel>pid</edgelabel>
          <edgelabel>ppid</edgelabel>
          <edgelabel>uid</edgelabel>
          <edgelabel>waitpid</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>check_idle</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>cpu</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>idle_context</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>ub_var_double</label>
        <link refid="structub__var__double"/>
        <childnode refid="18" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>varname</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>name_length</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>global</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>cpuid_result_t</label>
        <link refid="structcpuid__result__t"/>
        <childnode refid="13" relation="usage">
          <edgelabel>eax</edgelabel>
          <edgelabel>ebx</edgelabel>
          <edgelabel>ecx</edgelabel>
          <edgelabel>edx</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>ub_fn_type</label>
      </node>
      <node id="24">
        <label>void *(*)(void *, size_t)</label>
      </node>
      <node id="19">
        <label>ub_var_string_array</label>
        <link refid="structub__var__string__array"/>
        <childnode refid="19" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>itemcount</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>values</edgelabel>
          <edgelabel>varname</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>ub_var_int</label>
        <link refid="structub__var__int"/>
        <childnode refid="20" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>varname</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>name_length</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>global</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>ub_var_int_array</label>
        <link refid="structub__var__int__array"/>
        <childnode refid="3" relation="usage">
          <edgelabel>itemcount</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>varname</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>values</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>int</label>
      </node>
      <node id="18">
        <label>double</label>
      </node>
      <node id="32">
        <label>uint32_t</label>
      </node>
      <node id="36">
        <label>ub_var_string</label>
        <link refid="structub__var__string"/>
        <childnode refid="4" relation="usage">
          <edgelabel>value</edgelabel>
          <edgelabel>varname</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>name_length</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>global</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>uint8_t</label>
      </node>
      <node id="37">
        <label>for_state</label>
        <link refid="structfor__state"/>
        <childnode refid="4" relation="usage">
          <edgelabel>for_variable</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>line_after_for</edgelabel>
          <edgelabel>step</edgelabel>
          <edgelabel>to</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>ub_proc_fn_def</label>
        <link refid="structub__proc__fn__def"/>
        <childnode refid="34" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>line</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>params</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>void(*)(const void *item)</label>
      </node>
      <node id="9">
        <label>basic_ctx</label>
        <link refid="structbasic__ctx"/>
        <childnode refid="10" relation="usage">
          <edgelabel>allocator</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fn_type</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>double_array_variables</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>string_array_variables</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>int_variables</edgelabel>
          <edgelabel>local_int_variables</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>call_stack</edgelabel>
          <edgelabel>call_stack_ptr</edgelabel>
          <edgelabel>debug_breakpoint_count</edgelabel>
          <edgelabel>debug_breakpoints</edgelabel>
          <edgelabel>for_stack_ptr</edgelabel>
          <edgelabel>if_nest_level</edgelabel>
          <edgelabel>repeat_stack</edgelabel>
          <edgelabel>repeat_stack_ptr</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>item_begin</edgelabel>
          <edgelabel>nextptr</edgelabel>
          <edgelabel>program_ptr</edgelabel>
          <edgelabel>ptr</edgelabel>
          <edgelabel>string</edgelabel>
          <edgelabel>string_gc_storage</edgelabel>
          <edgelabel>string_gc_storage_next</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>lines</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>cons</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>current_linenum</edgelabel>
          <edgelabel>eval_linenum</edgelabel>
          <edgelabel>highest_line</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>graphics_colour</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>oldlen</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>double_variables</edgelabel>
          <edgelabel>local_double_variables</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>bracket_depth</edgelabel>
          <edgelabel>current_token</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>int_array_variables</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>debug_status</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>claimed_flip</edgelabel>
          <edgelabel>ended</edgelabel>
          <edgelabel>errored</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>sprites</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>defs</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>local_string_variables</edgelabel>
          <edgelabel>str_variables</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>fn_return</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>for_stack</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>last_cpuid_result</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>param</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>ub_return_type</label>
      </node>
      <node id="21">
        <label>bool</label>
      </node>
      <node id="8">
        <label>int64_t</label>
      </node>
      <node id="4">
        <label>char</label>
      </node>
      <node id="5">
        <label>console</label>
        <link refid="structconsole"/>
        <childnode refid="4" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>dirty</edgelabel>
          <edgelabel>internalbuffer</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bufcnt</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>attributes</edgelabel>
          <edgelabel>last</edgelabel>
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>void(*)(const void *)</label>
      </node>
    </collaborationgraph>
    <location file="include/taskswitch.h" line="65" column="1" bodyfile="include/taskswitch.h" bodystart="65" bodyend="84"/>
    <listofallmembers>
      <member refid="structprocess__t_1ac5c17010c97fc19cead0529f1bc3a380" prot="public" virt="non-virtual"><scope>process_t</scope><name>check_idle</name></member>
      <member refid="structprocess__t_1aac89744257f50e77369d583e70974822" prot="public" virt="non-virtual"><scope>process_t</scope><name>code</name></member>
      <member refid="structprocess__t_1a80a803afc53644e36db504d3dc22b3f4" prot="public" virt="non-virtual"><scope>process_t</scope><name>cons</name></member>
      <member refid="structprocess__t_1a9efd67622874d1d026fb44b259569ac9" prot="public" virt="non-virtual"><scope>process_t</scope><name>cpu</name></member>
      <member refid="structprocess__t_1a9b3ddad1d78a30249998440a837922b3" prot="public" virt="non-virtual"><scope>process_t</scope><name>csd</name></member>
      <member refid="structprocess__t_1a03df500e6a022a5c1f061c8af547476e" prot="public" virt="non-virtual"><scope>process_t</scope><name>directory</name></member>
      <member refid="structprocess__t_1a07aef83877679df4398fa641ff557519" prot="public" virt="non-virtual"><scope>process_t</scope><name>gid</name></member>
      <member refid="structprocess__t_1aa1c947b3c296d37a2290e44c96d68e7c" prot="public" virt="non-virtual"><scope>process_t</scope><name>idle_context</name></member>
      <member refid="structprocess__t_1a39b862a83f8dc13357cfd8cdc8f64a9d" prot="public" virt="non-virtual"><scope>process_t</scope><name>name</name></member>
      <member refid="structprocess__t_1a35426bef9435a3bc4399ee832dab5cf2" prot="public" virt="non-virtual"><scope>process_t</scope><name>next</name></member>
      <member refid="structprocess__t_1a0cea0ed21d2f6ed41a5c99b947041eea" prot="public" virt="non-virtual"><scope>process_t</scope><name>pid</name></member>
      <member refid="structprocess__t_1a5bec0e4d8de103748bb6cba6ff37291a" prot="public" virt="non-virtual"><scope>process_t</scope><name>ppid</name></member>
      <member refid="structprocess__t_1a319121e790b8160ed34c39eba2befe06" prot="public" virt="non-virtual"><scope>process_t</scope><name>prev</name></member>
      <member refid="structprocess__t_1afb5ad7c637ed36d339e8e9a1027e9aff" prot="public" virt="non-virtual"><scope>process_t</scope><name>size</name></member>
      <member refid="structprocess__t_1a4ecc4cac7db5cdf92547364b666dcd9c" prot="public" virt="non-virtual"><scope>process_t</scope><name>start_time</name></member>
      <member refid="structprocess__t_1a40e84a87e647e4e0f10f32668c8ed3ab" prot="public" virt="non-virtual"><scope>process_t</scope><name>state</name></member>
      <member refid="structprocess__t_1a5ca3ea3c45957d39b8993fedc08692b2" prot="public" virt="non-virtual"><scope>process_t</scope><name>uid</name></member>
      <member refid="structprocess__t_1ade947bc49b3c970c9b6fe15da2f12f9b" prot="public" virt="non-virtual"><scope>process_t</scope><name>waitpid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
