<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="idt_8h" kind="file" language="C++">
    <compoundname>idt.h</compoundname>
    <includedby refid="kernel_8h" local="yes">include/kernel.h</includedby>
    <invincdepgraph>
      <node id="154">
        <label>src/memcpy.c</label>
        <link refid="memcpy_8c"/>
      </node>
      <node id="14">
        <label>src/basic/console.c</label>
        <link refid="console_8c"/>
      </node>
      <node id="103">
        <label>src/basic/reflection.c</label>
        <link refid="reflection_8c"/>
      </node>
      <node id="141">
        <label>src/fs/fat32/main.c</label>
        <link refid="fs_2fat32_2main_8c"/>
      </node>
      <node id="137">
        <label>src/fs/fat32/createfile.c</label>
        <link refid="fat32_2createfile_8c"/>
      </node>
      <node id="72">
        <label>src/fs/retrofs/helpers.c</label>
        <link refid="fs_2retrofs_2helpers_8c"/>
      </node>
      <node id="7">
        <label>include/basic.h</label>
        <link refid="basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>src/basic/tokenizer.c</label>
        <link refid="tokenizer_8c"/>
      </node>
      <node id="12">
        <label>include/basic/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>src/errorhandler.c</label>
        <link refid="errorhandler_8c"/>
      </node>
      <node id="64">
        <label>include/ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>src/fs/fat32/cluster.c</label>
        <link refid="cluster_8c"/>
      </node>
      <node id="21">
        <label>src/fs/filesystem.c</label>
        <link refid="filesystem_8c"/>
      </node>
      <node id="114">
        <label>src/block/ahci/main.c</label>
        <link refid="block_2ahci_2main_8c"/>
      </node>
      <node id="108">
        <label>src/basic/variable.c</label>
        <link refid="variable_8c"/>
      </node>
      <node id="77">
        <label>src/fs/retrofs/unlinkdirectory.c</label>
        <link refid="unlinkdirectory_8c"/>
      </node>
      <node id="44">
        <label>src/installer/helpers.c</label>
        <link refid="installer_2helpers_8c"/>
      </node>
      <node id="3">
        <label>include/acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>src/random.c</label>
        <link refid="random_8c"/>
      </node>
      <node id="5">
        <label>include/arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>include/dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>src/net/net.c</label>
        <link refid="net_8c"/>
      </node>
      <node id="6">
        <label>include/basic/peekpoke.h</label>
        <link refid="peekpoke_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>include/fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>src/interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="87">
        <label>include/udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/printf.c</label>
        <link refid="printf_8c"/>
      </node>
      <node id="96">
        <label>src/basic/function.c</label>
        <link refid="function_8c"/>
      </node>
      <node id="51">
        <label>include/iso9660.h</label>
        <link refid="iso9660_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>include/tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>src/taskswitch.c</label>
        <link refid="taskswitch_8c"/>
      </node>
      <node id="164">
        <label>src/net/queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="26">
        <label>include/devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/block_cache.h</label>
        <link refid="block__cache_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>src/installer/main.c</label>
        <link refid="installer_2main_8c"/>
      </node>
      <node id="1">
        <label>include/idt.h</label>
        <link refid="idt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>src/fs/retrofs/fsmap.c</label>
        <link refid="fsmap_8c"/>
      </node>
      <node id="29">
        <label>include/drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>src/input.c</label>
        <link refid="input_8c"/>
      </node>
      <node id="69">
        <label>src/fs/retrofs/format.c</label>
        <link refid="format_8c"/>
      </node>
      <node id="170">
        <label>src/stdlib.c</label>
        <link refid="stdlib_8c"/>
      </node>
      <node id="41">
        <label>include/installer.h</label>
        <link refid="installer_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>src/fs/fat32/writefile.c</label>
        <link refid="fat32_2writefile_8c"/>
      </node>
      <node id="100">
        <label>src/basic/maths.c</label>
        <link refid="basic_2maths_8c"/>
      </node>
      <node id="161">
        <label>src/net/icmp.c</label>
        <link refid="icmp_8c"/>
      </node>
      <node id="120">
        <label>src/block/ramdisk.c</label>
        <link refid="ramdisk_8c"/>
      </node>
      <node id="121">
        <label>src/buddy_allocator.c</label>
        <link refid="buddy__allocator_8c"/>
      </node>
      <node id="79">
        <label>include/rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>src/net/ip.c</label>
        <link refid="ip_8c"/>
      </node>
      <node id="9">
        <label>src/installer/tui.c</label>
        <link refid="tui_8c"/>
      </node>
      <node id="151">
        <label>src/keyboard.c</label>
        <link refid="keyboard_8c"/>
      </node>
      <node id="155">
        <label>src/module_loader.c</label>
        <link refid="module__loader_8c"/>
      </node>
      <node id="94">
        <label>src/basic/debugger.c</label>
        <link refid="basic_2debugger_8c"/>
      </node>
      <node id="68">
        <label>src/fs/retrofs/createfile.c</label>
        <link refid="retrofs_2createfile_8c"/>
      </node>
      <node id="95">
        <label>src/basic/file_io.c</label>
        <link refid="file__io_8c"/>
      </node>
      <node id="75">
        <label>src/fs/retrofs/truncatefile.c</label>
        <link refid="retrofs_2truncatefile_8c"/>
      </node>
      <node id="125">
        <label>src/debug_ringbuffer.c</label>
        <link refid="debug__ringbuffer_8c"/>
      </node>
      <node id="135">
        <label>src/fs/devfs/devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="134">
        <label>src/fs/devfs/debuglog.c</label>
        <link refid="debuglog_8c"/>
      </node>
      <node id="158">
        <label>src/net/descriptor.c</label>
        <link refid="descriptor_8c"/>
      </node>
      <node id="104">
        <label>src/basic/sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="174">
        <label>src/video.c</label>
        <link refid="video_8c"/>
      </node>
      <node id="59">
        <label>include/module.h</label>
        <link refid="module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>src/fs/retrofs/unlink.c</label>
        <link refid="unlink_8c"/>
      </node>
      <node id="88">
        <label>src/acpi.c</label>
        <link refid="acpi_8c"/>
      </node>
      <node id="43">
        <label>src/installer/gpt_writer.c</label>
        <link refid="gpt__writer_8c"/>
      </node>
      <node id="97">
        <label>src/basic/graphics.c</label>
        <link refid="graphics_8c"/>
      </node>
      <node id="117">
        <label>src/block/ahci/storage_device.c</label>
        <link refid="storage__device_8c"/>
      </node>
      <node id="153">
        <label>src/maths.c</label>
        <link refid="maths_8c"/>
      </node>
      <node id="73">
        <label>src/fs/retrofs/main.c</label>
        <link refid="fs_2retrofs_2main_8c"/>
      </node>
      <node id="57">
        <label>src/e1000.c</label>
        <link refid="e1000_8c"/>
      </node>
      <node id="126">
        <label>src/debugger.c</label>
        <link refid="debugger_8c"/>
      </node>
      <node id="15">
        <label>src/basic/double_expression.c</label>
        <link refid="double__expression_8c"/>
      </node>
      <node id="173">
        <label>src/timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="116">
        <label>src/block/ahci/sense.c</label>
        <link refid="sense_8c"/>
      </node>
      <node id="23">
        <label>include/cv.h</label>
        <link refid="cv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>src/flanterm/flanterm.c</label>
        <link refid="flanterm_8c"/>
      </node>
      <node id="167">
        <label>src/pci.c</label>
        <link refid="pci_8c"/>
      </node>
      <node id="101">
        <label>src/basic/peekpoke.c</label>
        <link refid="peekpoke_8c"/>
      </node>
      <node id="17">
        <label>src/basic/int_expression.c</label>
        <link refid="int__expression_8c"/>
      </node>
      <node id="111">
        <label>src/block/ahci/enquiry.c</label>
        <link refid="enquiry_8c"/>
      </node>
      <node id="63">
        <label>include/printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>include/e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>include/lapic_timer.h</label>
        <link refid="lapic__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>src/net/debug.c</label>
        <link refid="debug_8c"/>
      </node>
      <node id="92">
        <label>src/basic/array.c</label>
        <link refid="array_8c"/>
      </node>
      <node id="119">
        <label>src/block/ahci/write.c</label>
        <link refid="write_8c"/>
      </node>
      <node id="38">
        <label>include/initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>src/net/arp.c</label>
        <link refid="arp_8c"/>
      </node>
      <node id="33">
        <label>include/fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>src/fs/fat32/lfn.c</label>
        <link refid="lfn_8c"/>
      </node>
      <node id="81">
        <label>src/serial.c</label>
        <link refid="serial_8c"/>
      </node>
      <node id="80">
        <label>include/serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>src/fpu.c</label>
        <link refid="fpu_8c"/>
      </node>
      <node id="130">
        <label>src/flanterm/fb.c</label>
        <link refid="fb_8c"/>
      </node>
      <node id="105">
        <label>src/basic/statement.c</label>
        <link refid="statement_8c"/>
      </node>
      <node id="150">
        <label>src/ioapic.c</label>
        <link refid="ioapic_8c"/>
      </node>
      <node id="37">
        <label>include/icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>src/kmalloc.c</label>
        <link refid="kmalloc_8c"/>
      </node>
      <node id="147">
        <label>src/gdt.c</label>
        <link refid="gdt_8c"/>
      </node>
      <node id="19">
        <label>src/basic/unified_expression.c</label>
        <link refid="unified__expression_8c"/>
      </node>
      <node id="58">
        <label>src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="159">
        <label>src/net/dhcp.c</label>
        <link refid="dhcp_8c"/>
      </node>
      <node id="56">
        <label>include/mmio.h</label>
        <link refid="mmio_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>include/ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>src/containers/vector.c</label>
        <link refid="vector_8c"/>
      </node>
      <node id="98">
        <label>src/basic/lowlevel.c</label>
        <link refid="lowlevel_8c"/>
      </node>
      <node id="91">
        <label>src/ata.c</label>
        <link refid="ata_8c"/>
      </node>
      <node id="133">
        <label>src/fs/block_cache.c</label>
        <link refid="block__cache_8c"/>
      </node>
      <node id="71">
        <label>src/fs/retrofs/getdirectory.c</label>
        <link refid="getdirectory_8c"/>
      </node>
      <node id="18">
        <label>src/basic/string_expression.c</label>
        <link refid="string__expression_8c"/>
      </node>
      <node id="86">
        <label>src/tinyalloc.c</label>
        <link refid="tinyalloc_8c"/>
      </node>
      <node id="110">
        <label>src/block/ahci/eject.c</label>
        <link refid="eject_8c"/>
      </node>
      <node id="93">
        <label>src/basic/datetime.c</label>
        <link refid="datetime_8c"/>
      </node>
      <node id="169">
        <label>src/rtl8139.c</label>
        <link refid="rtl8139_8c"/>
      </node>
      <node id="16">
        <label>src/basic/flow_control.c</label>
        <link refid="flow__control_8c"/>
      </node>
      <node id="54">
        <label>include/maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>src/idt.c</label>
        <link refid="idt_8c"/>
      </node>
      <node id="46">
        <label>src/installer/os_detection.c</label>
        <link refid="os__detection_8c"/>
      </node>
      <node id="39">
        <label>src/init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="109">
        <label>src/block/ahci/description.c</label>
        <link refid="description_8c"/>
      </node>
      <node id="84">
        <label>include/tinyalloc.h</label>
        <link refid="tinyalloc_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>src/fs/iso9660.c</label>
        <link refid="iso9660_8c"/>
      </node>
      <node id="165">
        <label>src/net/tcp.c</label>
        <link refid="tcp_8c"/>
      </node>
      <node id="115">
        <label>src/block/ahci/read.c</label>
        <link refid="read_8c"/>
      </node>
      <node id="67">
        <label>src/fs/retrofs/createdirectory.c</label>
        <link refid="createdirectory_8c"/>
      </node>
      <node id="42">
        <label>src/installer/crc32.c</label>
        <link refid="crc32_8c"/>
      </node>
      <node id="166">
        <label>src/net/udp.c</label>
        <link refid="udp_8c"/>
      </node>
      <node id="139">
        <label>src/fs/fat32/fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="31">
        <label>include/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>src/apic.c</label>
        <link refid="apic_8c"/>
      </node>
      <node id="55">
        <label>include/memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>include/partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>include/random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>src/block/ahci/error.c</label>
        <link refid="error_8c"/>
      </node>
      <node id="122">
        <label>src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="24">
        <label>include/debug_ringbuffer.h</label>
        <link refid="debug__ringbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>src/ap.c</label>
        <link refid="ap_8c"/>
      </node>
      <node id="36">
        <label>src/devicename.c</label>
        <link refid="devicename_8c"/>
      </node>
      <node id="146">
        <label>src/fs/partition.c</label>
        <link refid="partition_8c"/>
      </node>
      <node id="82">
        <label>include/taskswitch.h</label>
        <link refid="taskswitch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>src/fs/fat32/unlinkfile.c</label>
        <link refid="unlinkfile_8c"/>
      </node>
      <node id="102">
        <label>src/basic/process.c</label>
        <link refid="process_8c"/>
      </node>
      <node id="106">
        <label>src/basic/string.c</label>
        <link refid="basic_2string_8c"/>
      </node>
      <node id="34">
        <label>include/hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>include/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>src/basic/main.c</label>
        <link refid="basic_2main_8c"/>
      </node>
      <node id="138">
        <label>src/fs/fat32/directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="142">
        <label>src/fs/fat32/readfile.c</label>
        <link refid="fat32_2readfile_8c"/>
      </node>
      <node id="113">
        <label>src/block/ahci/identify.c</label>
        <link refid="identify_8c"/>
      </node>
      <node id="48">
        <label>include/interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>src/ethernet.c</label>
        <link refid="ethernet_8c"/>
      </node>
      <node id="143">
        <label>src/fs/fat32/truncatefile.c</label>
        <link refid="fat32_2truncatefile_8c"/>
      </node>
      <node id="160">
        <label>src/net/dns.c</label>
        <link refid="dns_8c"/>
      </node>
      <node id="118">
        <label>src/block/ahci/trim.c</label>
        <link refid="trim_8c"/>
      </node>
      <node id="11">
        <label>include/basic/tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>src/kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="123">
        <label>src/containers/map.c</label>
        <link refid="map_8c"/>
      </node>
      <node id="62">
        <label>include/pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/containers/hashmap.c</label>
        <link refid="hashmap_8c"/>
      </node>
      <node id="27">
        <label>include/dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>src/string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="152">
        <label>src/lapic_timer.c</label>
        <link refid="lapic__timer_8c"/>
      </node>
      <node id="13">
        <label>include/basic/unified_expression.h</label>
        <link refid="unified__expression_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>src/installer/recursive_file_copy.c</label>
        <link refid="recursive__file__copy_8c"/>
      </node>
      <node id="127">
        <label>src/drawing.c</label>
        <link refid="drawing_8c"/>
      </node>
      <node id="66">
        <label>include/retrofs.h</label>
        <link refid="retrofs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>src/fs/retrofs/writefile.c</label>
        <link refid="retrofs_2writefile_8c"/>
      </node>
      <node id="74">
        <label>src/fs/retrofs/readfile.c</label>
        <link refid="retrofs_2readfile_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structidt__ptr__t" prot="public">idt_ptr_t</innerclass>
    <innerclass refid="structidt__entry__t" prot="public">idt_entry_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="idt_8h_1a2f1acd8b2febbced6e8918fa9084d00d" prot="public" static="no">
        <name>USE_IOAPIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="8" column="9" bodyfile="include/idt.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idt_8h_1a87cbc7cff225b4ad63d67d47c21f933f" prot="public" static="no">
        <name>MAX_CPUS</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>MAX_CPUS is set to 256 (not the expected physical core count).</para>
</simplesect>
Local APIC IDs in xAPIC mode are 8-bit fields (0–255). These IDs are not guaranteed to be sequential, zero-based, or densely packed. Some systems leave gaps in the LAPIC ID space, and the bootstrap processor (BSP) may not be assigned LAPIC ID 0.</para>
<para>In x2APIC mode, APIC IDs extend to 32 bits. If firmware enables x2APIC before handoff, we accept it and operate in that mode, but we currently only initialise CPUs whose LAPIC IDs are &lt;= 254. LAPIC ID 255 is reserved for broadcast and never used. Any CPUs with IDs above 254 are ignored.</para>
<para>By sizing arrays to 256, we can index directly by LAPIC ID without needing a LAPIC-&gt;OS CPU remapping table. This simplifies per‑CPU structures at the cost of a small amount of extra memory. Future support for &gt;254 LAPIC IDs may require remapping or dynamic allocation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="45" column="9" bodyfile="include/idt.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="idt_8h_1a7a3af27140adcc73f278f9d9c9dcd4bc" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* isr_t) (uint8_t isrnumber, uint64_t errorcode, uint64_t irqnumber, void *opaque)</definition>
        <argsstring>)(uint8_t isrnumber, uint64_t errorcode, uint64_t irqnumber, void *opaque)</argsstring>
        <name>isr_t</name>
        <briefdescription>
<para>Function pointer type for interrupt and IRQ handlers. </para>
        </briefdescription>
        <detaileddescription>
<para>This defines the signature of an interrupt service routine (ISR) that may be registered via <computeroutput>register_interrupt_handler</computeroutput>. It will be called whenever a matching interrupt or IRQ occurs.</para>
<para>All handlers receive the interrupt vector number, error code (if any), the IRQ number (for hardware IRQs, this is <computeroutput>isrnumber - 32</computeroutput>), and a user-defined opaque pointer that was passed during registration. This allows for stateful or device-specific behaviour in shared or reentrant interrupt contexts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isrnumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The IDT entry number (0–255), corresponding to the triggered interrupt vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorcode</parametername>
</parameternamelist>
<parameterdescription>
<para>A CPU-generated error code for certain exceptions (e.g. page faults). Always 0 for IRQs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irqnumber</parametername>
</parameternamelist>
<parameterdescription>
<para>For IRQs, this is typically <computeroutput>isrnumber - 32</computeroutput>; otherwise 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opaque</parametername>
</parameternamelist>
<parameterdescription>
<para>The same pointer that was passed to <computeroutput>register_interrupt_handler</computeroutput>; used for context or state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="65" column="9" bodyfile="include/idt.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="idt_8h_1ab28e82ae69032cb4ad3ec3a0be3d7129" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t limit</definition>
        <argsstring></argsstring>
        <name>limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="0" column="10" bodyfile="include/idt.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1aeca790c0426654358d031f8180e84aca" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>uint64_t base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="1" column="6" bodyfile="include/idt.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a76ea706dc2651399cf5716cb5a43d784" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t offset_1</definition>
        <argsstring></argsstring>
        <name>offset_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="0" column="13" bodyfile="include/idt.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a1c44289c163c1460544d6ee0900d02ba" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t selector</definition>
        <argsstring></argsstring>
        <name>selector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="1" column="13" bodyfile="include/idt.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a254d5bd1552992f9c17e038f363987ec" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ist</definition>
        <argsstring></argsstring>
        <name>ist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="2" column="13" bodyfile="include/idt.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a771f46b9319de86ef361459e347db04f" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t type_attributes</definition>
        <argsstring></argsstring>
        <name>type_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="3" column="13" bodyfile="include/idt.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1aa18dd24379a45a52460ba2a95194cdb2" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t offset_2</definition>
        <argsstring></argsstring>
        <name>offset_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="4" column="13" bodyfile="include/idt.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a4be04fdeed2e2f7a688472f0f38390fc" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t offset_3</definition>
        <argsstring></argsstring>
        <name>offset_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="5" column="13" bodyfile="include/idt.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a85a38ad3adb021b224bf4d87a0465119" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t zero</definition>
        <argsstring></argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="6" column="13" bodyfile="include/idt.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idt_8h_1a7fea997d947588217b4eff20c7b8dce3" prot="public" static="no" mutable="no">
        <type><ref refid="structidt__ptr__t" kindref="compound">idt_ptr_t</ref></type>
        <definition>volatile idt_ptr_t idt64</definition>
        <argsstring></argsstring>
        <name>idt64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="25" column="27" declfile="include/idt.h" declline="25" declcolumn="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="idt_8h_1a458f47d1ce87ab7b443665f1b0419534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structidt__ptr__t" kindref="compound">idt_ptr_t</ref></type>
        <definition>struct idt_ptr_t __attribute__</definition>
        <argsstring>((packed)) idt_ptr_t</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(packed)</type>
        </param>
        <briefdescription>
<para>ACPI Root System Description Pointer (RSDP) </para>
        </briefdescription>
        <detaileddescription>
<para>FAT32 FSINFO structure.</para>
<para>There is actually more to an ethernet frame than this (see the STD documents!) but we don&apos;t have access to it from the software.</para>
<para>Definition of a DHCP packet.</para>
<para>Format of an ARP packet (per RFC 826)</para>
<para>Register FIS: Host to Device (H2D).</para>
<para>Root System Description Table (RSDT)</para>
<para>Generic ACPI System Description Table Header.</para>
<para>This structure serves as the entry point to the ACPI system description tables. Its location is typically found by scanning the BIOS memory range. It may point to either the RSDT (ACPI 1.0) or XSDT (ACPI 2.0+).</para>
<para>All ACPI tables begin with this header. It is used to identify table type, length, version, and source information.</para>
<para>Points to other system description tables using 32-bit addresses. Superseded by XSDT in ACPI 2.0+ which uses 64-bit addresses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="1" column="0" bodyfile="include/scsi.h" bodystart="58" bodyend="65" declfile="include/idt.h" declline="1" declcolumn="0"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1a42ea541423c53a479403b58384e19df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_idt</definition>
        <argsstring>(void)</argsstring>
        <name>init_idt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialise the IDT and enable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up the full 256-entry Interrupt Descriptor Table (IDT), remaps or disables the legacy PIC depending on configuration, configures the PIT to 50Hz (if APIC timer is not used), and loads the IDT register. CPU interrupts are enabled at the end.</para>
<para><simplesect kind="note"><para>Called once during kernel bootstrap. Drivers must not call this directly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="78" column="6" bodyfile="src/idt.c" bodystart="83" bodyend="119" declfile="include/idt.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1a1d46d7c4e33f7136bc518c26c24bf8f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idt_init</definition>
        <argsstring>(void *idt)</argsstring>
        <name>idt_init</name>
        <param>
          <type>void *</type>
          <declname>idt</declname>
        </param>
        <briefdescription>
<para>Low-level assembly routine to populate the IDT. </para>
        </briefdescription>
        <detaileddescription>
<para>Fills the IDT with ISR and IRQ stub addresses defined in loader.S.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the IDT base.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Invoked internally by <ref refid="idt_8h_1a42ea541423c53a479403b58384e19df7" kindref="member">init_idt()</ref>. Not for driver use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="90" column="6" declfile="include/idt.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1ac58b11f9cfbfe9217a7e9a256f6a1038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pic_eoi</definition>
        <argsstring>(int irq)</argsstring>
        <name>pic_eoi</name>
        <param>
          <type>int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
<para>Send End-of-Interrupt (EOI) to the PIC. </para>
        </briefdescription>
        <detaileddescription>
<para>Notifies the PIC(s) that interrupt handling has finished. For IRQs &gt;= 8, signals both slave and master PICs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq</parametername>
</parameternamelist>
<parameterdescription>
<para>The IRQ line number (0–15).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Normally issued automatically by the kernel after invoking registered handlers. Only call directly when writing low-level PIC-specific code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="104" column="6" bodyfile="src/idt.c" bodystart="76" bodyend="81" declfile="include/idt.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1aaaf4b3f918fbda500ebf08c8b17dfb46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void io_wait</definition>
        <argsstring>(void)</argsstring>
        <name>io_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Small I/O delay for hardware synchronisation. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs an I/O write to port 0x80 to allow hardware devices (such as the PIC) time to settle after reprogramming.</para>
<para><simplesect kind="note"><para>Typically only needed by low-level kernel code. Most drivers do not need to call this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="115" column="6" bodyfile="src/idt.c" bodystart="37" bodyend="39" declfile="include/idt.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1a999453d510cd4178931cf51d7ba0ec2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int alloc_msi_vector</definition>
        <argsstring>(uint8_t cpu)</argsstring>
        <name>alloc_msi_vector</name>
        <param>
          <type>uint8_t</type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
<para>Allocate a free MSI interrupt vector on a given CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>Allocates an IDT vector in the range 64–255 for use with Message Signalled Interrupts (MSI/MSI-X), associated with the specified Local APIC ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical CPU ID of the target CPU.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector number (64–255) on success, -1 if no free vector is available on that CPU.</para>
</simplesect>
<simplesect kind="note"><para>After allocation, the driver must program the device’s MSI/MSI-X capability structure with the returned vector and Local APIC ID, and register an interrupt handler for the vector on the specified CPU. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="134" column="5" bodyfile="src/idt.c" bodystart="122" bodyend="132" declfile="include/idt.h" declline="134" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1a3567555043c64e8065fbe9f47d0dd894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_msi_vector</definition>
        <argsstring>(uint8_t cpu, int vec)</argsstring>
        <name>free_msi_vector</name>
        <param>
          <type>uint8_t</type>
          <declname>cpu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Free a previously allocated MSI interrupt vector on a given CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>Marks the given MSI vector as available for reuse on the specified Local APIC ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical CPU ID of the CPU that the vector belongs to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The MSI vector to free (64–255).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Behaviour is undefined if freeing a vector that was never allocated on the given CPU, or is still in use.</para>
</simplesect>
<simplesect kind="note"><para>Drivers should call this during teardown to avoid leaking interrupt vectors on that CPU. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="151" column="6" bodyfile="src/idt.c" bodystart="134" bodyend="140" declfile="include/idt.h" declline="151" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="idt_8h_1a65a15cc23a7bd19af939b9ff5b7bd2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load_ap_shared_idt</definition>
        <argsstring>()</argsstring>
        <name>load_ap_shared_idt</name>
        <briefdescription>
<para>Load the shared IDT and enable interrupts on an Application Processor (AP). </para>
        </briefdescription>
        <detaileddescription>
<para>This function loads the global Interrupt Descriptor Table (IDT) pointer into the AP&apos;s IDTR register using the <computeroutput>lidt</computeroutput> instruction. After the IDT is loaded, it enables external interrupts via <computeroutput>sti</computeroutput> (wrapped by <ref refid="io_8h_1a46886fcdf5af666afe41598958dc0bdd" kindref="member">interrupts_on()</ref>).</para>
<para>It is typically called during AP startup before entering the scheduler loop, ensuring that the AP can handle interrupts using the same IDT as the BSP.</para>
<para><simplesect kind="note"><para>All APs share the same IDT (idt64) in this design. </para>
</simplesect>
<simplesect kind="see"><para>lidt, <ref refid="io_8h_1a46886fcdf5af666afe41598958dc0bdd" kindref="member">interrupts_on</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/idt.h" line="166" column="6" bodyfile="src/idt.c" bodystart="142" bodyend="145" declfile="include/idt.h" declline="166" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Craig Edwards (<ulink url="mailto:craigedwards@brainbox.cc">craigedwards@brainbox.cc</ulink>) </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2012-2025 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/idt.h"/>
  </compounddef>
</doxygen>
