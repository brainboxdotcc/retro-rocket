REM *** Retro Rocket BASIC Shell ***
LIBRARY LIB$ + "/ansi"

PROCEdInit(TRUE)

REM System variables
PROMPT$ = "ROCKETSH"
PATH$ = "/programs"
VERSION$ = "2.0"

REM Welcome message
PRINT ""
PRINT "Welcome to ";
COLOR 14
PRINT "Retro Rocket ";
COLOR 7
PRINT "BASIC shell."
PRINT ""

REM Input loop
REPEAT
	PROCdisplayPrompt
	PROCEdLine
	PRINT ""
	in$ = FNEdResult$()
	PROCEdAddHistory(in$)
	IF in$ > "" THEN PROCprocessCommand(in$)
UNTIL in$ = "END"
END

REM Prompt display
DEF PROCdisplayPrompt
	COLOR 14
	PRINT PROMPT$;
	COLOR 7
	PRINT "> ";
RETPROC

REM Command Processor
DEF PROCprocessCommand(inp$)
	spaceidx = INSTR(inp$, " ")
	command$ = ""
	IF spaceidx > 0 THEN PROCextractParameters
	IF spaceidx < 1 THEN PROCnoParameters
	builtin = FALSE
	PROCbuiltins
	IF builtin = TRUE THEN RETPROC
	FH = OPENIN(PATH$ + "/" + command$)
	IF FH < 0 THEN PROCevalBasic
	IF FH > -1 THEN PROCrunCommand(command$)
RETPROC

REM extract parameters from commandline
DEF PROCextractParameters
	command$ = LEFT$(inp$, spaceidx - 1)
	GLOBAL ARGS$ = MID$(inp$, spaceidx, LEN(inp$))
RETPROC

REM commandline with no parameters
DEF PROCnoParameters
	command$ = inp$
	GLOBAL ARGS$ = ""
RETPROC

REM handle builtin commands
DEF PROCbuiltins
	IF command$ = "chdir" THEN PROCbuiltinChdir
	IF command$ = "cd" THEN PROCbuiltinChdir
	IF command$ = "run" THEN PROCbuiltinRun
	IF command$ = "version" THEN PROCversion
RETPROC

REM display version information
DEF PROCversion
	PRINT "┌─────────────────────────────────────────────────────┐"
	PRINT "│ ";
	COLOR 14
	PRINT "rocketsh ";
	COLOR 7
	PRINT "Retro Rocket Shell version "; VERSION$; "             │"
	PRINT "├─────────────────────────────────────────────────────┤"
	PRINT "│ Licensed under the Apache 2.0 License.              │"
	PRINT "│ (C) Craig Edwards, Brainbox.cc 2012-"; YEAR(FALSE) ;"            │"
	PRINT "└─────────────────────────────────────────────────────┘"
	builtin = TRUE
RETPROC

REM change directory
DEF PROCbuiltinChdir
	EVAL "CHDIR " + CHR$(34) + ARGS$ + CHR$(34)
	builtin = TRUE
RETPROC

REM run command without awareness of shell (no ARGS$)
DEF PROCbuiltinRun
	EVAL "CHAIN " + CHR$(34) + ARGS$ + CHR$(34)
	builtin = TRUE
RETPROC

REM evaluate BASIC statement in context of shell
DEF PROCevalBasic
	EVAL inp$
RETPROC

REM run a command within the PATH$
DEF PROCrunCommand(cmd$)
	CLOSE FH
	CHAIN PATH$ + "/" + cmd$
RETPROC
